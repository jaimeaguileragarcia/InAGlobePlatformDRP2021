{"version":3,"sources":["Navbar.js","ProjectList.js","UserList.js","useFetch.js","Home.js","CreateProject.js","ProjectDetails.js","PageNotFound.js","MyProfile.js","User.js","AddUser.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","style","color","fontSize","borderRadius","to","ProjectList","projects","title","map","project","id","name","status","UserList","users","user","username","firstname","surname","useFetch","url","useState","data","setData","error","setError","useEffect","fetch","then","res","ok","Error","json","console","log","catch","err","message","Home","error1","error2","filter","CreateProject","setName","desc","setDesc","setStatus","tag","setTag","location","setLocation","drive_link","setDriveLink","history","useHistory","onSubmit","e","preventDefault","newProject","method","headers","body","JSON","stringify","push","type","required","value","onChange","target","ProjectDetails","useParams","description","onClick","PageNotFound","MyProfile","email","bio","joined","availability","partnership_opportunities","interests","User","AddUser","setFirstname","setSurname","password","setPassword","setEmail","setBio","setJoined","setAvailability","setPartnership_opportunities","setInterests","setUsername","newUser","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.4fda840a.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar\" >\n            <a href=\"/\" style={{ \n                color: '#ff4e83',\n                fontSize: '20px',\n                borderRadius: '8px' \n            }}>InAGlobe Platform</a>\n            <div className=\"links\"> \n                <Link to={`/create-project`}>New Project</Link>\n                <Link to={`/my-profile`}>My Profile</Link>\n                <Link to={`/add-user`}>Add User</Link>\n            </div>\n        </nav>\n    );\n}\n \nexport default Navbar;","import { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects, title }) => {\n\n    return (\n        <div className=\"project-list\">\n            <h2>{title}</h2>\n            {projects.map((project) => (\n                <div className=\"project-preview\" key={project.id}>\n                    <Link to={`/projects/${project.id}`}>\n                        <h2>{project.name}</h2>\n                        <h3>{project.status}</h3>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default ProjectList;","import { Link } from 'react-router-dom'\n\nconst UserList = ({ users }) => {\n\n    return (\n        <div className=\"user-list\">\n\n            {users.map((user) => (\n                <div className=\"user-preview\" key={user.username}>\n                    <Link to={`/users/${user.username}`}>\n                        <h2>{user.firstname}</h2>\n                        <h3>{user.surname}</h3>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default UserList;","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(url)\n        .then(res => {\n            if (!res.ok) { // error coming back from server\n                throw Error('could not fetch the data for that resource');\n            } \n            return res.json();\n        })\n        .then(data => {\n            setData(data);\n            setError(null);\n            console.log({data})\n        })\n        .catch(err => {\n            // auto catches network / connection error\n            setError(err.message);\n        })\n  }, [url])\n\n  return { data, error };\n}\n \nexport default useFetch;","import {useEffect, useState} from 'react'\nimport { Link } from \"react-router-dom\"\nimport ProjectList from './ProjectList'\nimport UserList from './UserList'\nimport useFetch from './useFetch'\n\nconst Home = () => {\n\n    const {data: projects, error1} = useFetch(\"/projects\")\n    const {data: users, error2} = useFetch(\"/users\")\n\n    return (\n        <div className=\"home\">\n            <h1>Dashboard</h1>\n            <ProjectList projects={projects} title=\"All Projects\"/>\n            <ProjectList projects={projects.filter(project => project.status === \"Completed\")} title=\"Completed Projects\"/>\n            <h2>Users</h2>\n            <UserList users={users} title=\"All Users\"/>\n        </div>\n    );\n}\n \nexport default Home;","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\nconst CreateProject = () => {\n    const [name, setName] = useState(\"Input project name\");\n    const [desc, setDesc] = useState(\"Add some awesome description!\");\n    const [status, setStatus] = useState(\"Available\");\n    const [tag, setTag] = useState(\"Other\");\n    const [location, setLocation] = useState(\"\");\n    const [drive_link, setDriveLink] = useState(\"Copy the link to the Google Drive folder for this project\");\n\n    const history = useHistory();\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const newProject = {name, desc, status, tag, location, drive_link};\n\n        fetch(\"/projects\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\"},\n            body: JSON.stringify(newProject)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"create-project\">\n            <h2>Add a new project</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Project name</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <label>Description</label>\n                <textarea required value={desc} onChange={(e) => setDesc(e.target.value)}></textarea>\n                <label>Status</label>\n                <select value={status} onChange={(e) => setStatus(e.target.value)}>\n                    <option value=\"Progress\">Progress</option>\n                    <option value=\"Available\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <label>Location</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                />\n                <label>Type of project</label>\n                <select value={tag} onChange={(e) => setTag(e.target.value)}>\n                    <option value=\"Social\">Social</option>\n                    <option value=\"Education\">Education</option>\n                    <option value=\"Wash\">Wash</option>\n                    <option value=\"Environment\">Environment</option>\n                    <option value=\"Health\">Health</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <label>Google Drive folder</label>\n                <textarea required value={drive_link} onChange={(e) => setDriveLink(e.target.value)}></textarea>\n                <button>Add project</button>\n            </form>\n        </div>\n    );\n}\n \nexport default CreateProject;","import { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport useRemove from './useRemove'\n\nconst ProjectDetails = () => {\n    const {id} = useParams();\n    const history = useHistory();\n\n    const {data: project, error} = useFetch(\"/projects/\" + id)\n\n    const handleRemove = e => {\n        e.preventDefault()\n        fetch(\"/projects/\" + id, {method: 'DELETE'})\n            .then(()=> {history.push('/');})\n      };\n\n    return ( \n        <div className=\"project-details\">\n            {project && <h2>{project.name}</h2>}\n            {project && <h3>Status: {project.status}</h3>}\n            {project && <p>Descsription: {project.description}</p>}\n\n            <button onClick={handleRemove}>Delete project</button>\n        </div>\n        \n     );\n}\n \nexport default ProjectDetails;","import { Link } from \"react-router-dom\"\n\nconst PageNotFound = () => {\n    return (\n        <div className=\"page-not-found\">\n            <h2>Something went wrong...</h2>\n            <p>That page cannot be found</p>\n            <Link to='/'>Back to the main page</Link>\n        </div>\n    );\n}\n \nexport default PageNotFound;","import { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\n\nconst MyProfile = () => {\n    const {username} = useParams();\n    const history = useHistory();\n    \n    const {data: user, error} = useFetch(\"/users/\" + username)\n    \n\n    return (\n        <div className=\"my-profile\">\n        {user && <h2>{user.firstname + \" \" + user.surname}</h2>}\n        {user && <h1>{\"Username: \" + user.username}</h1>}\n        {user && <h1>{\"Title: \" + user.title}</h1>}\n        {user && <h1>{\"Email: \" + user.email}</h1>}\n        {user && <h1>{\"Bio: \" + user.bio}</h1>}\n        {user && <h1>{\"Joined: \" + user.joined}</h1>}\n        {user && <h1>{\"Location: \" + user.location}</h1>}\n        {user && <h1>{\"Availability: \" + user.availability}</h1>}\n        {user && <h1>{\"Partnership Opportunities: \" + user.partnership_opportunities}</h1>}\n        {user && <h1>{\"Interests: \" + user.interests}</h1>}\n    \n\n     \n    </div>\n    );\n}\n \nexport default MyProfile;\n\n\n\n","import { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\n\nconst User = () => {\n    const {username} = useParams();\n    const history = useHistory();\n    \n    const {data: user, error} = useFetch(\"/users/\" + username)\n    \n\n    return (\n        <div className=\"user\">\n        {user && <h2>{user.firstname + \" \" + user.surname}</h2>}\n        {user && <h1>{\"Username: \" + user.username}</h1>}\n        {user && <h1>{\"Title: \" + user.title}</h1>}\n        {user && <h1>{\"Email: \" + user.email}</h1>}\n        {user && <h1>{\"Bio: \" + user.bio}</h1>}\n        {user && <h1>{\"Joined: \" + user.joined}</h1>}\n        {user && <h1>{\"Location: \" + user.location}</h1>}\n        {user && <h1>{\"Availability: \" + user.availability}</h1>}\n        {user && <h1>{\"Partnership Opportunities: \" + user.partnership_opportunities}</h1>}\n        {user && <h1>{\"Interests: \" + user.interests}</h1>}\n    \n    \n\n     \n    </div>\n    );\n}\n \nexport default User;","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\n\n\nconst AddUser = () => {\n    const [firstname, setFirstname] = useState(\"Input project name\");\n    const [surname, setSurname] = useState(\"Input surname\");\n    const [password, setPassword] = useState(\"Input password\");\n    const [email, setEmail] = useState(\"Input email\");\n    const [bio, setBio] = useState(\"Input short bio\");\n    const [joined, setJoined] = useState(\"Input joined date\");\n    const [location, setLocation] = useState(\"Input location\");\n    const [availability, setAvailability] = useState(\"Input availibility\");\n    const [partnership_opportunities, setPartnership_opportunities] = useState(\"Input partners\");\n    const [interests, setInterests] = useState(\"Input interests\");\n    const [username, setUsername] = useState(\"Input username\");\n\n\n    const history = useHistory();\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const newUser = {firstname,\n            surname, \n            email, \n            bio, \n            joined, \n            location, \n            availability, \n            partnership_opportunities, \n            interests,\n            username\n        }\n\n        fetch(\"/users\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\"},\n            body: JSON.stringify(newUser)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"add-user\">\n            <h2>Add a new user</h2>\n            <form onSubmit={handleSubmit}>\n            <label>Username</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n\n\n                <label>Firstname</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={firstname}\n                    onChange={(e) => setFirstname(e.target.value)}\n                />\n\n                <label>Surname</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={surname}\n                    onChange={(e) => setSurname(e.target.value)}\n                />\n\n                <label>Password</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n\n                <label>Email</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n\n\n                <label>Bio</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={bio}\n                    onChange={(e) => setBio(e.target.value)}\n                />\n\n                <label>Joined</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={joined}\n                    onChange={(e) => setJoined(e.target.value)}\n                />\n\n\n                <label>Location</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                />\n\n                <label>Availibility</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={availability}\n                    onChange={(e) => setAvailability(e.target.value)}\n                />\n\n                <label>Parntership Opportunities</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={partnership_opportunities}\n                    onChange={(e) => setPartnership_opportunities(e.target.value)}\n                />\n\n                <label>interests</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={interests}\n                    onChange={(e) => setInterests(e.target.value)}\n                />\n\n\n             \n                <button>Add user</button>\n            </form>\n        </div>\n    );\n}\n \nexport default AddUser;","import Navbar from './Navbar'\nimport Home from './Home'\nimport CreateProject from './CreateProject'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport ProjectDetails from './ProjectDetails'\nimport PageNotFound from './PageNotFound'\nimport MyProfile from './MyProfile'\nimport User from './User'\nimport AddUser from './AddUser'\n\n\nfunction App() {\n  const title =  \"Dashboard\"\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create-project\">\n              <CreateProject />\n            </Route>\n            <Route path=\"/add-user\">\n              <AddUser />  \n            </Route>\n            <Route path=\"/my-profile\">\n              <MyProfile />\n            </Route>\n            <Route path=\"/users/:username\">\n              <User />\n            </Route>\n            <Route path=\"/projects/:id\">\n              <ProjectDetails />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}