{"version":3,"sources":["Navbar.js","ProjectList.js","useFetch.js","Home.js","CreateProject.js","ProjectDetails.js","PageNotFound.js","MyProfile.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","style","color","fontSize","borderRadius","to","ProjectList","projects","title","map","project","id","name","status","useFetch","url","useState","data","setData","error","setError","useEffect","fetch","then","res","ok","Error","json","console","log","catch","err","message","Home","filter","CreateProject","setName","desc","setDesc","setStatus","tag","setTag","location","setLocation","drive_link","setDriveLink","history","useHistory","onSubmit","e","preventDefault","newProject","method","headers","body","JSON","stringify","push","type","required","value","onChange","target","ProjectDetails","useParams","description","onClick","PageNotFound","MyProfile","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.f4ec2d6f.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar\" >\n            <a href=\"/\" style={{ \n                color: '#ff4e83',\n                fontSize: '20px',\n                borderRadius: '8px' \n            }}>InAGlobe Platform</a>\n            <div className=\"links\"> \n                <Link to={`/create-project`}>New Project</Link>\n                <Link to={`/my-profile`}>My Profile</Link>\n            </div>\n        </nav>\n    );\n}\n \nexport default Navbar;","import { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects, title }) => {\n\n    return (\n        <div className=\"project-list\">\n            <h2>{title}</h2>\n            {projects.map((project) => (\n                <div className=\"project-preview\" key={project.id}>\n                    <Link to={`/projects/${project.id}`}>\n                        <h2>{project.name}</h2>\n                        <h3>{project.status}</h3>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default ProjectList;","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(url)\n        .then(res => {\n            if (!res.ok) { // error coming back from server\n                throw Error('could not fetch the data for that resource');\n            } \n            return res.json();\n        })\n        .then(data => {\n            setData(data);\n            setError(null);\n            console.log({data})\n        })\n        .catch(err => {\n            // auto catches network / connection error\n            setError(err.message);\n        })\n  }, [url])\n\n  return { data, error };\n}\n \nexport default useFetch;","import {useEffect, useState} from 'react'\nimport { Link } from \"react-router-dom\"\nimport ProjectList from './ProjectList'\nimport useFetch from './useFetch'\n\nconst Home = () => {\n\n    const {data: projects, error} = useFetch(\"/projects\")\n\n    return (\n        <div className=\"home\">\n            <h1>Dashboard</h1>\n            <ProjectList projects={projects} title=\"All Projects\"/>\n            <ProjectList projects={projects.filter(project => project.status === \"Completed\")} title=\"Completed Projects\"/>\n        </div>\n    );\n}\n \nexport default Home;","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\nconst CreateProject = () => {\n    const [name, setName] = useState(\"Input project name\");\n    const [desc, setDesc] = useState(\"Add some awesome description!\");\n    const [status, setStatus] = useState(\"Available\");\n    const [tag, setTag] = useState(\"Other\");\n    const [location, setLocation] = useState(\"\");\n    const [drive_link, setDriveLink] = useState(\"Copy the link to the Google Drive folder for this project\");\n\n    const history = useHistory();\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const newProject = {name, desc, status, tag, location, drive_link};\n\n        fetch(\"/projects\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\"},\n            body: JSON.stringify(newProject)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"create-project\">\n            <h2>Add a new project</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Project name</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <label>Description</label>\n                <textarea required value={desc} onChange={(e) => setDesc(e.target.value)}></textarea>\n                <label>Status</label>\n                <select value={status} onChange={(e) => setStatus(e.target.value)}>\n                    <option value=\"Progress\">Progress</option>\n                    <option value=\"Available\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <label>Location</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                />\n                <label>Type of project</label>\n                <select value={tag} onChange={(e) => setTag(e.target.value)}>\n                    <option value=\"Social\">Social</option>\n                    <option value=\"Education\">Education</option>\n                    <option value=\"Wash\">Wash</option>\n                    <option value=\"Environment\">Environment</option>\n                    <option value=\"Health\">Health</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <label>Google Drive folder</label>\n                <textarea required value={drive_link} onChange={(e) => setDriveLink(e.target.value)}></textarea>\n                <button>Add project</button>\n            </form>\n        </div>\n    );\n}\n \nexport default CreateProject;","import { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport useRemove from './useRemove'\n\nconst ProjectDetails = () => {\n    const {id} = useParams();\n    const history = useHistory();\n\n    const {data: project, error} = useFetch(\"/projects/\" + id)\n\n    const handleRemove = e => {\n        e.preventDefault()\n        fetch(\"/projects/\" + id, {method: 'DELETE'})\n            .then(()=> {history.push('/');})\n      };\n\n    return ( \n        <div className=\"project-details\">\n            {project && <h2>{project.name}</h2>}\n            {project && <h3>Status: {project.status}</h3>}\n            {project && <p>Descsription: {project.description}</p>}\n\n            <button onClick={handleRemove}>Delete project</button>\n        </div>\n        \n     );\n}\n \nexport default ProjectDetails;","import { Link } from \"react-router-dom\"\n\nconst PageNotFound = () => {\n    return (\n        <div className=\"page-not-found\">\n            <h2>Something went wrong...</h2>\n            <p>That page cannot be found</p>\n            <Link to='/'>Back to the main page</Link>\n        </div>\n    );\n}\n \nexport default PageNotFound;","const MyProfile = () => {\n\n    return (\n        <dev className=\"my-profile\">\n            <h2>My Profile</h2>\n            <p>This is your profile. It doesn't do much yet but it surely will very soon:)</p>\n        </dev>\n    );\n}\n \nexport default MyProfile;","import Navbar from './Navbar'\nimport Home from './Home'\nimport CreateProject from './CreateProject'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport ProjectDetails from './ProjectDetails'\nimport PageNotFound from './PageNotFound'\nimport MyProfile from './MyProfile'\n\n\nfunction App() {\n  const title =  \"Dashboard\"\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create-project\">\n              <CreateProject />\n            </Route>\n            <Route path=\"/my-profile\">\n              <MyProfile />\n            </Route>\n            <Route path=\"/projects/:id\">\n              <ProjectDetails />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}