{"version":3,"sources":["useToken.js","Navbar.js","ProjectList.js","useFetch.js","UsersAssignedToTask.js","MyProjectTasks.js","PersonalToDo.js","Home.js","CreateProject.js","ProjectDetails.js","PageNotFound.js","MyProfile.js","User.js","UserList.js","Users.js","AddUser.js","EditProject.js","Sidebar.js","EditUser.js","ProjectTaskList.js","ProjectTasks.js","AddProjectTask.js","Login.js","ChangePassword.js","ProjectsRegistry.js","ForgotPassword.js","App.js","reportWebVitals.js","index.js"],"names":["useToken","useState","tokenString","localStorage","getItem","userToken","JSON","parse","token","getToken","setToken","setItem","stringify","Navbar","className","href","style","color","fontSize","borderRadius","to","ProjectList","projects","title","map","project","id","name","status","useFetch","url","data","setData","error","setError","isPending","setIsPending","useEffect","fetch","then","res","ok","Error","json","catch","err","message","UsersAssignedToTask","task_id","assignedUsers","user","username","firstname","surname","MyProjectTasks","tasks","task","project_name","description","priority","due_date","project_id","PersonalToDo","todos","users","todo_desc","setTodoDesc","setPriority","Date","now","setDueDate","setUsername","float","onClick","document","getElementsByClassName","display","onSubmit","e","preventDefault","newTodo","method","headers","body","window","location","reload","value","onChange","target","required","placeholder","type","todo","Home","isPendingTodos","errorTodos","isPendingRProjects","errorRProjects","project_tasks","errorProjectTasks","isPendingProjectTasks","width","filter","CreateProject","setName","setDescription","setStatus","tag","setTag","setLocation","files","setFiles","selectUsernames","setSelectUsernames","history","useHistory","handleSubmit","a","newProject","response","responseJSON","assign_project","push","includes","options","Array","isArray","x","isMulti","isClearable","ProjectDetails","useParams","assignments","errorAssignment","isPendingAssignment","marginBottom","marginright","backgroundColor","cursor","marginRight","open","PageNotFound","MyProfile","email","bio","joined","availability","partnership_opportunities","interests","User","UserList","Users","AddUser","setFirstname","setSurname","password","setPassword","setTitle","setEmail","phone_no","setPhoneNo","setBio","setJoined","setAvailability","setPartnership_opportunities","setInterests","newUser","EditProject","errorUsers","isPendingUsers","useForm","register","defaultValue","Sidebar","textDecoration","clear","EditUser","oldUserDetails","defaultValues","htmlFor","disabled","ProjectTaskList","completed","setCompleted","setProjectId","handleComplete","newTask","console","log","handleDelete","ProjectTasks","errorProject","isPendingProject","isPendingTasks","errorTasks","AddProjectTask","setAssignedUsers","participants","errorParticipants","isPendingParticipants","newProjectTask","assigned_task","loginUser","credentials","Login","setUserName","class","ChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","passwordUpdate","ProjectRegistry","isPendingProjects","errorProjects","resetPassword","msg","ForgotPassword","Math","random","toString","replace","App","exact","path","ProjectsRegistry","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"js/main.41c3d893.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport default function useToken() {\n    const getToken = () => {\n        const tokenString = localStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        return userToken?.token\n    };\n    \n    const [token, setToken] = useState(getToken());\n\n    const saveToken = userToken => {\n        localStorage.setItem('token', JSON.stringify(userToken));\n        setToken(userToken.token);\n    };\n\n    return {\n        setToken: saveToken,\n        token\n    }\n\n}","import { Link } from 'react-router-dom'\nimport useToken from './useToken';\n\nconst Navbar = () => {\n    const {setToken, token} = useToken();\n\n    return (\n        <nav className=\"navbar\" >\n            <a href=\"/\" style={{ \n                color: '#ff4e83',\n                fontSize: '20px',\n                borderRadius: '8px' \n            }}>InAGlobe Platform</a>\n            <div className=\"links\"> \n                <Link to={`/create-project`}>New Project</Link>\n                <Link to={`/users/` + token}>My Profile</Link>\n            </div>\n        </nav>\n    );\n}\n \nexport default Navbar;","import { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects, title }) => {\n\n    return (\n        <div className=\"project-list\">\n            <h2>{title}</h2>\n            {projects.map((project) => (\n                <div className=\"preview\" key={project.id}>\n                    <Link to={`/projects/${project.id}`}>\n                        <h2>{project.name}</h2>\n                        <h3>{project.status}</h3>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default ProjectList;","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n\n  useEffect(() => {\n    fetch(url)\n        .then(res => {\n            if (!res.ok) { // error coming back from server\n                throw Error('could not fetch the data for that resource');\n            } \n            return res.json();\n        })\n        .then(data => {\n            setData(data);\n            setIsPending(false);\n            setError(null);\n        })\n        .catch(err => {\n            // auto catches network / connection error\n            setError(err.message);\n        })\n  }, [url])\n\n  return { data, error, isPending };\n}\n \nexport default useFetch;","import { Link } from 'react-router-dom'\nimport useFetch from './useFetch';\n\nconst UsersAssignedToTask = ({task_id, title}) => {\n\n    const { data: assignedUsers, error, isPending } = useFetch(\"/assigned_task/task/\" + task_id);\n\n    return assignedUsers.map((user) => (\n        <div className=\"assigned_users_list\">\n            <Link to={`/users/${user.username}`}>\n                <h5>{user.firstname} {user.surname}</h5>\n            </Link>\n        </div>\n    ));\n\n}\n\nexport default UsersAssignedToTask;","import { Link } from 'react-router-dom'\nimport useFetch from './useFetch';\nimport UsersAssignedToTask from './UsersAssignedToTask';\n\nconst MyProjectTasks = ({ tasks, title }) => {\n    const FindingUsers = task_id => {\n        const { data: assignedUsers, error, isPending } = useFetch(\"/assigned_task/task/\" + task_id);\n        return assignedUsers.map((user) => (\n            <div className=\"assigned-users-list\">\n                <Link to={`/users/${user.username}`}>\n                    <h5>{user.firstname} {user.surname}</h5>\n                </Link>\n            </div>\n        ));\n    }\n\n    return (\n        <div>\n            <h2>{title}</h2>\n\n            <div className=\"my-project-tasks\">\n                {tasks.map((task) => (\n                    <div className=\"task-preview\" key={task.id}>\n                        <h2>{task.project_name}: {task.description}</h2>\n                        <h3><strong>Priority level:</strong> {task.priority}</h3>\n                        <h3><strong>To be done by:</strong> {task.due_date}</h3>\n                        <h3>All volunteers assigned to this task: </h3>\n                        <UsersAssignedToTask task_id={task.id} />\n                        <Link to={`/projects/${task.project_id}`}>\n                            <h4>Click to see the project details</h4>\n                        </Link>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default MyProjectTasks;","import useFetch from './useFetch'\nimport { useState } from \"react\";\nimport useToken from './useToken'\n\nconst PersonalToDo = ({ todos, title }) => {\n\n    const openTaskForm = () => {\n        document.getElementsByClassName(\"add-todo-form\")[0].style.display = \"block\";\n    }\n    const {setToken, token} = useToken();\n\n\n    const { data: users, error, isPending } = useFetch(\"/users\")\n\n    const [todo_desc, setTodoDesc] = useState(\"\");\n    const [priority, setPriority] = useState(1);\n    const [due_date, setDueDate] = useState(Date.now());\n    const [username, setUsername] = useState(token);\n\n    const handleSubmit = e => {\n        document.getElementsByClassName(\"add-todo-form\")[0].style.display = \"none\";\n\n        e.preventDefault();\n        const newTodo = { todo_desc, priority, due_date, username };\n\n        fetch(\"/todos\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newTodo)\n        }).then(() => {\n            window.location.reload();\n        })\n    }\n\n    const handleRemove = id => e => {\n        e.preventDefault();\n        fetch(\"/todos/\" + id, { method: 'DELETE' })\n            .then(() => {\n                window.location.reload();\n            })\n    };\n\n    return (\n        <div className=\"todo-list\" style={{float: \"right\"}}>\n            <h2>{title}</h2>\n\n            <div className=\"add-todo-button\">\n                <button onClick={openTaskForm}>Add a personal task</button>\n            </div>\n\n            { isPending && <h2>Loading...</h2> }\n\n            <div className=\"add-todo-form\">\n                { users && <form onSubmit={handleSubmit}>\n                    <label>Task description [required]</label>\n                    <textarea value={todo_desc} onChange={(e) => setTodoDesc(e.target.value)} required placeholder=\"Add some awesome description!\" ></textarea>\n                    <label>Priority level (1: lowest, 4: highest)</label>\n                    <select value={priority} onChange={(e) => setPriority(e.target.value)} >\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                    </select>\n                    <label>When should this task be done by? [required]</label>\n                    <input\n                        required\n                        type=\"date\"\n                        value={due_date}\n                        onChange={(e) => setDueDate(e.target.value)}\n                    />\n                    <label>Assigned user</label>\n                    <select value={username} onChange={(e) => setUsername(e.target.value)} >\n                        {users.map(user => <option value={user.username}>{user.username}</option>)}\n                    </select>\n                    <button>Save task</button>\n                </form> }\n            </div>\n\n            <div className=\"personal-todos\">\n                {todos.map((todo) => (\n                    <div className=\"todo-preview\" key={todo.id}>\n                        <h2>{todo.todo_desc}</h2>\n                        <h3>Priority level: {todo.priority}</h3>\n                        <h3>To be done by: {todo.due_date}</h3>\n                        <button onClick={handleRemove(todo.id)}>Complete</button>\n                    </div>\n                ))}\n            </div>\n\n        </div>\n    );\n\n}\n\nexport default PersonalToDo;","import ProjectList from './ProjectList';\nimport MyProjectTasks from './MyProjectTasks';\nimport PersonalToDo from './PersonalToDo';\nimport useFetch from './useFetch';\nimport useToken from './useToken';\nimport { useState } from \"react\";\n\nconst Home = () => {\n\n    const { data: todos, errorTodos, isPendingTodos } = useFetch(\"/todos\");\n    const { setToken, token } = useToken();\n\n    const { data: projects, errorRProjects, isPendingRProjects } = useFetch(\"/user_project/username/\" + token);\n    const {data: project_tasks, errorProjectTasks, isPendingProjectTasks} = useFetch(\"/assigned_task/username/\" + token)\n\n    return (\n        <div className=\"home\">\n            <h1>Dashboard</h1>\n            <div className=\"home-projects\" style={{ float: \"left\", width: \"600px\" }}>\n                {isPendingRProjects && <h2>Loading...</h2>}\n                {projects && <ProjectList projects={projects} title=\"My Projects\" />}\n            </div>\n            <div className=\"homeTodos\">\n                {isPendingTodos && <h2>Loading...</h2>}\n                {todos && <PersonalToDo todos={todos.filter(todo => todo.username === token)} title=\"Personal ToDo items\" />}\n            </div>\n            <div className=\"home-project-tasks\" style={{ float: \"left\", width: \"600px\" }}>\n                {isPendingRProjects && <h2>Loading...</h2>}\n                {projects && <MyProjectTasks tasks={project_tasks} title=\"My tasks from all projects\" />}\n            </div>\n        </div>\n\n    );\n}\n\nexport default Home;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport Select from 'react-select';\nimport useFetch from './useFetch'\n\nconst CreateProject = () => {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [status, setStatus] = useState(\"Available\");\n    const [tag, setTag] = useState(\"Other\");\n    const [location, setLocation] = useState(\"\");\n    const [files, setFiles] = useState(\"\");\n\n    const [selectUsernames, setSelectUsernames] = useState([]);\n\n    const history = useHistory();\n\n    const { data: users, error, isPending } = useFetch(\"/users/user_project\");\n\n    const usernames = users.map(user => user.username);\n\n    const handleChange = (e) => {\n        setSelectUsernames(Array.isArray(e) ? e.map(x => x.value) : []); \n    }\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n\n        const newProject = { name, description, status, tag, location, files };\n\n        const response = await fetch(\"/projects\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newProject)\n        });\n\n        const responseJSON = await response.json();\n\n        const project_id = responseJSON.id;\n\n        selectUsernames.map(username => {\n            const assign_project = { username, project_id };\n\n            fetch(\"/user_project\", {\n                method: 'POST',\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(assign_project)\n            });\n        });\n\n        history.push(\"/\");\n    }\n\n    return (\n        <div className=\"create-project\">\n            <h2>Add a new project</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Project name [required]</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    placeholder=\"Input project name\"\n                />\n                <label>Description [required]</label>\n                <textarea required placeholder=\"Add some awesome description!\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                <label>Status</label>\n                <select value={status} onChange={(e) => setStatus(e.target.value)}>\n                    <option value=\"Progress\">Progress</option>\n                    <option value=\"Available\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <label>Location</label>\n                <input\n                    type=\"text\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    placeholder=\"Eg: United Kingdom\"\n                />\n                <label>Type of project [required]</label>\n                <select required value={tag} onChange={(e) => setTag(e.target.value)}>\n                    <option value=\"Social\">Social</option>\n                    <option value=\"Education\">Education</option>\n                    <option value=\"Wash\">Wash</option>\n                    <option value=\"Environment\">Environment</option>\n                    <option value=\"Health\">Health</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <label>Volunteers assigned to this project</label>\n                <Select\n                    className=\"dropdown\"\n                    placeholder=\"Select Users\"\n                    value={users.filter(user => selectUsernames.includes(user.value))}\n                    options={users} // set list of the usernames\n                    onChange={handleChange} // assign onChange function\n                    isMulti\n                    isClearable\n                />\n                <label>Google Drive folder</label>\n                <textarea placeholder=\"Copy the link to the Google Drive folder for this project\" value={files} onChange={(e) => setFiles(e.target.value)}></textarea>\n                <button>Add project</button>\n            </form>\n        </div>\n    );\n}\n\n\nexport default CreateProject;","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\n\nconst ProjectDetails = () => {\n    const { id } = useParams();\n    const history = useHistory();\n\n    const { data: project, error, isPending } = useFetch(\"/projects/\" + id)\n    const { data: assignments, errorAssignment, isPendingAssignment } = useFetch(\"/user_project/project/\" + id)\n\n    const handleRemove = e => {\n        e.preventDefault()\n        fetch(\"/projects/\" + id, { method: 'DELETE' })\n            .then(() => { history.push('/'); })\n    };\n\n    return (\n        <div className=\"project-details\">\n            {isPending && <h2>Loading...</h2>}\n            {project && <h2>{project.name}</h2>}\n            {project && <button style={{\n                fontSize: '20px',\n                color: '#fff',\n                marginBottom: '30px',\n                marginright: '10px',\n                borderRadius: '8px',\n                backgroundColor: '#f1b535',\n                cursor: 'default'\n            }}>Status: {project.status}</button>}\n            {project && <button style={{\n                fontSize: '20px',\n                color: '#fff',\n                marginBottom: '30px',\n                marginRight: '10px',\n                borderRadius: '8px',\n                backgroundColor: '#595bc0',\n                cursor: 'default'\n            }}>{project.tag}</button>}\n            {project && <h4>Location: {project.location}</h4>}\n            {project && <button onClick={(e) => {\n                e.preventDefault();\n                window.open(project.files, \"_blank\");\n            }}>Documents</button>}\n            {project && <p>{project.description}</p>}\n\n            <h3>Volunteers working on this project</h3>\n            <div className=\"project_user_assignment_list\">\n                {assignments.map(a => (\n                    <div className=\"assigned_users_preview\" style={{float: \"left\", width: \"50%\"}} key={a.id}>\n                        <Link to={`/users/${a.username}`}>\n                            <h4>{a.username}</h4>\n                        </Link>\n                    </div>)\n                )\n                }\n            </div>\n\n            <div className=\"project-tasks\">\n                {project && <Link to={`/projects/${project.id}/tasks`} className=\"view-tasks-button\">View Tasks</Link>}\n\n                {project && <Link to={`/projects/${project.id}/add-task`} className=\"add-task-button\">Add Task</Link>}\n            </div>\n\n            <div>\n                {project && <button onClick={handleRemove}>Delete project</button>}\n\n                {project && <Link to={`/edit-project/${project.id}`} className=\"edit-project-button\">Edit project</Link>}\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default ProjectDetails;","import { Link } from \"react-router-dom\"\n\nconst PageNotFound = () => {\n    return (\n        <div className=\"page-not-found\">\n            <h2>Something went wrong...</h2>\n            <p>That page cannot be found</p>\n            <Link to='/'>Back to the main page</Link>\n        </div>\n    );\n}\n \nexport default PageNotFound;","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport useToken from './useToken';\n\nconst MyProfile = () => {\n    const {setToken, token} = useToken();\n\n    const {data: user, error, isPending} = useFetch(\"/users/\" + token)\n\n    return (\n        <div className=\"my-profile\">\n            { isPending && <h2>Loading...</h2> }\n            { user && <h2>{user.firstname + \" \" + user.surname}</h2> }\n            { user && <h1>{\"Username: \" + user.token}</h1> }\n            { user && <h1>{\"Title: \" + user.title}</h1> }\n            { user && <h1>{\"Email: \" + user.email}</h1> }\n            { user && <h1>{\"Bio: \" + user.bio}</h1> }\n            { user && <h1>{\"Joined: \" + user.joined}</h1> }\n            { user && <h1>{\"Location: \" + user.location}</h1> }\n            { user && <h1>{\"Availability: \" + user.availability}</h1> }\n            { user && <h1>{\"Partnership Opportunities: \" + user.partnership_opportunities}</h1> }\n            { user && <h1>{\"Interests: \" + user.interests}</h1> }    \n        </div>\n    );\n}\n\nexport default MyProfile;","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\nimport useToken from './useToken';\n\nconst User = () => {\n    const {username} = useParams();\n    const history = useHistory();\n    const {setToken, token} = useToken();\n    \n    const {data: user, error, isPending} = useFetch(\"/users/\" + username)\n    \n    const handleRemove = e => {\n        e.preventDefault()\n        fetch(\"/users/\" + username, {method: 'DELETE'})\n            .then(()=> {history.push('/');})\n      };\n\n    return (\n        <div className=\"user\">\n            { isPending && <h2>Loading...</h2> }\n            { user && <div>\n                <h2>{user.firstname + \" \" + user.surname}</h2>\n            </div> }\n\n            { user && <div>\n                <h3><strong>Username: </strong>{user.username}</h3>\n                <h3><strong>Email: </strong>{user.email}</h3>       \n                <h3><strong>Title: </strong>{user.title}</h3>\n                <h3><strong>Joined: </strong>{user.joined}</h3>\n                <h3><strong>Location: </strong>{user.location}</h3>\n                <h3><strong>Availability: </strong>{user.availability}</h3>\n            </div> }\n\n            <br />\n\n            { user && <div>\n                <label><strong>Bio</strong></label>\n                <p>{user.bio}</p>\n            </div> }\n            \n            { user && <div>\n                <label><strong>Partnership Opportunities</strong></label>\n                <p>{user.partnership_opportunities}</p>\n            </div> }\n\n            { user && <div>\n                <label><strong>Interests</strong></label>\n                <p>{user.interests}</p>\n            </div> }\n\n            { user && (token == \"jaimeaguilera\" || username == token) && <button onClick={handleRemove}>Delete user</button> }\n            \n            { user && (token == \"jaimeaguilera\" || username == token) && <Link to={`/edit-user/${username}`} className=\"edit-user-button\">Edit details</Link> }\n    </div>\n    );\n}\n \nexport default User;","import { Link } from 'react-router-dom'\n\nconst UserList = ({ users }) => {\n\n    return (\n        <div className=\"user-list\">\n\n            {users.map((user) => (\n                <div className=\"preview\" key={user.username}>\n                    <Link to={`/users/${user.username}`}>\n                        <h2>{user.username}</h2>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default UserList;\n","import UserList from './UserList'\nimport useFetch from './useFetch'\nimport useToken from './useToken'\nimport { Link } from 'react-router-dom'\n\nconst Users = () => {\n\n    const {data: users, error, isPending} = useFetch(\"/users\")\n    const {setToken, token} = useToken();\n\n    return (\n        <div className=\"users\">\n            <h1>Users</h1>\n            { token == \"jaimeaguilera\" && <Link to={`/add-user`} className=\"add-user-button\">Add User</Link> }\n            <br />\n            <br />\n            { isPending && <h2>Loading...</h2> }\n            { users && <UserList users={users} title=\"All Users\"/> }\n        </div>\n    );\n}\n \nexport default Users;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\nconst AddUser = () => {\n    const [firstname, setFirstname] = useState(\"\");\n    const [surname, setSurname] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [title, setTitle] = useState(\"\")\n    const [email, setEmail] = useState(\"\");\n    const [phone_no, setPhoneNo] = useState(\"\");\n    const [bio, setBio] = useState(\"\");\n    const [joined, setJoined] = useState(Date.now());\n    const [location, setLocation] = useState(\"\");\n    const [availability, setAvailability] = useState(\"\");\n    const [partnership_opportunities, setPartnership_opportunities] = useState(\"\");\n    const [interests, setInterests] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n\n    const history = useHistory();\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const newUser = {\n            firstname,\n            surname,\n            password,\n            title,\n            email,\n            phone_no,\n            bio,\n            joined,\n            location,\n            availability,\n            partnership_opportunities,\n            interests,\n            username\n        }\n\n        fetch(\"/users\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newUser)\n        }).then(() => {\n            history.push('/users');\n        })\n    }\n\n    return (\n        <div className=\"add-user\">\n            <h2>Add a new user</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Username [required]</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    placeholder=\"Input username here\"\n                />\n\n\n                <label>Firstname [required]</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={firstname}\n                    onChange={(e) => setFirstname(e.target.value)}\n                    placeholder=\"Input your first name here\"\n                />\n\n                <label>Surname [required]</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={surname}\n                    onChange={(e) => setSurname(e.target.value)}\n                    placeholder=\"Input surname here\"\n                />\n\n                <label>Title [required]</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    placeholder=\"State your role at InAGlobe (eg: volunteer)\"\n                />\n\n                <label>Password [required]</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"Input the default password (to be changed by the user)\"\n                />\n\n                <label>Email [required]</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"Input InAGlobe email here\"\n                />\n\n                <label>Phone Number</label>\n                <input\n                    type=\"text\"\n                    value={phone_no}\n                    onChange={(e) => setPhoneNo(e.target.value)}\n                    placeholder=\"Input your phone number\"\n                />\n\n\n                <label>Bio</label>\n                <input\n                    type=\"text\"\n                    value={bio}\n                    onChange={(e) => setBio(e.target.value)}\n                    placeholder=\"Tell your colleagues a bit about yourself\"\n                />\n\n                {/* Think about changing type to force date */}\n                <label>Joined [required]</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={joined}\n                    onChange={(e) => setJoined(e.target.value)}\n                    placeholder=\"Eg: 20th April 2020\"\n                />\n\n\n                <label>Location</label>\n                <input\n                    type=\"text\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    placeholder=\"Where are you currently based?\"\n                />\n\n                <label>Availibility</label>\n                <input\n                    type=\"text\"\n                    value={availability}\n                    onChange={(e) => setAvailability(e.target.value)}\n                    placeholder=\"How available are you approximately per week?\"\n                />\n\n                <label>Partnership Opportunities</label>\n                <input\n                    type=\"text\"\n                    value={partnership_opportunities}\n                    onChange={(e) => setPartnership_opportunities(e.target.value)}\n                    placeholder=\"Eg: Department of Computing at Imperial College London\"\n                />\n\n                <label>Interests</label>\n                <input\n                    type=\"text\"\n                    value={interests}\n                    onChange={(e) => setInterests(e.target.value)}\n                    placeholder=\"What are your hobbies?\"\n                />\n\n                <button>Add user</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AddUser;","import { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { useForm } from \"react-hook-form\"\nimport useFetch from './useFetch'\nimport Select from 'react-select'\n\nconst EditProject = () => {\n    const { id } = useParams();\n    const { data: { name, description, status, location, tag, files }, error, isPending } = useFetch(\"/projects/\" + id)\n    const [selectUsernames, setSelectUsernames] = useState([]);\n    const { data: users, errorUsers, isPendingUsers } = useFetch(\"/users/user_project\");\n\n    const history = useHistory();\n    \n    const { register, handleSubmit } = useForm();\n\n    const handleChange = (e) => {\n        setSelectUsernames(Array.isArray(e) ? e.map(x => x.value) : []);\n    }\n\n    const onSubmit = e => {\n        fetch(\"/projects/\" + id, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(e)\n        }).then(() => {\n            selectUsernames.map(username => {\n                const assign_project = { username: username, project_id: id };\n\n                fetch(\"/user_project\", {\n                    method: 'POST',\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(assign_project)\n                });\n            });\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"edit-project\">\n            <h2>Edit project</h2>\n            {isPending && <h2>Loading...</h2>}\n            {name && <form onSubmit={handleSubmit(onSubmit)}>\n                <label>Project name</label>\n                <input\n                    {...register(\"name\")}\n                    placeholder=\"Insert project name here\"\n                    type=\"text\"\n                    defaultValue={name}\n                />\n                <label>Description</label>\n                <textarea {...register(\"description\")} placeholder=\"Insert description of the project here\" defaultValue={description}></textarea>\n                <label>Status</label>\n                <select {...register(\"status\")} defaultValue={status}>\n                    <option value=\"Progress\">Progress</option>\n                    <option value=\"Available\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <label>Location</label>\n                <input\n                    {...register(\"location\")}\n                    type=\"text\"\n                    placeholder=\"Insert location of project here\"\n                    defaultValue={location}\n                />\n                <label>Type of project</label>\n                <select {...register(\"tag\")} defaultValue={tag}>\n                    <option value=\"Social\">Social</option>\n                    <option value=\"Education\">Education</option>\n                    <option value=\"Wash\">Wash</option>\n                    <option value=\"Environment\">Environment</option>\n                    <option value=\"Health\">Health</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <label>Volunteers assigned to this project</label>\n                <Select\n                    className=\"dropdown\"\n                    placeholder=\"Select Users\"\n                    value={users.filter(user => selectUsernames.includes(user.value))}\n                    options={users}\n                    onChange={handleChange}\n                    isMulti\n                    isClearable\n                />\n                <label>Google Drive folder</label>\n                <textarea {...register(\"files\")} placeholder=\"Insert Google Drive Folder link here\" defaultValue={files}></textarea>\n                <button type=\"submit\">Save project details</button>\n            </form>}\n        </div>\n    );\n}\n\nexport default EditProject;","import React from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport { Link, useHistory } from 'react-router-dom'\nimport useToken from './useToken';\n\nconst Sidebar = () => {\n\nconst slackLink = \"https://slack.com/intl/en-gb/\"\n\nconst history = useHistory();\n\nconst {setToken, token} = useToken();\n\nconst handleSignOut = e => {\n  e.preventDefault()\n\n  localStorage.clear();\n\n  window.location.reload();\n  history.push(\"/\");\n}\n\nreturn (\n    <Menu>\n      <div className=\"menu-item\" > \n      <Link to={`/`}>Home</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/users/` + token}>Profile</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/users`}>All Users</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/projects`}>All Projects</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <a href={slackLink} target=\"_blank\">Go To Slack</a>\n      </div> \n      <div className=\"menu-item\" >\n      <a style={{textDecoration: \"underline\", cursor: \"pointer\"}} onClick={handleSignOut}>Log Out</a>\n      </div> \n    </Menu>\n\n);\n\n}\n\nexport default Sidebar;","import { Link, useHistory, useParams } from \"react-router-dom\"\nimport { useForm } from \"react-hook-form\"\nimport useFetch from './useFetch'\n\nconst EditUser = () => {\n    const { username } = useParams();\n    const { data: { firstname, surname, password, title, email, phone_no, bio, joined,\n        location, availability, partnership_opportunities, interests }, error, isPending } = useFetch(\"/users/\" + username)\n\n    const history = useHistory();\n    const oldUserDetails = {\n        firstname: firstname,\n        surname: surname,\n        password: password,\n        title: title,\n        email: email,\n        phone_no: phone_no,\n        bio: bio,\n        joined: joined,\n        location: location,\n        availability: availability,\n        partnership_opportunities: partnership_opportunities,\n        interests: interests,\n    }\n\n    const { register, handleSubmit } = useForm({\n        defaultValues: oldUserDetails\n    });\n\n    const onSubmit = e => {\n        fetch(\"/users/\" + username, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(e)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"edit-user\">\n            <h2>Edit user</h2>\n            {isPending && <h2>Loading...</h2>}\n            <Link to={`/users/change-password`}>Change Password</Link>\n            {firstname && <form onSubmit={handleSubmit(onSubmit)}>\n                <label htmlFor=\"firstname\">Firstname</label>\n                <input {...register(\"firstname\")}\n                    placeholder=\"Input your first name here\"\n                    defaultValue={firstname}\n                />\n\n                <label htmlFor=\"surname\">Surname</label>\n                <input {...register(\"surname\")}\n                    placeholder=\"Input surname here\"\n                    defaultValue={surname}\n                />\n\n                <label htmlFor=\"title\">Title</label>\n                <input {...register(\"title\")}\n                    placeholder=\"State your role at InAGlobe (eg: volunteer)\"\n                    defaultValue={title}\n                />\n\n                <label htmlFor=\"password\">Password (click link above to change password)</label>\n                <input {...register(\"password\")}\n                    disabled\n                    placeholder=\"Input the password\"\n                    defaultValue={password}\n                />\n\n\n                <label htmlFor=\"email\">Email</label>\n                <input {...register(\"email\")}\n                    placeholder=\"Input InAGlobe email here\"\n                    defaultValue={email}\n                />\n\n                <label htmlFor=\"phone_no\">Phone number</label>\n                <input {...register(\"phone_no\")}\n                    placeholder=\"Input phone number here\"\n                    defaultValue={phone_no}\n                />\n\n\n                <label htmlFor=\"bio\">Bio</label>\n                <input {...register(\"bio\")}\n                    placeholder=\"Tell your colleagues a bit about yourself\"\n                    defaultValue={bio}\n                />\n\n                <label htmlFor=\"joined\">Joined</label>\n                <input {...register(\"joined\")}\n                    placeholder=\"Eg: 20th April 2020\"\n                    type=\"date\"\n                    defaultValue={joined}\n                />\n\n                <label htmlFor=\"location\">Location</label>\n                <input {...register(\"location\")}\n                    placeholder=\"Where are you currently based?\"\n                    defaultValue={location}\n                />\n\n                <label htmlFor=\"availability\">Availibility (hours per week)</label>\n                <input {...register(\"availability\")}\n                    placeholder=\"How available are you approximately per week?\"\n                    defaultValue={availability}\n                />\n\n                <label htmlFor=\"interests\">Interests</label>\n                <input {...register(\"interests\")}\n                    placeholder=\"What are your hobbies?\"\n                    defaultValue={interests}\n                />\n\n                <label htmlFor=\"partnership_opportunities\">Partnership Opportunities</label>\n                <input {...register(\"partnership_opportunities\")}\n                    placeholder=\"Eg: Department of Computing at Imperial College London\"\n                    defaultValue={partnership_opportunities}\n                />\n                <button type=\"submit\">Save user details</button>\n            </form>}\n        </div>\n    );\n}\n\nexport default EditUser;","import { useState } from \"react\";\nimport UsersAssignedToTask from \"./UsersAssignedToTask\";\n\nconst ProjectTaskList = ({ project_tasks }) => {\n    /* pass in filtered dataset containing tasks for a specific project*/\n    const [description, setDescription] = useState(\"\");\n    const [priority, setPriority] = useState(1);\n    const [due_date, setDueDate] = useState(Date.now);\n    const [completed, setCompleted] = useState(\"\");\n    const [project_id, setProjectId] = useState(\"\");\n\n    const handleComplete = task => e => {\n        e.preventDefault();\n\n        setDescription(task.description)\n        setPriority(task.priority)\n        setDueDate(task.due_date)\n        setCompleted(\"Completed\")\n        setProjectId(task.project_id)\n        const newTask = { description, priority, due_date, completed, project_id }\n\n        console.log(newTask)\n\n        fetch(\"/projects/\" + task.project_id + \"/tasks/\" + task.id, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(task)\n        }).then(() => {\n            window.location.reload();\n        })\n    \n    };\n\n    const handleDelete = task => e => {\n        e.preventDefault();\n\n        fetch(\"/projects/\" + task.project_id + \"/tasks/\" + task.id, {\n            method: 'DELETE',\n        }).then(() => {\n            window.location.reload();\n        })\n    };\n\n    return (\n        <div className=\"project-tasks-list\">\n            {project_tasks.map((task) => (\n                <div className=\"project-task-preview\" key={task.id}>\n                        <div>\n                            <h2>{task.description}</h2>\n                            <h3>Due date: {task.due_date}</h3>\n                        </div>\n                        \n                        <h3>Priority: {task.priority}</h3>\n                        <h3>All volunteers assigned to this task</h3>\n                        <UsersAssignedToTask task_id={task.id} />\n                        { !task.completed && <button className=\"task-complete-button\" onClick={handleComplete(task)}>Complete</button> }\n                        <button className=\"task-delete-button\"onClick={handleDelete(task)}>Delete</button>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default ProjectTaskList;\n","import { useParams } from 'react-router';\n\nimport ProjectTaskList from './ProjectTaskList'\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\n\nconst ProjectTasks = () => {\n    const { id } = useParams();\n    const { data: project, errorProject, isPendingProject } = useFetch(\"/projects/\" + id)\n\n    const { data: project_tasks, errorTasks, isPendingTasks } = useFetch(\"/projects/\" + id + \"/tasks\");\n\n    return (\n        <div className=\"project-tasks\">\n            { project && <h1>{project.name}: tasks</h1>}\n            <h2>Ongoing Project Tasks</h2>\n            { isPendingTasks && <h2>Loading...</h2> }\n            { project_tasks && <ProjectTaskList project_tasks={project_tasks.filter(task => !task.completed)}/> }\n            <h2>Completed Project Tasks</h2>\n            { project_tasks && <ProjectTaskList project_tasks={project_tasks.filter(task => task.completed)}/> }\n\n            <div className=\"add-task-button-wrapper\">\n                { project_tasks && <Link to={`/projects/${project.id}/add-task`} className=\"add-task-button\">Add Task</Link> }\n            </div>\n        </div>\n    );\n}\n\nexport default ProjectTasks;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport { useParams } from \"react-router\"\nimport useFetch from \"./useFetch\";\nimport Select from 'react-select';\n\nconst AddProjectTask = () => {\n    const { id } = useParams();\n\n    const [description, setDescription] = useState(\"\");\n    const [due_date, setDueDate] = useState(Date.now);\n    const [priority, setPriority] = useState(1);\n    const [completed, setCompleted] = useState(false);\n    const [assignedUsers, setAssignedUsers] = useState([]);\n\n    const { data: project, error, isPending } = useFetch(\"/projects/\" + id)\n    const { data: participants, errorParticipants, isPendingParticipants } = useFetch(\"/user_project/project_task/\" + id) \n\n    const history = useHistory();\n\n    const handleChange = (e) => {\n        setAssignedUsers(Array.isArray(e) ? e.map(x => x.value) : []); \n    }\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n\n        const newProjectTask = { description, due_date, priority, completed };\n\n        const response = await fetch(\"/projects/\" + project.id + \"/tasks\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newProjectTask)\n        });\n\n        const responseJSON = await response.json();\n        const task_id = responseJSON.id;\n\n        assignedUsers.map(username => {\n            const assigned_task = { username, task_id };\n\n            fetch(\"/assigned_task\", {\n                method: 'POST',\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(assigned_task)\n            });\n        });\n\n        history.push(\"/projects/\" + id);\n    }\n\n    return (\n        <div className=\"add-project-task\">\n            <h2>Add a new task</h2>\n            {isPending && <h2>Loading...</h2>}\n            {project && <form onSubmit={handleSubmit}>\n                <label>Description</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    placeholder=\"Input description here\"\n                />\n\n\n                <label>Due Date [required]</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={due_date}\n                    onChange={(e) => setDueDate(e.target.value)}\n                    placeholder=\"Input your first name here\"\n                />\n\n                <label>Priority level (1: lowest, 4: highest) [required]</label>\n                <select required value={priority} onChange={(e) => setPriority(e.target.value)} >\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                    </select>\n\n                <label>Volunteers assigned to this task</label>\n                <Select\n                    className=\"dropdown\"\n                    placeholder=\"Select Users\"\n                    value={participants.filter(user => assignedUsers.includes(user.value))}\n                    options={participants}\n                    onChange={handleChange}\n                    isMulti\n                    isClearable\n                />\n\n                <label>Status</label>\n                <select value={completed} onChange={(e) => setCompleted(e.target.value)}>\n                    <option value=\"Incomplete\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <button>Add task</button>\n            </form>}\n        </div>\n    );\n}\n\nexport default AddProjectTask;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\n\nasync function loginUser(credentials) {\n    return fetch('/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      })\n      .then(data => data.json())\n   }\n\nexport default function Login({ setToken }) {\n    const [username, setUserName] = useState();\n    const [password, setPassword] = useState();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const token = await loginUser({\n          username,\n          password\n        });\n        if(token.token != \"\") {\n            setToken(token);\n        } else {\n            document.getElementsByClassName(\"incorrect-password\")[0].style.display = \"block\";\n\n        }\n    }\n    \n\n    return (\n        <div className=\"login\">\n            <h1> InAGlobe Platform </h1>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"login\"\n                    onChange={e => setUserName(e.target.value)}/>\n                <input type=\"password\" id=\"password\" class=\"fadeIn third\" name=\"login\" placeholder=\"password\"\n                    onChange={e => setPassword(e.target.value)}/> \n                <div className=\"incorrect-password\" style={{display: 'none'}}>\n                    <h2>Incorrect password!</h2>\n                </div>\n                <div className=\"links\">\n                    <Link to={`/forgot-password`}>Forgot Password</Link>\n                </div>\n                <button type=\"submit\">Log In</button>\n            </form>\n        </div>\n    );\n}\n \nLogin.propTypes = {\n    setToken: PropTypes.func.isRequired\n}\n","\nimport useToken from './useToken';\nimport { Link, useHistory } from 'react-router-dom'\nimport { useState } from 'react'\n\nconst ChangePassword = () => {\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const {setToken, token} = useToken()\n  const history = useHistory()\n\nasync function passwordUpdate() {\n  return fetch('/users/update-password', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: token,\n        oldPassword: oldPassword,\n        newPassword: newPassword})\n    })\n    .then(data => data.json())\n }\n\n  const handleSubmit = async e => {\n      e.preventDefault();\n      const updated = await passwordUpdate();\n\n      if(updated.status != \"True\") {\n         document.getElementsByClassName(\"incorrect-password\")[0].style.display = \"block\";\n      }\n      else{\n        document.getElementsByClassName(\"password-changed-msg\")[0].style.display = \"block\";\n      }\n    }\n  \nreturn (\n  <div className=\"change-password\">\n      <h2>Change Password</h2>\n      <label >Current Password</label>\n      <input  \n        onChange={(e) => setOldPassword(e.target.value)}\n        placeholder=\"Current Password\"\n      />\n\n      <label >New Password</label>\n      <input  \n        onChange={(e) => setNewPassword(e.target.value)}\n        placeholder=\"New Password\"\n      />\n\n      <button onClick={handleSubmit}>Change password</button>\n\n      <h2 className=\"incorrect-password\" style={{display: \"none\"}}>Incorrect password</h2>\n\n      <div className=\"password-changed-msg\" style={{display: \"none\"}}>\n        <h3>Your password has been changed successfully</h3>\n        <Link to={`/`}>Back to Dashboard</Link>\n      </div>\n\n  </div>\n  \n  )\n\n}\n\nexport default ChangePassword;","import ProjectList from './ProjectList'\nimport PersonalToDo from './PersonalToDo'\nimport useFetch from './useFetch'\nimport useToken from './useToken';\n\nconst ProjectRegistry = () => {\n\n    const {data: projects, errorProjects, isPendingProjects} = useFetch(\"/projects\")\n\n    return (\n        <div className=\"project-registry\">\n            <h1>All Projects</h1>\n            <br />\n            { isPendingProjects && <h2>Loading...</h2> }\n            { projects && <ProjectList projects={projects} title=\"All Projects\"/> }\n        </div>\n        \n    );\n}\n \nexport default ProjectRegistry;","import { useState } from \"react\";\nimport { useHistory } from 'react-router';\n\nasync function resetPassword(msg) {\n    return fetch('/users/forgot-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(msg)\n      })\n      .then(data => data.json())\n   }\n\nconst ForgotPassword = () => {\n\n    const [username, setUsername] = useState(\".\");\n    const history = useHistory();\n    \n\n    const handleSubmit = async e => {\n        e.preventDefault();\n\n        if(username != \".\") {\n\n            const msg = {\n                username: username,\n                newPassword: Math.random().toString(36).replace(/[^a-z]+/g, '')\n            }\n\n            const response = await resetPassword(msg);\n            if(response.status == \"False\") {\n                document.getElementsByClassName(\"email-sent\")[0].style.display = \"none\";\n                document.getElementsByClassName(\"incorrect-username\")[0].style.display = \"block\";\n            } else {\n                document.getElementsByClassName(\"incorrect-username\")[0].style.display = \"none\";\n                document.getElementsByClassName(\"email-sent\")[0].style.display = \"block\";\n            }\n        }\n    }\n\n    const handleReturn = e => {\n        e.preventDefault();\n        history.push('/');\n    }\n\n\n    return (\n        <div className=\"forgot-password\">\n            <form onSubmit={handleSubmit}>\n                <h1>Forgot Password</h1>\n                <h2>Input your username</h2>\n                <input type=\"text\" placeholder=\"username\" onChange={e => setUsername(e.target.value)}/>\n                <div className=\"incorrect-username\" style={{display: 'none'}}>\n                    <h2>Incorrect username provided!</h2>\n                </div>\n                <div className=\"email-sent\" style={{display: 'none'}}>\n                    <h2>Email has been sent!</h2>\n                </div>\n                <button>Submit</button>\n            </form>\n            <button onClick={handleReturn}>Back to Login Page</button>\n        </div>\n        \n    );\n}\n \nexport default ForgotPassword;","import React, { useState } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\n\nimport Navbar from './Navbar'\nimport Home from './Home'\nimport CreateProject from './CreateProject'\nimport ProjectDetails from './ProjectDetails'\nimport PageNotFound from './PageNotFound'\nimport MyProfile from './MyProfile'\nimport User from './User'\nimport Users from './Users'\nimport AddUser from './AddUser'\nimport EditProject from './EditProject'\nimport Sidebar from './Sidebar'  \nimport EditUser from './EditUser'\nimport ProjectTasks from './ProjectTasks'\nimport AddProjectTask from './AddProjectTask'\nimport Login from './Login'\nimport useToken from './useToken'\nimport ChangePassword from './ChangePassword'\nimport ProjectsRegistry from './ProjectsRegistry'\nimport ForgotPassword from './ForgotPassword'\n\nfunction App() {\n\n  const { token, setToken } = useToken();\n\n  if(!token) {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/forgot-password\">\n            <ForgotPassword />\n          </Route>\n          <Route path=\"*\">\n            <Login setToken={setToken} />\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">    \n      <Sidebar />\n        <Navbar />\n        <div className=\"content\">   \n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/create-project\">\n              <CreateProject />\n            </Route>\n            <Route exact path=\"/add-user\">\n              <AddUser />  \n            </Route>\n            <Route exact path=\"/my-profile\">\n              <MyProfile />\n            </Route>\n            <Route exact path=\"/users\">\n              <Users />  \n            </Route>\n            <Route exact path=\"/users/change-password\">\n              <ChangePassword />\n            </Route>   \n            <Route exact path=\"/users/:username\">\n              <User />\n            </Route>\n            <Route exact path=\"/edit-user/:username\">\n              <EditUser />\n            </Route>   \n            <Route exact path=\"/projects\">\n              <ProjectsRegistry />  \n            </Route>        \n            <Route exact path=\"/projects/:id/add-task\">\n              <AddProjectTask />  \n            </Route>       \n            <Route exact path=\"/projects/:id/tasks\">\n              <ProjectTasks />          \n            </Route>\n            <Route exact path=\"/projects/:id\">\n              <ProjectDetails />\n            </Route>\n            <Route exact path=\"/edit-project/:id\">\n              <EditProject />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}