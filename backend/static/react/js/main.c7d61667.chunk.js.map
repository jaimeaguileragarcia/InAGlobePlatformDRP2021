{"version":3,"sources":["Navbar.js","ProjectList.js","useFetch.js","PersonalToDo.js","Home.js","CreateProject.js","ProjectDetails.js","PageNotFound.js","MyProfile.js","User.js","UserList.js","Users.js","AddUser.js","EditProject.js","Sidebar.js","EditUser.js","ProjectTaskList.js","ProjectTasks.js","AddProjectTask.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","style","color","fontSize","borderRadius","to","ProjectList","projects","title","map","project","id","name","status","useFetch","url","useState","data","setData","error","setError","useEffect","fetch","then","res","ok","Error","json","console","log","catch","err","message","PersonalToDo","todos","users","todo_desc","setTodoDesc","priority","setPriority","username","setUsername","useHistory","todo","due_date","onClick","e","preventDefault","method","window","location","reload","onSubmit","document","getElementsByClassName","display","newTodo","headers","body","JSON","stringify","value","onChange","target","required","placeholder","type","user","Home","error1","error2","filter","CreateProject","setName","description","setDescription","setStatus","tag","setTag","setLocation","files","setFiles","history","newProject","push","ProjectDetails","useParams","marginBottom","marginright","backgroundColor","marginRight","open","PageNotFound","MyProfile","firstname","surname","email","bio","joined","availability","partnership_opportunities","interests","User","UserList","Users","AddUser","setFirstname","setSurname","password","setPassword","setTitle","setEmail","setBio","setJoined","setAvailability","setPartnership_opportunities","setInterests","newUser","EditProject","oldProjectDetails","useForm","defaultValues","register","handleSubmit","htmlFor","props","EditUser","oldUserDetails","ProjectTaskList","project_tasks","Date","now","setDueDate","completed","setCompleted","project_id","setProjectId","handleComplete","task","newTask","handleDelete","ProjectTasks","AddProjectTask","newProjectTask","App","Sidebar","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"js/main.c7d61667.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar\" >\n            <a href=\"/\" style={{ \n                color: '#ff4e83',\n                fontSize: '20px',\n                borderRadius: '8px' \n            }}>InAGlobe Platform</a>\n            <div className=\"links\"> \n                <Link to={`/create-project`}>New Project</Link>\n                <Link to={`/users/john34`}>My Profile</Link>\n            </div>\n        </nav>\n    );\n}\n \nexport default Navbar;","import { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects, title }) => {\n\n    return (\n        <div className=\"project-list\">\n            <h2>{title}</h2>\n            {projects.map((project) => (\n                <div className=\"preview\" key={project.id}>\n                    <Link to={`/projects/${project.id}`}>\n                        <h2>{project.name}</h2>\n                        <h3>{project.status}</h3>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default ProjectList;","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(url)\n        .then(res => {\n            if (!res.ok) { // error coming back from server\n                throw Error('could not fetch the data for that resource');\n            } \n            return res.json();\n        })\n        .then(data => {\n            setData(data);\n            setError(null);\n            console.log({data})\n        })\n        .catch(err => {\n            // auto catches network / connection error\n            setError(err.message);\n        })\n  }, [url])\n\n  return { data, error };\n}\n \nexport default useFetch;","import useFetch from './useFetch'\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\nconst PersonalToDo = ({ todos, title }) => {\n\n    const openTaskForm = () => {\n        document.getElementsByClassName(\"add-todo-form\")[0].style.display = \"block\";\n    }\n\n    const { data: users, error } = useFetch(\"/users\")\n\n    const [todo_desc, setTodoDesc] = useState(\"\");\n    const [priority, setPriority] = useState(1);\n    const [username, setUsername] = useState(\"none\");\n\n    const history = useHistory();\n\n    const handleSubmit = e => {\n        document.getElementsByClassName(\"add-todo-form\")[0].style.display = \"none\";\n\n        e.preventDefault();\n        const newTodo = { todo_desc, priority, username };\n\n        fetch(\"/todos\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newTodo)\n        }).then(() => {\n            window.location.reload();\n        })\n    }\n\n    const handleRemove = id => e => {\n        e.preventDefault();\n        fetch(\"/todos/\" + id, { method: 'DELETE' })\n            .then(() => {\n                window.location.reload();\n            })\n    };\n\n    return (\n        <div className=\"todo-list\">\n            <h2>{title}</h2>\n\n            {todos.map((todo) => (\n                <div className=\"todo-preview\" key={todo.id}>\n                    <h2>{todo.todo_desc}</h2>\n                    <h3><strong>Priority level:</strong> {todo.priority}</h3>\n                    <h3><strong>To be done by:</strong> {todo.due_date}</h3>\n                    <button onClick={handleRemove(todo.id)}>Complete</button>\n                </div>\n            ))}\n\n\n            <div className=\"add-todo-form\">\n                <form onSubmit={handleSubmit}>\n                    <label>Task description</label>\n                    <textarea value={todo_desc} onChange={(e) => setTodoDesc(e.target.value)} required placeholder=\"Add some awesome description!\" ></textarea>\n                    <label>Priority level</label>\n                    <select value={priority} onChange={(e) => setPriority(e.target.value)} >\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                    </select>\n                    <label>When should this task be done by?</label>\n                    <input\n                        type=\"date\"\n                    />\n                    <label>Assigned user</label>\n                    <select value={username} onChange={(e) => setUsername(e.target.value)} >\n                        <option value=\"none\">None</option>\n                        {users.map(user => <option value={user.username}>{user.username}</option>)}\n                    </select>\n                    <button>Save task</button>\n                </form>\n            </div>\n\n            <div className=\"add-todo-button\">\n                <button onClick={openTaskForm}>Add a personal task</button>\n            </div>\n\n        </div>\n    );\n\n}\n\nexport default PersonalToDo;","import ProjectList from './ProjectList'\nimport PersonalToDo from './PersonalToDo'\nimport useFetch from './useFetch'\n\nconst Home = () => {\n\n    const {data: projects, error1} = useFetch(\"/projects\")\n    const {data: todos, error2} = useFetch(\"/todos\")\n\n    return (\n        <div className=\"home\">\n            <h1>Dashboard</h1>\n            <ProjectList projects={projects} title=\"All Projects\"/>\n            <ProjectList projects={projects.filter(project => project.status === \"Completed\")} title=\"Completed Projects\"/>\n            <PersonalToDo todos={todos.filter(todo => todo.username === \"john34\")} title=\"Personal ToDo items\"/>\n        </div>\n        \n    );\n}\n \nexport default Home;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\nconst CreateProject = () => {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [status, setStatus] = useState(\"Available\");\n    const [tag, setTag] = useState(\"Other\");\n    const [location, setLocation] = useState(\"\");\n    const [files, setFiles] = useState(\"\");\n\n    const history = useHistory();\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const newProject = { name, description, status, tag, location, files };\n\n        fetch(\"/projects\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newProject)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"create-project\">\n            <h2>Add a new project</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Project name</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    placeholder=\"Input project name\"\n                />\n                <label>Description</label>\n                <textarea required placeholder=\"Add some awesome description!\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                <label>Status</label>\n                <select value={status} onChange={(e) => setStatus(e.target.value)}>\n                    <option value=\"Progress\">Progress</option>\n                    <option value=\"Available\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <label>Location</label>\n                <input\n                    type=\"text\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    placeholder=\"Eg: United Kingdom\"\n                />\n                <label>Type of project</label>\n                <select value={tag} onChange={(e) => setTag(e.target.value)}>\n                    <option value=\"Social\">Social</option>\n                    <option value=\"Education\">Education</option>\n                    <option value=\"Wash\">Wash</option>\n                    <option value=\"Environment\">Environment</option>\n                    <option value=\"Health\">Health</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <label>Google Drive folder</label>\n                <textarea placeholder=\"Copy the link to the Google Drive folder for this project\" value={files} onChange={(e) => setFiles(e.target.value)}></textarea>\n                <button>Add project</button>\n            </form>\n        </div>\n    );\n}\n\nexport default CreateProject;","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\n\nconst ProjectDetails = () => {\n    const { id } = useParams();\n    const history = useHistory();\n\n    const { data: project, error } = useFetch(\"/projects/\" + id)\n\n    const handleRemove = e => {\n        e.preventDefault()\n        fetch(\"/projects/\" + id, { method: 'DELETE' })\n            .then(() => { history.push('/'); })\n    };\n\n    return (\n        <div className=\"project-details\">\n            {project && <h2>{project.name}</h2>}\n            {project && <button style={{\n                fontSize: '20px',\n                color: '#fff',\n                marginBottom: '30px',\n                marginright: '10px',\n                borderRadius: '8px',\n                backgroundColor: '#f1b535'\n            }}>Status: {project.status}</button>}\n            {project && <button style={{\n                fontSize: '20px',\n                color: '#fff',\n                marginBottom: '30px',\n                marginRight: '10px',\n                borderRadius: '8px',\n                backgroundColor: '#595bc0'\n            }}>{project.tag}</button>}\n            {project && <h4>Location: {project.location}</h4>}\n            {project && <button onClick={(e) => {\n                e.preventDefault();\n                window.open(project.files, \"_blank\");\n            }}>Documents</button>}\n            {project && <p>{project.description}</p>}\n\n            <div className=\"project-tasks\">\n                {project && <Link to={`/projects/${project.id}/tasks`} className=\"view-tasks-button\">View Tasks</Link>}\n\n                {project && <Link to={`/projects/${project.id}/add-task`} className=\"add-task-button\">Add Task</Link>}\n            </div>\n\n            <div>\n                {project && <button onClick={handleRemove}>Delete project</button>}\n\n                {project && <Link to={`/edit-project/${project.id}`} className=\"edit-project-button\">Edit project</Link>}\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default ProjectDetails;","import { Link } from \"react-router-dom\"\n\nconst PageNotFound = () => {\n    return (\n        <div className=\"page-not-found\">\n            <h2>Something went wrong...</h2>\n            <p>That page cannot be found</p>\n            <Link to='/'>Back to the main page</Link>\n        </div>\n    );\n}\n \nexport default PageNotFound;","import { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\n\nconst MyProfile = () => {\n    const {username} = useParams();\n    const history = useHistory();\n    \n    const {data: user, error} = useFetch(\"/users/ethan.w\")\n    \n\n    return (\n        <div className=\"my-profile\">\n        {user && <h2>{user.firstname + \" \" + user.surname}</h2>}\n        {user && <h1>{\"Username: \" + user.username}</h1>}\n        {user && <h1>{\"Title: \" + user.title}</h1>}\n        {user && <h1>{\"Email: \" + user.email}</h1>}\n        {user && <h1>{\"Bio: \" + user.bio}</h1>}\n        {user && <h1>{\"Joined: \" + user.joined}</h1>}\n        {user && <h1>{\"Location: \" + user.location}</h1>}\n        {user && <h1>{\"Availability: \" + user.availability}</h1>}\n        {user && <h1>{\"Partnership Opportunities: \" + user.partnership_opportunities}</h1>}\n        {user && <h1>{\"Interests: \" + user.interests}</h1>}\n    \n\n     \n    </div>\n    );\n}\n \nexport default MyProfile;\n\n\n\n","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\n\nconst User = () => {\n    const {username} = useParams();\n    const history = useHistory();\n    \n    const {data: user, error} = useFetch(\"/users/\" + username)\n    \n    const handleRemove = e => {\n        e.preventDefault()\n        fetch(\"/users/\" + username, {method: 'DELETE'})\n            .then(()=> {history.push('/');})\n      };\n\n    return (\n        <div className=\"user\">\n            <div>\n                {user && <h2>{user.firstname + \" \" + user.surname}</h2>}\n            </div>\n\n            <div>\n                {user && <h3><strong>Username: </strong>{user.username}</h3>}\n                {user && <h3><strong>Email: </strong>{user.email}</h3>}           \n                {user && <h3><strong>Title: </strong>{user.title}</h3>}\n                {user && <h3><strong>Joined: </strong>{user.joined}</h3>}\n                {user && <h3><strong>Location: </strong>{user.location}</h3>}\n                {user && <h3><strong>Availability: </strong>{user.availability}</h3>}\n            </div>\n\n            <br />\n\n            <div>\n                {user && <label><strong>Bio</strong></label>}\n                {user && <p>{user.bio}</p>}\n            </div>\n            \n            <div>\n                {user && <label><strong>Partnership Opportunities</strong></label>}\n                {user && <p>{user.partnership_opportunities}</p>}\n            </div>\n\n            <div>\n                {user && <label><strong>Interests</strong></label>}\n                {user && <p>{user.interests}</p>} \n            </div>\n\n            {user && <button onClick={handleRemove}>Delete user</button>}\n            \n            {user && <Link to={`/edit-user/${username}`} className=\"edit-user-button\">Edit details</Link>}\n    </div>\n    );\n}\n \nexport default User;","import { Link } from 'react-router-dom'\n\nconst UserList = ({ users }) => {\n\n    return (\n        <div className=\"user-list\">\n\n            {users.map((user) => (\n                <div className=\"preview\" key={user.username}>\n                    <Link to={`/users/${user.username}`}>\n                        <h2>{user.username}</h2>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default UserList;\n","import {useEffect, useState} from 'react'\nimport { Link } from \"react-router-dom\"\nimport UserList from './UserList'\nimport useFetch from './useFetch'\n\nconst Users = () => {\n\n    const {data: users, error2} = useFetch(\"/users\")\n\n    return (\n        <div className=\"users\">\n            <h1>Users</h1>\n            <UserList users={users} title=\"All Users\"/>\n        </div>\n    );\n}\n \nexport default Users;","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\n\n\nconst AddUser = () => {\n    const [firstname, setFirstname] = useState(\"\");\n    const [surname, setSurname] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [title, setTitle] = useState(\"\")\n    const [email, setEmail] = useState(\"\");\n    const [bio, setBio] = useState(\"\");\n    const [joined, setJoined] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n    const [availability, setAvailability] = useState(\"\");\n    const [partnership_opportunities, setPartnership_opportunities] = useState(\"\");\n    const [interests, setInterests] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n\n\n    const history = useHistory();\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const newUser = {\n            firstname,\n            surname,\n            password,\n            title,\n            email,\n            bio,\n            joined,\n            location,\n            availability,\n            partnership_opportunities,\n            interests,\n            username\n        }\n\n        fetch(\"/users\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newUser)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"add-user\">\n            <h2>Add a new user</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Username</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    placeholder=\"Input username here\"\n                />\n\n\n                <label>Firstname</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={firstname}\n                    onChange={(e) => setFirstname(e.target.value)}\n                    placeholder=\"Input your first name here\"\n                />\n\n                <label>Surname</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={surname}\n                    onChange={(e) => setSurname(e.target.value)}\n                    placeholder=\"Input surname here\"\n                />\n\n                <label>Title</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    placeholder=\"State your role at InAGlobe (eg: volunteer)\"\n                />\n\n                <label>Password</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"Input the default password (to be changed by the user)\"\n                />\n\n                <label>Email</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"Input InAGlobe email here\"\n                />\n\n\n                <label>Bio</label>\n                <input\n                    type=\"text\"\n                    value={bio}\n                    onChange={(e) => setBio(e.target.value)}\n                    placeholder=\"Tell your colleagues a bit about yourself\"\n                />\n\n                {/* Think about changing type to force date */}\n                <label>Joined</label>\n                <input\n                    type=\"text\"\n                    value={joined}\n                    onChange={(e) => setJoined(e.target.value)}\n                    placeholder=\"Eg: 20th April 2020\"\n                />\n\n\n                <label>Location</label>\n                <input\n                    type=\"text\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    placeholder=\"Where are you currently based?\"\n                />\n\n                <label>Availibility</label>\n                <input\n                    type=\"text\"\n                    value={availability}\n                    onChange={(e) => setAvailability(e.target.value)}\n                    placeholder=\"How available are you approximately per week?\"\n                />\n\n                <label>Partnership Opportunities</label>\n                <input\n                    type=\"text\"\n                    value={partnership_opportunities}\n                    onChange={(e) => setPartnership_opportunities(e.target.value)}\n                    placeholder=\"Eg: Department of Computing at Imperial College London\"\n                />\n\n                <label>Interests</label>\n                <input\n                    type=\"text\"\n                    value={interests}\n                    onChange={(e) => setInterests(e.target.value)}\n                    placeholder=\"What are your hobbies?\"\n                />\n\n                <button>Add user</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AddUser;","import { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { useForm } from \"react-hook-form\"\nimport useFetch from './useFetch'\n\nconst EditProject = () => {\n    const { id } = useParams();\n    const { data: {name, description, status, location, tag, files}, error } = useFetch(\"/projects/\" + id)\n\n    const history = useHistory();\n    const oldProjectDetails = {\n        name: name,\n        description: description,\n        status: status,\n        location: location,\n        tag: tag,\n        files: files\n    }\n    \n    const { register, handleSubmit } = useForm({\n        defaultValues: oldProjectDetails\n    });\n\n    const onSubmit = e => {\n        fetch(\"/projects/\" + id, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(e)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"edit-project\">\n            <h2>Edit project</h2>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <label htmlFor=\"name\">Project name</label>\n                <input {...register(\"name\")}\n                    // type=\"text\"\n                    placeholder=\"Insert project name here\"\n                    // name=\"name\"\n                />\n                <label>Description</label>\n                <textarea {...register(\"description\")} name=\"description\" placeholder=\"Insert description of the project here\"></textarea>\n                <label>Status</label>\n                <select {...register(\"status\")} name=\"status\">\n                    <option value=\"Progress\">Progress</option>\n                    <option value=\"Available\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <label>Location</label>\n                <input\n                    {...register(\"location\")}\n                    type=\"text\"\n                    placeholder=\"Insert location of project here\"\n                    name=\"location\"\n                />\n                <label>Type of project</label>\n                <select {...register(\"tag\")} name=\"tag\">\n                    <option value=\"Social\">Social</option>\n                    <option value=\"Education\">Education</option>\n                    <option value=\"Wash\">Wash</option>\n                    <option value=\"Environment\">Environment</option>\n                    <option value=\"Health\">Health</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <label>Google Drive folder</label>\n                <textarea {...register(\"files\")} name=\"files\" placeholder=\"Insert Google Drive Folder link here\"></textarea>\n                <button type=\"submit\">Save project details</button>\n            </form>\n        </div>\n    );\n}\n\nexport default EditProject;","import React from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport { Link } from 'react-router-dom'\nexport default props => {\n  return (\n    <Menu>\n      <div className=\"menu-item\" > \n      <Link to={`/`}>Home</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/users`}>All Users</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/add-user`}>Add User</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/users/john34`}>Profile</Link>\n      </div>\n    </Menu>\n  );\n};","import { useHistory, useParams } from \"react-router-dom\"\nimport { useForm } from \"react-hook-form\"\nimport useFetch from './useFetch'\n\nconst EditUser = () => {\n    const { username } = useParams();\n    const { data: {firstname, surname, password, title, email, bio, joined, \n        location, availability, partnership_opportunities, interests}, error } = useFetch(\"/users/\" + username)\n\n    const history = useHistory();\n    const oldUserDetails = {\n        firstname: firstname,\n        surname: surname,\n        password: password,\n        title: title,\n        email: email,\n        bio: bio,\n        joined: joined,\n        location: location,\n        availability: availability,\n        partnership_opportunities: partnership_opportunities,\n        interests: interests,\n    }\n    \n    const { register, handleSubmit } = useForm({\n        defaultValues: oldUserDetails\n    });\n\n    const onSubmit = e => {\n        fetch(\"/users/\" + username, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(e)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"edit-user\">\n            <h2>Edit user</h2>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <label htmlFor=\"firstname\">Firstname</label>\n                <input {...register(\"firstname\")}\n                    placeholder=\"Input your first name here\"\n                />\n\n                <label htmlFor=\"surname\">Surname</label>\n                <input {...register(\"surname\")}\n                    placeholder=\"Input surname here\"\n                />\n\n                <label htmlFor=\"title\">Title</label>\n                <input {...register(\"title\")}\n                    placeholder=\"State your role at InAGlobe (eg: volunteer)\"\n                />\n\n                <label htmlFor=\"password\">Password</label>\n                <input {...register(\"password\")}\n                    placeholder=\"Input the password\"\n                />\n\n                <label htmlFor=\"email\">Email</label>\n                <input {...register(\"email\")}\n                    placeholder=\"Input InAGlobe email here\"\n                />\n\n\n                <label htmlFor=\"bio\">Bio</label>\n                <input {...register(\"bio\")}\n                    placeholder=\"Tell your colleagues a bit about yourself\"\n                />\n\n                {/* Think about changing type to force date */}\n                <label htmlFor=\"joined\">Joined</label>\n                <input {...register(\"joined\")}\n                    placeholder=\"Eg: 20th April 2020\"\n                />\n\n\n                <label htmlFor=\"location\">Location</label>\n                <input {...register(\"location\")}\n                    placeholder=\"Where are you currently based?\"\n                />\n\n                <label htmlFor=\"availability\">Availibility</label>\n                <input {...register(\"availability\")}\n                    placeholder=\"How available are you approximately per week?\"\n                />\n\n                <label htmlFor=\"partnership_opportunities\">Partnership Opportunities</label>\n                <input {...register(\"partnership_opportunities\")}\n                    placeholder=\"Eg: Department of Computing at Imperial College London\"\n                />\n\n                <label htmlFor=\"interests\">Interests</label>\n                <input {...register(\"interests\")}\n                    placeholder=\"What are your hobbies?\"\n                />\n                <button type=\"submit\">Save user details</button>\n            </form>\n        </div>\n    );\n}\n\nexport default EditUser;","import { useState } from \"react\";\n\nconst ProjectTaskList = ({ project_tasks }) => {\n    /* pass in filtered dataset containing tasks for a specific project*/\n\n    const [description, setDescription] = useState(\"\");\n    const [priority, setPriority] = useState(1);\n    const [due_date, setDueDate] = useState(Date.now);\n    const [completed, setCompleted] = useState(\"\");\n    const [project_id, setProjectId] = useState(\"\");\n\n    const handleComplete = task => e => {\n        e.preventDefault();\n        console.log(task.id)\n\n        setDescription(task.description)\n        setPriority(task.priority)\n        setDueDate(task.due_date)\n        setCompleted(\"Completed\")\n        setProjectId(task.project_id)\n        const newTask = { description, priority, due_date, completed, project_id }\n\n        console.log(newTask)\n\n        fetch((\"/projects/\" + task.project_id + \"/tasks/\" + task.id, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(task)\n        }))\n    };\n\n    const handleDelete = task => e => {\n        e.preventDefault();\n        fetch((\"/projects/\" + task.project_id + \"/tasks/\" + task.id, {\n            method: 'DELETE'\n        }))\n    };\n\n    return (\n        <div className=\"project-tasks-list\">\n            {project_tasks.map((task) => (\n                <div className=\"preview\" key={task.id}>\n                        <div>\n                            <h2>{task.description}</h2>\n                            <h3>{task.due_date}</h3>\n                        </div>\n                        \n                        <h3>{task.priority}</h3>\n                        <button onClick={handleComplete(task)}>Complete</button>\n                        <button onClick={handleDelete(task)}>Delete</button>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default ProjectTaskList;\n","import { useParams } from 'react-router';\n\nimport ProjectTaskList from './ProjectTaskList'\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\n\nconst ProjectTasks = () => {\n    const { id } = useParams();\n    const { data: project, error } = useFetch(\"/projects/\" + id)\n\n    const { data: project_tasks, error2 } = useFetch(\"/projects/\" + id + \"/tasks\");\n\n    return (\n        <div className=\"project-tasks\">\n            {project_tasks && <h1>{project.name}: tasks</h1>}\n            <h2>Ongoing Project Tasks</h2>\n            {project_tasks && <ProjectTaskList project_tasks={project_tasks.filter(task => !task.completed)} title=\"Ongoing Project Tasks\"/>}\n            {project_tasks && <ProjectTaskList project_tasks={project_tasks.filter(task => task.completed)} title=\"Ongoing Project Tasks\"/>}\n\n            <div className=\"add-task-button-wrapper\">\n                {project_tasks && <Link to={`/projects/${project.id}/add-task`} className=\"add-task-button\">Add Task</Link>}\n            </div>\n        </div>\n    );\n}\n\nexport default ProjectTasks;","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport { useParams } from \"react-router\"\nimport useFetch from \"./useFetch\";\n\nconst AddProjectTask = () => {\n    const [description, setDescription] = useState(\"\");\n    const [due_date, setDueDate] = useState(Date.now);\n    const [priority, setPriority] = useState(1);\n    const [completed, setCompleted] = useState(false);\n    const { id } = useParams();\n    const { data: project, error } = useFetch(\"/projects/\" + id)\n\n\n    const history = useHistory();\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const newProjectTask = {\n            description,\n            due_date,\n            priority,\n            completed\n        }\n\n        fetch(\"/projects/\" + project.id + \"/tasks\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newProjectTask)\n        }).then(() => {\n            history.push('/projects/' + id);\n        })\n    }\n\n    return (\n        <div className=\"add-project-task\">\n            <h2>Add a new task</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Description</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    placeholder=\"Input description here\"\n                />\n\n\n                <label>Due Date</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={due_date}\n                    onChange={(e) => setDueDate(e.target.value)}\n                    placeholder=\"Input your first name here\"\n                />\n\n                <label>Priority</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={priority}\n                    onChange={(e) => setPriority(e.target.value)}\n                    placeholder=\"Input priority here\"\n                />\n\n                <label>Status</label>\n                <select value={completed} onChange={(e) => setCompleted(e.target.value)}>\n                    <option value=\"Incomplete\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <button>Add task</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AddProjectTask;","import Navbar from './Navbar'\nimport Home from './Home'\nimport CreateProject from './CreateProject'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport ProjectDetails from './ProjectDetails'\nimport PageNotFound from './PageNotFound'\nimport MyProfile from './MyProfile'\nimport User from './User'\nimport Users from './Users'\nimport AddUser from './AddUser'\nimport EditProject from './EditProject'\nimport Sidebar from './Sidebar'  \nimport EditUser from './EditUser'\nimport ProjectTasks from './ProjectTasks'\nimport AddProjectTask from './AddProjectTask'\n\nfunction App() {\n  const title =  \"Dashboard\"\n  return (\n    <Router>\n      <div className=\"App\">  \n      <Sidebar />\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/create-project\">\n              <CreateProject />\n            </Route>\n            <Route exact path=\"/add-user\">\n              <AddUser />  \n            </Route>\n            <Route exact path=\"/my-profile\">\n              <MyProfile />\n            </Route>\n            <Route exact path=\"/users\">\n              <Users />  \n            </Route>\n            <Route exact path=\"/users/:username\">\n              <User />\n            </Route>\n            <Route exact path=\"/edit-user/:username\">\n              <EditUser />\n            </Route>            \n            <Route exact path=\"/projects/:id/add-task\">\n              <AddProjectTask />  \n            </Route>       \n            <Route exact path=\"/projects/:id/tasks\">\n              <ProjectTasks />          \n            </Route>\n            <Route exact path=\"/projects/:id\">\n              <ProjectDetails />\n            </Route>\n            <Route exact path=\"/edit-project/:id\">\n              <EditProject />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}