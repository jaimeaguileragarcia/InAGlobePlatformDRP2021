{"version":3,"sources":["Navbar.js","ProjectList.js","useFetch.js","PersonalToDo.js","Home.js","CreateProject.js","ProjectDetails.js","PageNotFound.js","MyProfile.js","User.js","UserList.js","Users.js","AddUser.js","EditProject.js","Sidebar.js","EditUser.js","ProjectTaskList.js","ProjectTasks.js","AddProjectTask.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","style","color","fontSize","borderRadius","to","ProjectList","projects","title","map","project","id","name","status","useFetch","url","useState","data","setData","error","setError","isPending","setIsPending","useEffect","fetch","then","res","ok","Error","json","catch","err","message","PersonalToDo","todos","users","todo_desc","setTodoDesc","priority","setPriority","Date","now","due_date","setDueDate","username","setUsername","float","onClick","document","getElementsByClassName","display","onSubmit","e","preventDefault","newTodo","method","headers","body","JSON","stringify","window","location","reload","value","onChange","target","required","placeholder","type","user","todo","Home","isPendingProjects","errorProjects","isPendingTodos","errorTodos","width","filter","CreateProject","setName","description","setDescription","setStatus","tag","setTag","setLocation","files","setFiles","selectUsers","setSelectUsers","history","useHistory","newProject","response","project_id","assign_project","console","log","push","multiple","concat","firstname","surname","ProjectDetails","useParams","marginBottom","marginright","backgroundColor","marginRight","open","PageNotFound","MyProfile","email","bio","joined","availability","partnership_opportunities","interests","User","UserList","Users","AddUser","setFirstname","setSurname","password","setPassword","setTitle","setEmail","setBio","setJoined","setAvailability","setPartnership_opportunities","setInterests","newUser","EditProject","oldProjectDetails","useForm","defaultValues","register","handleSubmit","htmlFor","props","EditUser","oldUserDetails","ProjectTaskList","project_tasks","completed","setCompleted","setProjectId","handleComplete","task","newTask","handleDelete","ProjectTasks","errorProject","isPendingProject","isPendingTasks","errorTasks","AddProjectTask","newProjectTask","App","Sidebar","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"js/main.9211b1b7.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar\" >\n            <a href=\"/\" style={{ \n                color: '#ff4e83',\n                fontSize: '20px',\n                borderRadius: '8px' \n            }}>InAGlobe Platform</a>\n            <div className=\"links\"> \n                <Link to={`/create-project`}>New Project</Link>\n                <Link to={`/users/john34`}>My Profile</Link>\n            </div>\n        </nav>\n    );\n}\n \nexport default Navbar;","import { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects, title }) => {\n\n    return (\n        <div className=\"project-list\">\n            <h2>{title}</h2>\n            {projects.map((project) => (\n                <div className=\"preview\" key={project.id}>\n                    <Link to={`/projects/${project.id}`}>\n                        <h2>{project.name}</h2>\n                        <h3>{project.status}</h3>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default ProjectList;","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n\n  useEffect(() => {\n    fetch(url)\n        .then(res => {\n            if (!res.ok) { // error coming back from server\n                throw Error('could not fetch the data for that resource');\n            } \n            return res.json();\n        })\n        .then(data => {\n            setData(data);\n            setIsPending(false);\n            setError(null);\n        })\n        .catch(err => {\n            // auto catches network / connection error\n            setError(err.message);\n        })\n  }, [url])\n\n  return { data, error, isPending };\n}\n \nexport default useFetch;","import useFetch from './useFetch'\nimport { useState } from \"react\";\n\nconst PersonalToDo = ({ todos, title }) => {\n\n    const openTaskForm = () => {\n        document.getElementsByClassName(\"add-todo-form\")[0].style.display = \"block\";\n    }\n\n    const { data: users, error, isPending } = useFetch(\"/users\")\n\n    const [todo_desc, setTodoDesc] = useState(\"\");\n    const [priority, setPriority] = useState(1);\n    const [due_date, setDueDate] = useState(Date.now());\n    const [username, setUsername] = useState(\"none\");\n\n    const handleSubmit = e => {\n        document.getElementsByClassName(\"add-todo-form\")[0].style.display = \"none\";\n\n        e.preventDefault();\n        const newTodo = { todo_desc, priority, due_date, username };\n\n        fetch(\"/todos\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newTodo)\n        }).then(() => {\n            window.location.reload();\n        })\n    }\n\n    const handleRemove = id => e => {\n        e.preventDefault();\n        fetch(\"/todos/\" + id, { method: 'DELETE' })\n            .then(() => {\n                window.location.reload();\n            })\n    };\n\n    return (\n        <div className=\"todo-list\" style={{float: \"right\"}}>\n            <h2>{title}</h2>\n\n            <div className=\"add-todo-button\">\n                <button onClick={openTaskForm}>Add a personal task</button>\n            </div>\n\n            { isPending && <h2>Loading...</h2> }\n\n            <div className=\"add-todo-form\">\n                { users && <form onSubmit={handleSubmit}>\n                    <label>Task description</label>\n                    <textarea value={todo_desc} onChange={(e) => setTodoDesc(e.target.value)} required placeholder=\"Add some awesome description!\" ></textarea>\n                    <label>Priority level</label>\n                    <select value={priority} onChange={(e) => setPriority(e.target.value)} >\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                    </select>\n                    <label>When should this task be done by?</label>\n                    <input\n                        type=\"date\"\n                        value={due_date}\n                        onChange={(e) => setDueDate(e.target.value)}\n                    />\n                    <label>Assigned user</label>\n                    <select value={username} onChange={(e) => setUsername(e.target.value)} >\n                        <option value=\"none\">None</option>\n                        {users.map(user => <option value={user.username}>{user.username}</option>)}\n                    </select>\n                    <button>Save task</button>\n                </form> }\n            </div>\n\n            <div className=\"personal-todos\">\n                {todos.map((todo) => (\n                    <div className=\"todo-preview\" key={todo.id}>\n                        <h2>{todo.todo_desc}</h2>\n                        <h3><strong>Priority level:</strong> {todo.priority}</h3>\n                        <h3><strong>To be done by:</strong> {todo.due_date}</h3>\n                        <button onClick={handleRemove(todo.id)}>Complete</button>\n                    </div>\n                ))}\n            </div>\n\n        </div>\n    );\n\n}\n\nexport default PersonalToDo;","import ProjectList from './ProjectList'\nimport PersonalToDo from './PersonalToDo'\nimport useFetch from './useFetch'\n\nconst Home = () => {\n\n    const {data: projects, errorProjects, isPendingProjects} = useFetch(\"/projects\")\n    const {data: todos, errorTodos, isPendingTodos} = useFetch(\"/todos\")\n\n    return (\n        <div className=\"home\">\n            <h1>Dashboard</h1>\n            <div className=\"home-projects\" style={{float: \"left\", width: \"600px\"}}>\n                { isPendingProjects && <h2>Loading...</h2> }\n                { projects && <ProjectList projects={projects} title=\"All Projects\"/> }\n                { projects && <ProjectList projects={projects.filter(project => project.status === \"Completed\")} title=\"Completed Projects\"/> }\n            </div>\n            <div className=\"homeTodos\">\n                { isPendingTodos && <h2>Loading...</h2> }\n                { todos && <PersonalToDo todos={todos.filter(todo => todo.username === \"john34\")} title=\"Personal ToDo items\"/> }\n            </div>\n        </div>\n        \n    );\n}\n \nexport default Home;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport useFetch from './useFetch'\n\nconst CreateProject = () => {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [status, setStatus] = useState(\"Available\");\n    const [tag, setTag] = useState(\"Other\");\n    const [location, setLocation] = useState(\"\");\n    const [files, setFiles] = useState(\"\");\n    const [selectUsers, setSelectUsers] = useState([]);\n    const [username, setUsername] = useState(\"\");\n\n    const history = useHistory();\n\n    const { data: users, error, isPending } = useFetch(\"/users\")\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const newProject = { name, description, status, tag, location, files };\n\n        fetch(\"/projects\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newProject)\n        }).then(response => {\n            const project_id = response.json().id\n            selectUsers.map(user => {\n                setUsername(user.username)\n                const assign_project = { username, project_id };\n    \n                console.log(\"The username is \" + {username})\n                console.log(\"The project_id is \" + {project_id})\n    \n                fetch(\"/user_project\", {\n                    method: 'POST',\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(assign_project)\n                })\n            })\n        }).then(() => {\n            history.push('/');\n        })\n\n    }\n\n    return (\n        <div className=\"create-project\">\n            <h2>Add a new project</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Project name</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    placeholder=\"Input project name\"\n                />\n                <label>Description</label>\n                <textarea required placeholder=\"Add some awesome description!\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                <label>Status</label>\n                <select value={status} onChange={(e) => setStatus(e.target.value)}>\n                    <option value=\"Progress\">Progress</option>\n                    <option value=\"Available\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <label>Location</label>\n                <input\n                    type=\"text\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    placeholder=\"Eg: United Kingdom\"\n                />\n                <label>Type of project</label>\n                <select value={tag} onChange={(e) => setTag(e.target.value)}>\n                    <option value=\"Social\">Social</option>\n                    <option value=\"Education\">Education</option>\n                    <option value=\"Wash\">Wash</option>\n                    <option value=\"Environment\">Environment</option>\n                    <option value=\"Health\">Health</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <label>Volunteers assigned to this project</label>\n                <select multiple={true} onChange={(e) => setSelectUsers(selectUsers.concat(e.target.value))} value={selectUsers} >\n                    {users.map(user => <option value={user.username}>{user.firstname} {user.surname}</option>)}\n                </select>\n                <label>Google Drive folder</label>\n                <textarea placeholder=\"Copy the link to the Google Drive folder for this project\" value={files} onChange={(e) => setFiles(e.target.value)}></textarea>\n                <button>Add project</button>\n            </form>\n        </div>\n    );\n}\n\nexport default CreateProject;","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\n\nconst ProjectDetails = () => {\n    const { id } = useParams();\n    const history = useHistory();\n\n    const { data: project, error, isPending } = useFetch(\"/projects/\" + id)\n\n    const handleRemove = e => {\n        e.preventDefault()\n        fetch(\"/projects/\" + id, { method: 'DELETE' })\n            .then(() => { history.push('/'); })\n    };\n\n    return (\n        <div className=\"project-details\">\n            { isPending && <h2>Loading...</h2> }\n            { project && <h2>{project.name}</h2> }\n            { project && <button style={{\n                fontSize: '20px',\n                color: '#fff',\n                marginBottom: '30px',\n                marginright: '10px',\n                borderRadius: '8px',\n                backgroundColor: '#f1b535'\n            }}>Status: {project.status}</button> }\n            { project && <button style={{\n                fontSize: '20px',\n                color: '#fff',\n                marginBottom: '30px',\n                marginRight: '10px',\n                borderRadius: '8px',\n                backgroundColor: '#595bc0'\n            }}>{project.tag}</button> }\n            { project && <h4>Location: {project.location}</h4> }\n            { project && <button onClick={(e) => {\n                e.preventDefault();\n                window.open(project.files, \"_blank\");\n            }}>Documents</button> }\n            { project && <p>{project.description}</p> }\n\n            <div className=\"project-tasks\">\n                { project && <Link to={`/projects/${project.id}/tasks`} className=\"view-tasks-button\">View Tasks</Link> }\n\n                { project && <Link to={`/projects/${project.id}/add-task`} className=\"add-task-button\">Add Task</Link> }\n            </div>\n\n            <div>\n                { project && <button onClick={handleRemove}>Delete project</button> }\n\n                { project && <Link to={`/edit-project/${project.id}`} className=\"edit-project-button\">Edit project</Link> }\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default ProjectDetails;","import { Link } from \"react-router-dom\"\n\nconst PageNotFound = () => {\n    return (\n        <div className=\"page-not-found\">\n            <h2>Something went wrong...</h2>\n            <p>That page cannot be found</p>\n            <Link to='/'>Back to the main page</Link>\n        </div>\n    );\n}\n \nexport default PageNotFound;","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\n\nconst MyProfile = () => {\n    const {username} = useParams();\n    const history = useHistory();\n    \n    const {data: user, error, isPending} = useFetch(\"/users/rs0409\")\n    \n\n    return (\n        <div className=\"my-profile\">\n            { isPending && <h2>Loading...</h2> }\n            { user && <h2>{user.firstname + \" \" + user.surname}</h2> }\n            { user && <h1>{\"Username: \" + user.username}</h1> }\n            { user && <h1>{\"Title: \" + user.title}</h1> }\n            { user && <h1>{\"Email: \" + user.email}</h1> }\n            { user && <h1>{\"Bio: \" + user.bio}</h1> }\n            { user && <h1>{\"Joined: \" + user.joined}</h1> }\n            { user && <h1>{\"Location: \" + user.location}</h1> }\n            { user && <h1>{\"Availability: \" + user.availability}</h1> }\n            { user && <h1>{\"Partnership Opportunities: \" + user.partnership_opportunities}</h1> }\n            { user && <h1>{\"Interests: \" + user.interests}</h1> }    \n        </div>\n    );\n}\n \nexport default MyProfile;\n\n\n\n","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\n\nconst User = () => {\n    const {username} = useParams();\n    const history = useHistory();\n    \n    const {data: user, error, isPending} = useFetch(\"/users/\" + username)\n    \n    const handleRemove = e => {\n        e.preventDefault()\n        fetch(\"/users/\" + username, {method: 'DELETE'})\n            .then(()=> {history.push('/');})\n      };\n\n    return (\n        <div className=\"user\">\n            { isPending && <h2>Loading...</h2> }\n            { user && <div>\n                <h2>{user.firstname + \" \" + user.surname}</h2>\n            </div> }\n\n            { user && <div>\n                <h3><strong>Username: </strong>{user.username}</h3>\n                <h3><strong>Email: </strong>{user.email}</h3>       \n                <h3><strong>Title: </strong>{user.title}</h3>\n                <h3><strong>Joined: </strong>{user.joined}</h3>\n                <h3><strong>Location: </strong>{user.location}</h3>\n                <h3><strong>Availability: </strong>{user.availability}</h3>\n            </div> }\n\n            <br />\n\n            { user && <div>\n                <label><strong>Bio</strong></label>\n                <p>{user.bio}</p>\n            </div> }\n            \n            { user && <div>\n                <label><strong>Partnership Opportunities</strong></label>\n                <p>{user.partnership_opportunities}</p>\n            </div> }\n\n            { user && <div>\n                <label><strong>Interests</strong></label>\n                <p>{user.interests}</p>\n            </div> }\n\n            { user && <button onClick={handleRemove}>Delete user</button> }\n            \n            { user && <Link to={`/edit-user/${username}`} className=\"edit-user-button\">Edit details</Link> }\n    </div>\n    );\n}\n \nexport default User;","import { Link } from 'react-router-dom'\n\nconst UserList = ({ users }) => {\n\n    return (\n        <div className=\"user-list\">\n\n            {users.map((user) => (\n                <div className=\"preview\" key={user.username}>\n                    <Link to={`/users/${user.username}`}>\n                        <h2>{user.username}</h2>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default UserList;\n","import UserList from './UserList'\nimport useFetch from './useFetch'\n\nconst Users = () => {\n\n    const {data: users, error, isPending} = useFetch(\"/users\")\n\n    return (\n        <div className=\"users\">\n            <h1>Users</h1>\n            { isPending && <h2>Loading...</h2> }\n            { users && <UserList users={users} title=\"All Users\"/> }\n        </div>\n    );\n}\n \nexport default Users;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\n\n\nconst AddUser = () => {\n    const [firstname, setFirstname] = useState(\"\");\n    const [surname, setSurname] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [title, setTitle] = useState(\"\")\n    const [email, setEmail] = useState(\"\");\n    const [bio, setBio] = useState(\"\");\n    const [joined, setJoined] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n    const [availability, setAvailability] = useState(\"\");\n    const [partnership_opportunities, setPartnership_opportunities] = useState(\"\");\n    const [interests, setInterests] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n\n\n    const history = useHistory();\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const newUser = {\n            firstname,\n            surname,\n            password,\n            title,\n            email,\n            bio,\n            joined,\n            location,\n            availability,\n            partnership_opportunities,\n            interests,\n            username\n        }\n\n        fetch(\"/users\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newUser)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"add-user\">\n            <h2>Add a new user</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Username</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    placeholder=\"Input username here\"\n                />\n\n\n                <label>Firstname</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={firstname}\n                    onChange={(e) => setFirstname(e.target.value)}\n                    placeholder=\"Input your first name here\"\n                />\n\n                <label>Surname</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={surname}\n                    onChange={(e) => setSurname(e.target.value)}\n                    placeholder=\"Input surname here\"\n                />\n\n                <label>Title</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    placeholder=\"State your role at InAGlobe (eg: volunteer)\"\n                />\n\n                <label>Password</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"Input the default password (to be changed by the user)\"\n                />\n\n                <label>Email</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"Input InAGlobe email here\"\n                />\n\n\n                <label>Bio</label>\n                <input\n                    type=\"text\"\n                    value={bio}\n                    onChange={(e) => setBio(e.target.value)}\n                    placeholder=\"Tell your colleagues a bit about yourself\"\n                />\n\n                {/* Think about changing type to force date */}\n                <label>Joined</label>\n                <input\n                    type=\"text\"\n                    value={joined}\n                    onChange={(e) => setJoined(e.target.value)}\n                    placeholder=\"Eg: 20th April 2020\"\n                />\n\n\n                <label>Location</label>\n                <input\n                    type=\"text\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    placeholder=\"Where are you currently based?\"\n                />\n\n                <label>Availibility</label>\n                <input\n                    type=\"text\"\n                    value={availability}\n                    onChange={(e) => setAvailability(e.target.value)}\n                    placeholder=\"How available are you approximately per week?\"\n                />\n\n                <label>Partnership Opportunities</label>\n                <input\n                    type=\"text\"\n                    value={partnership_opportunities}\n                    onChange={(e) => setPartnership_opportunities(e.target.value)}\n                    placeholder=\"Eg: Department of Computing at Imperial College London\"\n                />\n\n                <label>Interests</label>\n                <input\n                    type=\"text\"\n                    value={interests}\n                    onChange={(e) => setInterests(e.target.value)}\n                    placeholder=\"What are your hobbies?\"\n                />\n\n                <button>Add user</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AddUser;","import { useHistory, useParams } from \"react-router-dom\"\nimport { useForm } from \"react-hook-form\"\nimport useFetch from './useFetch'\n\nconst EditProject = () => {\n    const { id } = useParams();\n    const { data: {name, description, status, location, tag, files}, error, isPending } = useFetch(\"/projects/\" + id)\n\n    const history = useHistory();\n    const oldProjectDetails = {\n        name: name,\n        description: description,\n        status: status,\n        location: location,\n        tag: tag,\n        files: files\n    }\n    \n    const { register, handleSubmit } = useForm({\n        defaultValues: oldProjectDetails\n    });\n\n    const onSubmit = e => {\n        fetch(\"/projects/\" + id, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(e)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"edit-project\">\n            <h2>Edit project</h2>\n            { isPending && <h2>Loading...</h2> }\n            { name && <form onSubmit={handleSubmit(onSubmit)}>\n                <label htmlFor=\"name\">Project name</label>\n                <input {...register(\"name\")}\n                    // type=\"text\"\n                    placeholder=\"Insert project name here\"\n                    // name=\"name\"\n                />\n                <label>Description</label>\n                <textarea {...register(\"description\")} name=\"description\" placeholder=\"Insert description of the project here\"></textarea>\n                <label>Status</label>\n                <select {...register(\"status\")} name=\"status\">\n                    <option value=\"Progress\">Progress</option>\n                    <option value=\"Available\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <label>Location</label>\n                <input\n                    {...register(\"location\")}\n                    type=\"text\"\n                    placeholder=\"Insert location of project here\"\n                    name=\"location\"\n                />\n                <label>Type of project</label>\n                <select {...register(\"tag\")} name=\"tag\">\n                    <option value=\"Social\">Social</option>\n                    <option value=\"Education\">Education</option>\n                    <option value=\"Wash\">Wash</option>\n                    <option value=\"Environment\">Environment</option>\n                    <option value=\"Health\">Health</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <label>Google Drive folder</label>\n                <textarea {...register(\"files\")} name=\"files\" placeholder=\"Insert Google Drive Folder link here\"></textarea>\n                <button type=\"submit\">Save project details</button>\n            </form> }\n        </div>\n    );\n}\n\nexport default EditProject;","import React from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport { Link } from 'react-router-dom'\n\nconst slackLink = \"https://slack.com/intl/en-gb/\"\n\nexport default props => {\n  return (\n    <Menu>\n      <div className=\"menu-item\" > \n      <Link to={`/`}>Home</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/users/john34`}>Profile</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/users`}>All Users</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/add-user`}>Add User</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <a href={slackLink} target=\"_blank\">Go To Slack</a>\n      </div>\n    </Menu>\n  );\n};","import { useHistory, useParams } from \"react-router-dom\"\nimport { useForm } from \"react-hook-form\"\nimport useFetch from './useFetch'\n\nconst EditUser = () => {\n    const { username } = useParams();\n    const { data: {firstname, surname, password, title, email, bio, joined, \n        location, availability, partnership_opportunities, interests}, error, isPending } = useFetch(\"/users/\" + username)\n\n    const history = useHistory();\n    const oldUserDetails = {\n        firstname: firstname,\n        surname: surname,\n        password: password,\n        title: title,\n        email: email,\n        bio: bio,\n        joined: joined,\n        location: location,\n        availability: availability,\n        partnership_opportunities: partnership_opportunities,\n        interests: interests,\n    }\n    \n    const { register, handleSubmit } = useForm({\n        defaultValues: oldUserDetails\n    });\n\n    const onSubmit = e => {\n        fetch(\"/users/\" + username, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(e)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"edit-user\">\n            <h2>Edit user</h2>\n            { isPending && <h2>Loading...</h2> }\n            { firstname && <form onSubmit={handleSubmit(onSubmit)}>\n                <label htmlFor=\"firstname\">Firstname</label>\n                <input {...register(\"firstname\")}\n                    placeholder=\"Input your first name here\"\n                />\n\n                <label htmlFor=\"surname\">Surname</label>\n                <input {...register(\"surname\")}\n                    placeholder=\"Input surname here\"\n                />\n\n                <label htmlFor=\"title\">Title</label>\n                <input {...register(\"title\")}\n                    placeholder=\"State your role at InAGlobe (eg: volunteer)\"\n                />\n\n                <label htmlFor=\"password\">Password</label>\n                <input {...register(\"password\")}\n                    placeholder=\"Input the password\"\n                />\n\n                <label htmlFor=\"email\">Email</label>\n                <input {...register(\"email\")}\n                    placeholder=\"Input InAGlobe email here\"\n                />\n\n\n                <label htmlFor=\"bio\">Bio</label>\n                <input {...register(\"bio\")}\n                    placeholder=\"Tell your colleagues a bit about yourself\"\n                />\n\n                {/* Think about changing type to force date */}\n                <label htmlFor=\"joined\">Joined</label>\n                <input {...register(\"joined\")}\n                    placeholder=\"Eg: 20th April 2020\"\n                />\n\n\n                <label htmlFor=\"location\">Location</label>\n                <input {...register(\"location\")}\n                    placeholder=\"Where are you currently based?\"\n                />\n\n                <label htmlFor=\"availability\">Availibility</label>\n                <input {...register(\"availability\")}\n                    placeholder=\"How available are you approximately per week?\"\n                />\n\n                <label htmlFor=\"partnership_opportunities\">Partnership Opportunities</label>\n                <input {...register(\"partnership_opportunities\")}\n                    placeholder=\"Eg: Department of Computing at Imperial College London\"\n                />\n\n                <label htmlFor=\"interests\">Interests</label>\n                <input {...register(\"interests\")}\n                    placeholder=\"What are your hobbies?\"\n                />\n                <button type=\"submit\">Save user details</button>\n            </form> }\n        </div>\n    );\n}\n\nexport default EditUser;","import { useState } from \"react\";\nimport { useHistory } from 'react-router';\nconst ProjectTaskList = ({ project_tasks }) => {\n    /* pass in filtered dataset containing tasks for a specific project*/\n    const history = useHistory();\n    const [description, setDescription] = useState(\"\");\n    const [priority, setPriority] = useState(1);\n    const [due_date, setDueDate] = useState(Date.now);\n    const [completed, setCompleted] = useState(\"\");\n    const [project_id, setProjectId] = useState(\"\");\n\n    const handleComplete = task => e => {\n        e.preventDefault();\n        console.log(task.id)\n\n        setDescription(task.description)\n        setPriority(task.priority)\n        setDueDate(task.due_date)\n        setCompleted(\"Completed\")\n        setProjectId(task.project_id)\n        const newTask = { description, priority, due_date, completed, project_id }\n\n        console.log(newTask)\n\n        fetch(\"/projects/\" + task.project_id + \"/tasks/\" + task.id, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(task)\n        }).then(() => {\n            window.location.reload();\n        })\n    \n    };\n\n    const handleDelete = task => e => {\n        e.preventDefault();\n\n        fetch(\"/projects/\" + task.project_id + \"/tasks/\" + task.id, {\n            method: 'DELETE',\n        }).then(() => {\n            window.location.reload();\n        })\n    \n    };\n\n    return (\n        <div className=\"project-tasks-list\">\n            {project_tasks.map((task) => (\n                <div className=\"project-task-preview\" key={task.id}>\n                        <div>\n                            <h2>{task.description}</h2>\n                            <h3>Due date: {task.due_date}</h3>\n                        </div>\n                        \n                        <h3>Priority: {task.priority}</h3>\n                        <button className=\"task-complete-button\" onClick={handleComplete(task)}>Complete</button>\n                        <button className=\"task-delete-button\"onClick={handleDelete(task)}>Delete</button>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default ProjectTaskList;\n","import { useParams } from 'react-router';\n\nimport ProjectTaskList from './ProjectTaskList'\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\n\nconst ProjectTasks = () => {\n    const { id } = useParams();\n    const { data: project, errorProject, isPendingProject } = useFetch(\"/projects/\" + id)\n\n    const { data: project_tasks, errorTasks, isPendingTasks } = useFetch(\"/projects/\" + id + \"/tasks\");\n\n    return (\n        <div className=\"project-tasks\">\n            { project && <h1>{project.name}: tasks</h1>}\n            <h2>Ongoing Project Tasks</h2>\n            { isPendingTasks && <h2>Loading...</h2> }\n            { project_tasks && <ProjectTaskList project_tasks={project_tasks.filter(task => !task.completed)}/> }\n            <h2>Completed Project Tasks</h2>\n            { project_tasks && <ProjectTaskList project_tasks={project_tasks.filter(task => task.completed)}/> }\n\n            <div className=\"add-task-button-wrapper\">\n                { project_tasks && <Link to={`/projects/${project.id}/add-task`} className=\"add-task-button\">Add Task</Link> }\n            </div>\n        </div>\n    );\n}\n\nexport default ProjectTasks;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport { useParams } from \"react-router\"\nimport useFetch from \"./useFetch\";\n\nconst AddProjectTask = () => {\n    const [description, setDescription] = useState(\"\");\n    const [due_date, setDueDate] = useState(Date.now);\n    const [priority, setPriority] = useState(1);\n    const [completed, setCompleted] = useState(false);\n    const { id } = useParams();\n    const { data: project, error, isPending } = useFetch(\"/projects/\" + id)\n\n\n    const history = useHistory();\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const newProjectTask = {\n            description,\n            due_date,\n            priority,\n            completed\n        }\n\n        fetch(\"/projects/\" + project.id + \"/tasks\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newProjectTask)\n        }).then(() => {\n            history.push('/projects/' + id + '/tasks');\n        })\n    }\n\n    return (\n        <div className=\"add-project-task\">\n            <h2>Add a new task</h2>\n            { isPending && <h2>Loading...</h2> }\n            { project && <form onSubmit={handleSubmit}>\n                <label>Description</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    placeholder=\"Input description here\"\n                />\n\n\n                <label>Due Date</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={due_date}\n                    onChange={(e) => setDueDate(e.target.value)}\n                    placeholder=\"Input your first name here\"\n                />\n\n                <label>Priority</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={priority}\n                    onChange={(e) => setPriority(e.target.value)}\n                    placeholder=\"Input priority here\"\n                />\n\n                <label>Status</label>\n                <select value={completed} onChange={(e) => setCompleted(e.target.value)}>\n                    <option value=\"Incomplete\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <button>Add task</button>\n            </form> }\n        </div>\n    );\n}\n\nexport default AddProjectTask;","import Navbar from './Navbar'\nimport Home from './Home'\nimport CreateProject from './CreateProject'\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport ProjectDetails from './ProjectDetails'\nimport PageNotFound from './PageNotFound'\nimport MyProfile from './MyProfile'\nimport User from './User'\nimport Users from './Users'\nimport AddUser from './AddUser'\nimport EditProject from './EditProject'\nimport Sidebar from './Sidebar'  \nimport EditUser from './EditUser'\nimport ProjectTasks from './ProjectTasks'\nimport AddProjectTask from './AddProjectTask'\n\nfunction App() {\n  const title =  \"Dashboard\"\n  return (\n    <Router>\n      <div className=\"App\">  \n      <Sidebar />\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/create-project\">\n              <CreateProject />\n            </Route>\n            <Route exact path=\"/add-user\">\n              <AddUser />  \n            </Route>\n            <Route exact path=\"/my-profile\">\n              <MyProfile />\n            </Route>\n            <Route exact path=\"/users\">\n              <Users />  \n            </Route>\n            <Route exact path=\"/users/:username\">\n              <User />\n            </Route>\n            <Route exact path=\"/edit-user/:username\">\n              <EditUser />\n            </Route>            \n            <Route exact path=\"/projects/:id/add-task\">\n              <AddProjectTask />  \n            </Route>       \n            <Route exact path=\"/projects/:id/tasks\">\n              <ProjectTasks />          \n            </Route>\n            <Route exact path=\"/projects/:id\">\n              <ProjectDetails />\n            </Route>\n            <Route exact path=\"/edit-project/:id\">\n              <EditProject />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}