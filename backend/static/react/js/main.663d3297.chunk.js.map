{"version":3,"sources":["useToken.js","Navbar.js","ProjectList.js","useFetch.js","PersonalToDo.js","Home.js","CreateProject.js","ProjectDetails.js","PageNotFound.js","MyProfile.js","User.js","UserList.js","Users.js","AddUser.js","EditProject.js","Sidebar.js","EditUser.js","ProjectTaskList.js","ProjectTasks.js","AddProjectTask.js","Login.js","ChangePassword.js","App.js","reportWebVitals.js","index.js"],"names":["useToken","useState","tokenString","localStorage","getItem","userToken","JSON","parse","token","getToken","setToken","setItem","stringify","Navbar","className","href","style","color","fontSize","borderRadius","to","ProjectList","projects","title","map","project","id","name","status","useFetch","url","data","setData","error","setError","isPending","setIsPending","useEffect","fetch","then","res","ok","Error","json","catch","err","message","PersonalToDo","todos","users","todo_desc","setTodoDesc","priority","setPriority","Date","now","due_date","setDueDate","username","setUsername","float","onClick","document","getElementsByClassName","display","onSubmit","e","preventDefault","newTodo","method","headers","body","window","location","reload","value","onChange","target","required","placeholder","type","user","todo","Home","isPendingProjects","errorProjects","isPendingTodos","errorTodos","width","filter","CreateProject","setName","description","setDescription","setStatus","tag","setTag","setLocation","files","setFiles","selectUsernames","setSelectUsernames","history","useHistory","handleSubmit","a","newProject","response","responseJSON","project_id","assign_project","push","multiple","concat","firstname","surname","ProjectDetails","useParams","assignments","errorAssignment","isPendingAssignment","marginBottom","marginright","backgroundColor","marginRight","open","PageNotFound","MyProfile","email","bio","joined","availability","partnership_opportunities","interests","User","UserList","Users","AddUser","setFirstname","setSurname","password","setPassword","setTitle","setEmail","setBio","setJoined","setAvailability","setPartnership_opportunities","setInterests","newUser","EditProject","oldProjectDetails","useForm","defaultValues","register","htmlFor","Sidebar","textDecoration","cursor","clear","EditUser","oldUserDetails","ProjectTaskList","project_tasks","completed","setCompleted","setProjectId","handleComplete","task","console","log","newTask","handleDelete","ProjectTasks","errorProject","isPendingProject","isPendingTasks","errorTasks","AddProjectTask","newProjectTask","loginUser","credentials","Login","setUserName","class","ChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","passwordUpdate","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6NAEe,SAASA,IACpB,IAMA,EAA0BC,mBANT,WACb,IAAMC,EAAcC,aAAaC,QAAQ,SACnCC,EAAYC,KAAKC,MAAML,GAC7B,cAAOG,QAAP,IAAOA,OAAP,EAAOA,EAAWG,MAGaC,IAAnC,mBAAOD,EAAP,KAAcE,EAAd,KAOA,MAAO,CACHA,SANc,SAAAL,GACdF,aAAaQ,QAAQ,QAASL,KAAKM,UAAUP,IAC7CK,EAASL,EAAUG,QAKnBA,S,WCGOK,EAlBA,WACX,MAA0Bb,IAATQ,GAAjB,EAAOE,SAAP,EAAiBF,OAEjB,OACI,sBAAKM,UAAU,SAAf,UACI,mBAAGC,KAAK,IAAIC,MAAO,CACfC,MAAO,UACPC,SAAU,OACVC,aAAc,OAHlB,+BAKA,sBAAKL,UAAU,QAAf,UACI,cAAC,IAAD,CAAMM,GAAE,kBAAR,yBACA,cAAC,IAAD,CAAMA,GAAI,UAAYZ,EAAtB,+BCIDa,EAjBK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAE7B,OACI,sBAAKT,UAAU,eAAf,UACI,6BAAKS,IACJD,EAASE,KAAI,SAACC,GAAD,OACV,qBAAKX,UAAU,UAAf,SACI,eAAC,IAAD,CAAMM,GAAE,oBAAeK,EAAQC,IAA/B,UACI,6BAAKD,EAAQE,OACb,6BAAKF,EAAQG,aAHSH,EAAQC,WCqBvCG,EA3BE,SAACC,GAChB,MAAwB7B,mBAAS,IAAjC,mBAAO8B,EAAP,KAAaC,EAAb,KACA,EAA0B/B,mBAAS,MAAnC,mBAAOgC,EAAP,KAAcC,EAAd,KACA,EAAkCjC,oBAAS,GAA3C,mBAAOkC,EAAP,KAAkBC,EAAlB,KAqBA,OAnBAC,qBAAU,WACRC,MAAMR,GACDS,MAAK,SAAAC,GACF,IAAKA,EAAIC,GACL,MAAMC,MAAM,8CAEhB,OAAOF,EAAIG,UAEdJ,MAAK,SAAAR,GACFC,EAAQD,GACRK,GAAa,GACbF,EAAS,SAEZU,OAAM,SAAAC,GAEHX,EAASW,EAAIC,cAEpB,CAAChB,IAEG,CAAEC,OAAME,QAAOE,cCiETY,EAxFM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOzB,EAAY,EAAZA,MAM3B,EAA0CM,EAAS,UAArCoB,EAAd,EAAQlB,KAAoBI,GAA5B,EAAqBF,MAArB,EAA4BE,WAE5B,EAAiClC,mBAAS,IAA1C,mBAAOiD,EAAP,KAAkBC,EAAlB,KACA,EAAgClD,mBAAS,GAAzC,mBAAOmD,EAAP,KAAiBC,EAAjB,KACA,EAA+BpD,mBAASqD,KAAKC,OAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCxD,mBAAS,QAAzC,mBAAOyD,EAAP,KAAiBC,EAAjB,KAyBA,OACI,sBAAK7C,UAAU,YAAYE,MAAO,CAAC4C,MAAO,SAA1C,UACI,6BAAKrC,IAEL,qBAAKT,UAAU,kBAAf,SACI,wBAAQ+C,QAvCC,WACjBC,SAASC,uBAAuB,iBAAiB,GAAG/C,MAAMgD,QAAU,SAsC5D,mCAGF7B,GAAa,4CAEf,qBAAKrB,UAAU,gBAAf,SACMmC,GAAS,uBAAMgB,SAlCR,SAAAC,GACjBJ,SAASC,uBAAuB,iBAAiB,GAAG/C,MAAMgD,QAAU,OAEpEE,EAAEC,iBACF,IAAMC,EAAU,CAAElB,YAAWE,WAAUI,WAAUE,YAEjDpB,MAAM,SAAU,CACZ+B,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMjE,KAAKM,UAAUwD,KACtB7B,MAAK,WACJiC,OAAOC,SAASC,aAuBD,UACP,qDACA,0BAAUC,MAAOzB,EAAW0B,SAAU,SAACV,GAAD,OAAOf,EAAYe,EAAEW,OAAOF,QAAQG,UAAQ,EAACC,YAAY,kCAC/F,mDACA,yBAAQJ,MAAOvB,EAAUwB,SAAU,SAACV,GAAD,OAAOb,EAAYa,EAAEW,OAAOF,QAA/D,UACI,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,kBAEJ,sEACA,uBACIK,KAAK,OACLL,MAAOnB,EACPoB,SAAU,SAACV,GAAD,OAAOT,EAAWS,EAAEW,OAAOF,UAEzC,kDACA,yBAAQA,MAAOjB,EAAUkB,SAAU,SAACV,GAAD,OAAOP,EAAYO,EAAEW,OAAOF,QAA/D,UACI,wBAAQA,MAAM,OAAd,kBACC1B,EAAMzB,KAAI,SAAAyD,GAAI,OAAI,wBAAQN,MAAOM,EAAKvB,SAApB,SAA+BuB,EAAKvB,iBAE3D,oDAIR,qBAAK5C,UAAU,iBAAf,SACKkC,EAAMxB,KAAI,SAAC0D,GAAD,OACP,sBAAKpE,UAAU,eAAf,UACI,6BAAKoE,EAAKhC,YACV,+BAAI,qDAAJ,IAAsCgC,EAAK9B,YAC3C,+BAAI,oDAAJ,IAAqC8B,EAAK1B,YAC1C,wBAAQK,SAlDPnC,EAkD6BwD,EAAKxD,GAlD5B,SAAAwC,GACvBA,EAAEC,iBACF7B,MAAM,UAAYZ,EAAI,CAAE2C,OAAQ,WAC3B9B,MAAK,WACFiC,OAAOC,SAASC,cA8CR,wBAJ+BQ,EAAKxD,IA9CnC,IAAAA,WCHVyD,EAvBF,WAET,MAA2DtD,EAAS,aAAvDP,EAAb,EAAOS,KAA+BqD,GAAtC,EAAuBC,cAAvB,EAAsCD,mBACtC,EAAkDvD,EAAS,UAA9CmB,EAAb,EAAOjB,KAAyBuD,GAAhC,EAAoBC,WAApB,EAAgCD,gBAChC,EAA0BtF,IAATQ,GAAjB,EAAOE,SAAP,EAAiBF,OAEjB,OACI,sBAAKM,UAAU,OAAf,UACI,2CACA,sBAAKA,UAAU,gBAAgBE,MAAO,CAAC4C,MAAO,OAAQ4B,MAAO,SAA7D,UACMJ,GAAqB,4CACrB9D,GAAY,cAAC,EAAD,CAAaA,SAAUA,EAAUC,MAAM,iBACnDD,GAAY,cAAC,EAAD,CAAaA,SAAUA,EAASmE,QAAO,SAAAhE,GAAO,MAAuB,cAAnBA,EAAQG,UAAyBL,MAAM,0BAE3G,sBAAKT,UAAU,YAAf,UACMwE,GAAkB,4CAClBtC,GAAS,cAAC,EAAD,CAAcA,MAAOA,EAAMyC,QAAO,SAAAP,GAAI,OAAIA,EAAKxB,WAAalD,KAAQe,MAAM,+B,uBCyEtFmE,EA1FO,WAClB,MAAwBzF,mBAAS,IAAjC,mBAAO0B,EAAP,KAAagE,EAAb,KACA,EAAsC1F,mBAAS,IAA/C,mBAAO2F,EAAP,KAAoBC,EAApB,KACA,EAA4B5F,mBAAS,aAArC,mBAAO2B,EAAP,KAAekE,EAAf,KACA,EAAsB7F,mBAAS,SAA/B,mBAAO8F,EAAP,KAAYC,EAAZ,KACA,EAAgC/F,mBAAS,IAAzC,mBAAOwE,EAAP,KAAiBwB,EAAjB,KACA,EAA0BhG,mBAAS,IAAnC,mBAAOiG,EAAP,KAAcC,EAAd,KAEA,EAA8ClG,mBAAS,IAAvD,mBAAOmG,EAAP,KAAwBC,EAAxB,KAEMC,EAAUC,cAEhB,EAA0C1E,EAAS,UAArCoB,EAAd,EAAQlB,KAEFyE,GAFN,EAAqBvE,MAArB,EAA4BE,UAEV,uCAAG,WAAM+B,GAAN,qBAAAuC,EAAA,6DACjBvC,EAAEC,iBAEIuC,EAAa,CAAE/E,OAAMiE,cAAahE,SAAQmE,MAAKtB,WAAUyB,SAH9C,SAKM5D,MAAM,YAAa,CACtC+B,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMjE,KAAKM,UAAU8F,KARR,cAKXC,EALW,gBAWUA,EAAShE,OAXnB,OAWXiE,EAXW,OAaXC,EAAaD,EAAalF,GAEhC0E,EAAgB5E,KAAI,SAAAkC,GAChB,IAAMoD,EAAiB,CAAEpD,WAAUmD,cAEnCvE,MAAM,gBAAiB,CACnB+B,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMjE,KAAKM,UAAUkG,QAI7BR,EAAQS,KAAK,KAzBI,4CAAH,uDA4BlB,OACI,sBAAKjG,UAAU,iBAAf,UACI,mDACA,uBAAMmD,SAAUuC,EAAhB,UACI,iDACA,uBACIxB,KAAK,OACLF,UAAQ,EACRH,MAAOhD,EACPiD,SAAU,SAACV,GAAD,OAAOyB,EAAQzB,EAAEW,OAAOF,QAClCI,YAAY,uBAEhB,gDACA,0BAAUD,UAAQ,EAACC,YAAY,gCAAgCJ,MAAOiB,EAAahB,SAAU,SAACV,GAAD,OAAO2B,EAAe3B,EAAEW,OAAOF,UAC5H,2CACA,yBAAQA,MAAO/C,EAAQgD,SAAU,SAACV,GAAD,OAAO4B,EAAU5B,EAAEW,OAAOF,QAA3D,UACI,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,0BAEJ,6CACA,uBACIK,KAAK,OACLL,MAAOF,EACPG,SAAU,SAACV,GAAD,OAAO+B,EAAY/B,EAAEW,OAAOF,QACtCI,YAAY,uBAEhB,oDACA,yBAAQJ,MAAOoB,EAAKnB,SAAU,SAACV,GAAD,OAAO8B,EAAO9B,EAAEW,OAAOF,QAArD,UACI,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,sBAEJ,wEACA,wBAAQqC,UAAU,EAAMpC,SAAU,SAACV,GAAD,OAAOmC,EAAmBD,EAAgBa,OAAO/C,EAAEW,OAAOF,SAASA,MAAOyB,EAA5G,SACKnD,EAAMzB,KAAI,SAAAyD,GAAI,OAAI,yBAAQN,MAAOM,EAAKvB,SAApB,UAA+BuB,EAAKiC,UAApC,IAAgDjC,EAAKkC,gBAE5E,wDACA,0BAAUpC,YAAY,4DAA4DJ,MAAOuB,EAAOtB,SAAU,SAACV,GAAD,OAAOiC,EAASjC,EAAEW,OAAOF,UACnI,wDCfDyC,EArEQ,WACnB,IAAQ1F,EAAO2F,cAAP3F,GACF4E,EAAUC,cAEhB,EAA4C1E,EAAS,aAAeH,GAAtDD,EAAd,EAAQM,KAAsBI,GAA9B,EAAuBF,MAAvB,EAA8BE,WAC9B,EAAoEN,EAAS,iBAAmBH,GAAlF4F,EAAd,EAAQvF,KAAR,EAA2BwF,gBAA3B,EAA4CC,oBAQ5C,OACI,sBAAK1G,UAAU,kBAAf,UACKqB,GAAa,4CACbV,GAAW,6BAAKA,EAAQE,OACxBF,GAAW,yBAAQT,MAAO,CACvBE,SAAU,OACVD,MAAO,OACPwG,aAAc,OACdC,YAAa,OACbvG,aAAc,MACdwG,gBAAiB,WANT,qBAOAlG,EAAQG,UACnBH,GAAW,wBAAQT,MAAO,CACvBE,SAAU,OACVD,MAAO,OACPwG,aAAc,OACdG,YAAa,OACbzG,aAAc,MACdwG,gBAAiB,WANT,SAORlG,EAAQsE,MACXtE,GAAW,4CAAeA,EAAQgD,YAClChD,GAAW,wBAAQoC,QAAS,SAACK,GAC1BA,EAAEC,iBACFK,OAAOqD,KAAKpG,EAAQyE,MAAO,WAFnB,uBAIXzE,GAAW,4BAAIA,EAAQmE,cAExB,oEACA,qBAAK9E,UAAU,+BAAf,SACKwG,EAAY9F,KAAI,SAAAiF,GAAC,OACd,qBAAK3F,UAAU,yBAAyBE,MAAO,CAAC4C,MAAO,OAAQ4B,MAAO,OAAtE,SACI,cAAC,IAAD,CAAMpE,GAAE,iBAAYqF,EAAE/C,UAAtB,SACI,6BAAK+C,EAAE/C,cAFoE+C,EAAE/E,SAS7F,sBAAKZ,UAAU,gBAAf,UACKW,GAAW,cAAC,IAAD,CAAML,GAAE,oBAAeK,EAAQC,GAAvB,UAAmCZ,UAAU,oBAArD,wBAEXW,GAAW,cAAC,IAAD,CAAML,GAAE,oBAAeK,EAAQC,GAAvB,aAAsCZ,UAAU,kBAAxD,yBAGhB,gCACKW,GAAW,wBAAQoC,QApDX,SAAAK,GACjBA,EAAEC,iBACF7B,MAAM,aAAeZ,EAAI,CAAE2C,OAAQ,WAC9B9B,MAAK,WAAQ+D,EAAQS,KAAK,SAiDX,4BAEXtF,GAAW,cAAC,IAAD,CAAML,GAAE,wBAAmBK,EAAQC,IAAMZ,UAAU,sBAAnD,iCCrDbgH,EAVM,WACjB,OACI,sBAAKhH,UAAU,iBAAf,UACI,yDACA,0DACA,cAAC,IAAD,CAAMM,GAAG,IAAT,uCCmBG2G,EAtBG,WACd,MAA0B/H,IAATQ,GAAjB,EAAOE,SAAP,EAAiBF,OAEjB,EAAuCqB,EAAS,UAAYrB,GAA/CyE,EAAb,EAAOlD,KAAmBI,GAA1B,EAAmBF,MAAnB,EAA0BE,WAE1B,OACI,sBAAKrB,UAAU,aAAf,UACMqB,GAAa,4CACb8C,GAAQ,6BAAKA,EAAKiC,UAAY,IAAMjC,EAAKkC,UACzClC,GAAQ,6BAAK,aAAeA,EAAKzE,QACjCyE,GAAQ,6BAAK,UAAYA,EAAK1D,QAC9B0D,GAAQ,6BAAK,UAAYA,EAAK+C,QAC9B/C,GAAQ,6BAAK,QAAUA,EAAKgD,MAC5BhD,GAAQ,6BAAK,WAAaA,EAAKiD,SAC/BjD,GAAQ,6BAAK,aAAeA,EAAKR,WACjCQ,GAAQ,6BAAK,iBAAmBA,EAAKkD,eACrClD,GAAQ,6BAAK,8BAAgCA,EAAKmD,4BAClDnD,GAAQ,6BAAK,cAAgBA,EAAKoD,gBCmCjCC,EApDF,WACT,IAAO5E,EAAY2D,cAAZ3D,SACD4C,EAAUC,cAEhB,EAAuC1E,EAAS,UAAY6B,GAA/CuB,EAAb,EAAOlD,KAAmBI,GAA1B,EAAmBF,MAAnB,EAA0BE,WAQ1B,OACI,sBAAKrB,UAAU,OAAf,UACMqB,GAAa,4CACb8C,GAAQ,8BACN,6BAAKA,EAAKiC,UAAY,IAAMjC,EAAKkC,YAGnClC,GAAQ,gCACN,+BAAI,gDAA4BA,EAAKvB,YACrC,+BAAI,6CAAyBuB,EAAK+C,SAClC,+BAAI,6CAAyB/C,EAAK1D,SAClC,+BAAI,8CAA0B0D,EAAKiD,UACnC,+BAAI,gDAA4BjD,EAAKR,YACrC,+BAAI,oDAAgCQ,EAAKkD,mBAG7C,uBAEElD,GAAQ,gCACN,gCAAO,2CACP,4BAAIA,EAAKgD,SAGXhD,GAAQ,gCACN,gCAAO,iEACP,4BAAIA,EAAKmD,+BAGXnD,GAAQ,gCACN,gCAAO,iDACP,4BAAIA,EAAKoD,eAGXpD,GAAoB,iBAAZvB,GAA+B,wBAAQG,QAvCpC,SAAAK,GACjBA,EAAEC,iBACF7B,MAAM,UAAYoB,EAAU,CAACW,OAAQ,WAChC9B,MAAK,WAAM+D,EAAQS,KAAK,SAoCgB,yBAEvC9B,GAAQ,cAAC,IAAD,CAAM7D,GAAE,qBAAgBsC,GAAY5C,UAAU,mBAA9C,8BCjCPyH,EAhBE,SAAC,GAAe,IAAbtF,EAAY,EAAZA,MAEhB,OACI,qBAAKnC,UAAU,YAAf,SAEKmC,EAAMzB,KAAI,SAACyD,GAAD,OACP,qBAAKnE,UAAU,UAAf,SACI,cAAC,IAAD,CAAMM,GAAE,iBAAY6D,EAAKvB,UAAzB,SACI,6BAAKuB,EAAKvB,cAFYuB,EAAKvB,gBCQpC8E,EAbD,WAEV,MAAwC3G,EAAS,UAApCoB,EAAb,EAAOlB,KAAoBI,GAA3B,EAAoBF,MAApB,EAA2BE,WAE3B,OACI,sBAAKrB,UAAU,QAAf,UACI,uCACEqB,GAAa,4CACbc,GAAS,cAAC,EAAD,CAAUA,MAAOA,EAAO1B,MAAM,kBC0JtCkH,EAhKC,WACZ,MAAkCxI,mBAAS,IAA3C,mBAAOiH,EAAP,KAAkBwB,EAAlB,KACA,EAA8BzI,mBAAS,IAAvC,mBAAOkH,EAAP,KAAgBwB,EAAhB,KACA,EAAgC1I,mBAAS,IAAzC,mBAAO2I,EAAP,KAAiBC,EAAjB,KACA,EAA0B5I,mBAAS,IAAnC,mBAAOsB,EAAP,KAAcuH,EAAd,KACA,EAA0B7I,mBAAS,IAAnC,mBAAO+H,EAAP,KAAce,EAAd,KACA,EAAsB9I,mBAAS,IAA/B,mBAAOgI,EAAP,KAAYe,EAAZ,KACA,EAA4B/I,mBAAS,IAArC,mBAAOiI,EAAP,KAAee,EAAf,KACA,EAAgChJ,mBAAS,IAAzC,mBAAOwE,EAAP,KAAiBwB,EAAjB,KACA,EAAwChG,mBAAS,IAAjD,mBAAOkI,EAAP,KAAqBe,EAArB,KACA,EAAkEjJ,mBAAS,IAA3E,mBAAOmI,EAAP,KAAkCe,EAAlC,KACA,EAAkClJ,mBAAS,IAA3C,mBAAOoI,EAAP,KAAkBe,EAAlB,KACA,EAAgCnJ,mBAAS,IAAzC,mBAAOyD,EAAP,KAAiBC,EAAjB,KAGM2C,EAAUC,cA6BhB,OACI,sBAAKzF,UAAU,WAAf,UACI,gDACA,uBAAMmD,SA9BO,SAAAC,GACjBA,EAAEC,iBAEF,IAAMkF,EAAU,CACZnC,YACAC,UACAyB,WACArH,QACAyG,QACAC,MACAC,SACAzD,WACA0D,eACAC,4BACAC,YACA3E,YAGJpB,MAAM,SAAU,CACZ+B,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMjE,KAAKM,UAAUyI,KACtB9G,MAAK,WACJ+D,EAAQS,KAAK,SAOb,UACI,6CACA,uBACI/B,KAAK,OACLF,UAAQ,EACRH,MAAOjB,EACPkB,SAAU,SAACV,GAAD,OAAOP,EAAYO,EAAEW,OAAOF,QACtCI,YAAY,wBAIhB,8CACA,uBACIC,KAAK,OACLF,UAAQ,EACRH,MAAOuC,EACPtC,SAAU,SAACV,GAAD,OAAOwE,EAAaxE,EAAEW,OAAOF,QACvCI,YAAY,+BAGhB,4CACA,uBACIC,KAAK,OACLF,UAAQ,EACRH,MAAOwC,EACPvC,SAAU,SAACV,GAAD,OAAOyE,EAAWzE,EAAEW,OAAOF,QACrCI,YAAY,uBAGhB,0CACA,uBACIC,KAAK,OACLF,UAAQ,EACRH,MAAOpD,EACPqD,SAAU,SAACV,GAAD,OAAO4E,EAAS5E,EAAEW,OAAOF,QACnCI,YAAY,gDAGhB,6CACA,uBACIC,KAAK,OACLF,UAAQ,EACRH,MAAOiE,EACPhE,SAAU,SAACV,GAAD,OAAO2E,EAAY3E,EAAEW,OAAOF,QACtCI,YAAY,2DAGhB,0CACA,uBACIC,KAAK,OACLF,UAAQ,EACRH,MAAOqD,EACPpD,SAAU,SAACV,GAAD,OAAO6E,EAAS7E,EAAEW,OAAOF,QACnCI,YAAY,8BAIhB,wCACA,uBACIC,KAAK,OACLL,MAAOsD,EACPrD,SAAU,SAACV,GAAD,OAAO8E,EAAO9E,EAAEW,OAAOF,QACjCI,YAAY,8CAIhB,2CACA,uBACIC,KAAK,OACLL,MAAOuD,EACPtD,SAAU,SAACV,GAAD,OAAO+E,EAAU/E,EAAEW,OAAOF,QACpCI,YAAY,wBAIhB,6CACA,uBACIC,KAAK,OACLL,MAAOF,EACPG,SAAU,SAACV,GAAD,OAAO+B,EAAY/B,EAAEW,OAAOF,QACtCI,YAAY,mCAGhB,iDACA,uBACIC,KAAK,OACLL,MAAOwD,EACPvD,SAAU,SAACV,GAAD,OAAOgF,EAAgBhF,EAAEW,OAAOF,QAC1CI,YAAY,kDAGhB,8DACA,uBACIC,KAAK,OACLL,MAAOyD,EACPxD,SAAU,SAACV,GAAD,OAAOiF,EAA6BjF,EAAEW,OAAOF,QACvDI,YAAY,2DAGhB,8CACA,uBACIC,KAAK,OACLL,MAAO0D,EACPzD,SAAU,SAACV,GAAD,OAAOkF,EAAalF,EAAEW,OAAOF,QACvCI,YAAY,2BAGhB,qD,eCpFDuE,EAvEK,WAChB,IAAQ5H,EAAO2F,cAAP3F,GACR,EAAsFG,EAAS,aAAeH,GAA9G,IAAQK,KAAOJ,EAAf,EAAeA,KAAMiE,EAArB,EAAqBA,YAAahE,EAAlC,EAAkCA,OAAQ6C,EAA1C,EAA0CA,SAAUsB,EAApD,EAAoDA,IAAKG,EAAzD,EAAyDA,MAAe/D,GAAxE,EAAiEF,MAAjE,EAAwEE,WAElEmE,EAAUC,cACVgD,EAAoB,CACtB5H,KAAMA,EACNiE,YAAaA,EACbhE,OAAQA,EACR6C,SAAUA,EACVsB,IAAKA,EACLG,MAAOA,GAGX,EAAmCsD,YAAQ,CACvCC,cAAeF,IADXG,EAAR,EAAQA,SAAUlD,EAAlB,EAAkBA,aAclB,OACI,sBAAK1F,UAAU,eAAf,UACI,8CACEqB,GAAa,4CACbR,GAAQ,uBAAMsC,SAAUuC,GAdjB,SAAAtC,GACb5B,MAAM,aAAeZ,EAAI,CACrB2C,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMjE,KAAKM,UAAUsD,KACtB3B,MAAK,WACJ+D,EAAQS,KAAK,WAQH,UACN,uBAAO4C,QAAQ,OAAf,0BACA,iDAAWD,EAAS,SAApB,IAEI3E,YAAY,8BAGhB,gDACA,oDAAc2E,EAAS,gBAAvB,IAAuC/H,KAAK,cAAcoD,YAAY,4CACtE,2CACA,mDAAY2E,EAAS,WAArB,IAAgC/H,KAAK,SAArC,UACI,wBAAQgD,MAAM,WAAd,sBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,2BAEJ,6CACA,iDACQ+E,EAAS,aADjB,IAEI1E,KAAK,OACLD,YAAY,kCACZpD,KAAK,cAET,oDACA,mDAAY+H,EAAS,QAArB,IAA6B/H,KAAK,MAAlC,UACI,wBAAQgD,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,uBAEJ,wDACA,oDAAc+E,EAAS,UAAvB,IAAiC/H,KAAK,QAAQoD,YAAY,0CAC1D,wBAAQC,KAAK,SAAb,yC,QCrBD4E,EA3CC,WAEhB,IAEMtD,EAAUC,cAEhB,EAA0BvG,IAATQ,GAAjB,EAAOE,SAAP,EAAiBF,OAWjB,OACI,eAAC,QAAD,WACE,qBAAKM,UAAU,YAAf,SACA,cAAC,IAAD,CAAMM,GAAE,IAAR,oBAEA,qBAAKN,UAAU,YAAf,SACA,cAAC,IAAD,CAAMM,GAAI,UAAYZ,EAAtB,uBAEA,qBAAKM,UAAU,YAAf,SACA,cAAC,IAAD,CAAMM,GAAE,SAAR,yBAEA,qBAAKN,UAAU,YAAf,SACA,cAAC,IAAD,CAAMM,GAAE,YAAR,wBAEA,qBAAKN,UAAU,YAAf,SACA,mBAAGC,KA9BS,gCA8BQ8D,OAAO,SAA3B,2BAEA,qBAAK/D,UAAU,YAAf,SACA,wBAAQE,MAAO,CAAC6I,eAAgB,YAAaC,OAAQ,WAAYjG,QA3BjD,SAAAK,GACpBA,EAAEC,iBAEFhE,aAAa4J,QAEbvF,OAAOC,SAASC,SAChB4B,EAAQS,KAAK,MAqBT,2BCmESiD,EAvGE,WACb,IAAQtG,EAAa2D,cAAb3D,SACR,EACwF7B,EAAS,UAAY6B,GAD7G,IAAQ3B,KAAOmF,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,QAASyB,EAAnC,EAAmCA,SAAUrH,EAA7C,EAA6CA,MAAOyG,EAApD,EAAoDA,MAAOC,EAA3D,EAA2DA,IAAKC,EAAhE,EAAgEA,OAC5DzD,EADJ,EACIA,SAAU0D,EADd,EACcA,aAAcC,EAD5B,EAC4BA,0BAA2BC,EADvD,EACuDA,UAAmBlG,GAD1E,EACmEF,MADnE,EAC0EE,WAEpEmE,EAAUC,cACV0D,EAAiB,CACnB/C,UAAWA,EACXC,QAASA,EACTyB,SAAUA,EACVrH,MAAOA,EACPyG,MAAOA,EACPC,IAAKA,EACLC,OAAQA,EACRzD,SAAUA,EACV0D,aAAcA,EACdC,0BAA2BA,EAC3BC,UAAWA,GAGf,EAAmCmB,YAAQ,CACvCC,cAAeQ,IADXP,EAAR,EAAQA,SAAUlD,EAAlB,EAAkBA,aAclB,OACI,sBAAK1F,UAAU,YAAf,UACI,2CACEqB,GAAa,4CACf,cAAC,IAAD,CAAMf,GAAE,yBAAR,6BACE8F,GAAa,uBAAMjD,SAAUuC,GAftB,SAAAtC,GACb5B,MAAM,UAAYoB,EAAU,CACxBW,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMjE,KAAKM,UAAUsD,KACtB3B,MAAK,WACJ+D,EAAQS,KAAK,WASE,UACX,uBAAO4C,QAAQ,YAAf,uBACA,iDAAWD,EAAS,cAApB,IACI3E,YAAY,gCAGhB,uBAAO4E,QAAQ,UAAf,qBACA,iDAAWD,EAAS,YAApB,IACI3E,YAAY,wBAGhB,uBAAO4E,QAAQ,QAAf,mBACA,iDAAWD,EAAS,UAApB,IACI3E,YAAY,iDAGhB,uBAAO4E,QAAQ,WAAf,sBACA,iDAAWD,EAAS,aAApB,IACI3E,YAAY,wBAGhB,uBAAO4E,QAAQ,QAAf,mBACA,iDAAWD,EAAS,UAApB,IACI3E,YAAY,+BAIhB,uBAAO4E,QAAQ,MAAf,iBACA,iDAAWD,EAAS,QAApB,IACI3E,YAAY,+CAIhB,uBAAO4E,QAAQ,SAAf,oBACA,iDAAWD,EAAS,WAApB,IACI3E,YAAY,yBAIhB,uBAAO4E,QAAQ,WAAf,sBACA,iDAAWD,EAAS,aAApB,IACI3E,YAAY,oCAGhB,uBAAO4E,QAAQ,eAAf,0BACA,iDAAWD,EAAS,iBAApB,IACI3E,YAAY,mDAGhB,uBAAO4E,QAAQ,4BAAf,uCACA,iDAAWD,EAAS,8BAApB,IACI3E,YAAY,4DAGhB,uBAAO4E,QAAQ,YAAf,uBACA,iDAAWD,EAAS,cAApB,IACI3E,YAAY,4BAEhB,wBAAQC,KAAK,SAAb,sCCtCDkF,EA7DS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAGvB,GADgB5D,cACsBtG,mBAAS,KAA/C,mBAAO2F,EAAP,KAAoBC,EAApB,KACA,EAAgC5F,mBAAS,GAAzC,mBAAOmD,EAAP,KAAiBC,EAAjB,KACA,EAA+BpD,mBAASqD,KAAKC,KAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCxD,mBAAS,IAA3C,mBAAOmK,EAAP,KAAkBC,EAAlB,KACA,EAAmCpK,mBAAS,IAA5C,mBAAO4G,EAAP,KAAmByD,EAAnB,KAEMC,EAAiB,SAAAC,GAAI,OAAI,SAAAtG,GAC3BA,EAAEC,iBACFsG,QAAQC,IAAIF,EAAK9I,IAEjBmE,EAAe2E,EAAK5E,aACpBvC,EAAYmH,EAAKpH,UACjBK,EAAW+G,EAAKhH,UAChB6G,EAAa,aACbC,EAAaE,EAAK3D,YAClB,IAAM8D,EAAU,CAAE/E,cAAaxC,WAAUI,WAAU4G,YAAWvD,cAE9D4D,QAAQC,IAAIC,GAEZrI,MAAM,aAAekI,EAAK3D,WAAa,UAAY2D,EAAK9I,GAAI,CACxD2C,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMjE,KAAKM,UAAU4J,KACtBjI,MAAK,WACJiC,OAAOC,SAASC,cAKlBkG,EAAe,SAAAJ,GAAI,OAAI,SAAAtG,GACzBA,EAAEC,iBAEF7B,MAAM,aAAekI,EAAK3D,WAAa,UAAY2D,EAAK9I,GAAI,CACxD2C,OAAQ,WACT9B,MAAK,WACJiC,OAAOC,SAASC,cAKxB,OACI,qBAAK5D,UAAU,qBAAf,SACKqJ,EAAc3I,KAAI,SAACgJ,GAAD,OACf,sBAAK1J,UAAU,uBAAf,UACQ,gCACI,6BAAK0J,EAAK5E,cACV,4CAAe4E,EAAKhH,eAGxB,4CAAegH,EAAKpH,YACpB,wBAAQtC,UAAU,uBAAuB+C,QAAS0G,EAAeC,GAAjE,sBACA,wBAAQ1J,UAAU,qBAAoB+C,QAAS+G,EAAaJ,GAA5D,sBARmCA,EAAK9I,UCpBjDmJ,EAtBM,WACjB,IAAQnJ,EAAO2F,cAAP3F,GACR,EAA0DG,EAAS,aAAeH,GAApED,EAAd,EAAQM,KAER,GAFA,EAAuB+I,aAAvB,EAAqCC,iBAEuBlJ,EAAS,aAAeH,EAAK,WAA3EyI,EAAd,EAAQpI,KAAiCiJ,GAAzC,EAA6BC,WAA7B,EAAyCD,gBAEzC,OACI,sBAAKlK,UAAU,gBAAf,UACMW,GAAW,+BAAKA,EAAQE,KAAb,aACb,uDACEqJ,GAAkB,4CAClBb,GAAiB,cAAC,EAAD,CAAiBA,cAAeA,EAAc1E,QAAO,SAAA+E,GAAI,OAAKA,EAAKJ,eACtF,yDACED,GAAiB,cAAC,EAAD,CAAiBA,cAAeA,EAAc1E,QAAO,SAAA+E,GAAI,OAAIA,EAAKJ,eAErF,qBAAKtJ,UAAU,0BAAf,SACMqJ,GAAiB,cAAC,IAAD,CAAM/I,GAAE,oBAAeK,EAAQC,GAAvB,aAAsCZ,UAAU,kBAAxD,4BCyDpBoK,EA1EQ,WACnB,MAAsCjL,mBAAS,IAA/C,mBAAO2F,EAAP,KAAoBC,EAApB,KACA,EAA+B5F,mBAASqD,KAAKC,KAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCxD,mBAAS,GAAzC,mBAAOmD,EAAP,KAAiBC,EAAjB,KACA,EAAkCpD,oBAAS,GAA3C,mBAAOmK,EAAP,KAAkBC,EAAlB,KACQ3I,EAAO2F,cAAP3F,GACR,EAA4CG,EAAS,aAAeH,GAAtDD,EAAd,EAAQM,KAAsBI,GAA9B,EAAuBF,MAAvB,EAA8BE,WAGxBmE,EAAUC,cAqBhB,OACI,sBAAKzF,UAAU,mBAAf,UACI,gDACEqB,GAAa,4CACbV,GAAW,uBAAMwC,SAvBN,SAAAC,GACjBA,EAAEC,iBAEF,IAAMgH,EAAiB,CACnBvF,cACApC,WACAJ,WACAgH,aAGJ9H,MAAM,aAAeb,EAAQC,GAAK,SAAU,CACxC2C,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMjE,KAAKM,UAAUuK,KACtB5I,MAAK,WACJ+D,EAAQS,KAAK,aAAerF,EAAK,cAQpB,UACT,gDACA,uBACIsD,KAAK,OACLF,UAAQ,EACRH,MAAOiB,EACPhB,SAAU,SAACV,GAAD,OAAO2B,EAAe3B,EAAEW,OAAOF,QACzCI,YAAY,2BAIhB,6CACA,uBACIC,KAAK,OACLF,UAAQ,EACRH,MAAOnB,EACPoB,SAAU,SAACV,GAAD,OAAOT,EAAWS,EAAEW,OAAOF,QACrCI,YAAY,+BAGhB,6CACA,uBACIC,KAAK,OACLF,UAAQ,EACRH,MAAOvB,EACPwB,SAAU,SAACV,GAAD,OAAOb,EAAYa,EAAEW,OAAOF,QACtCI,YAAY,wBAGhB,2CACA,yBAAQJ,MAAOyF,EAAWxF,SAAU,SAACV,GAAD,OAAOmG,EAAanG,EAAEW,OAAOF,QAAjE,UACI,wBAAQA,MAAM,aAAd,uBACA,wBAAQA,MAAM,YAAd,0BAEJ,qD,SCtEDyG,E,8EAAf,WAAyBC,GAAzB,SAAA5E,EAAA,+EACWnE,MAAM,eAAgB,CACzB+B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMjE,KAAKM,UAAUyK,KAEtB9I,MAAK,SAAAR,GAAI,OAAIA,EAAKY,WARzB,4C,sBAWe,SAAS2I,EAAT,GAA8B,IAAb5K,EAAY,EAAZA,SAC5B,EAAgCT,qBAAhC,mBAAOyD,EAAP,KAAiB6H,EAAjB,KACA,EAAgCtL,qBAAhC,mBAAO2I,EAAP,KAAiBC,EAAjB,KAEMrC,EAAY,uCAAG,WAAMtC,GAAN,eAAAuC,EAAA,6DACjBvC,EAAEC,iBADe,SAEGiH,EAAU,CAC5B1H,WACAkF,aAJe,OAMC,KAJZpI,EAFW,QAMRA,OACLE,EAASF,GAPI,2CAAH,sDAYlB,OACI,sBAAKM,UAAU,QAAf,UACI,wDACA,uBAAMmD,SAAUuC,EAAhB,UACI,uBAAOxB,KAAK,OAAOtD,GAAG,QAAQ8J,MAAM,gBAAgB7J,KAAK,QAAQoD,YAAY,QACzEH,SAAU,SAAAV,GAAC,OAAIqH,EAAYrH,EAAEW,OAAOF,UACxC,uBAAOK,KAAK,OAAOtD,GAAG,WAAW8J,MAAM,eAAe7J,KAAK,QAAQoD,YAAY,WAC3EH,SAAU,SAAAV,GAAC,OAAI2E,EAAY3E,EAAEW,OAAOF,UACxC,qBAAK7D,UAAU,qBAAqBE,MAAO,CAACgD,QAAS,QAArD,SACI,uDAEJ,wBAAQgB,KAAK,SAAb,uBAGJ,qBAAKtD,GAAG,aAAR,SACI,mBAAG8J,MAAM,iBAAiBzK,KAAK,IAA/B,mCCxChB,IA8De0K,EA9DQ,WACrB,MAAsCxL,mBAAS,IAA/C,mBAAOyL,EAAP,KAAoBC,EAApB,KACA,EAAsC1L,mBAAS,IAA/C,mBAAO2L,EAAP,KAAoBC,EAApB,KACA,EAA0B7L,IAATQ,GAAjB,EAAOE,SAAP,EAAiBF,OACD+F,cAJW,SAMduF,IANc,2EAM7B,sBAAArF,EAAA,+EACSnE,MAAM,yBAA0B,CACnC+B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMjE,KAAKM,UAAU,CACnB8C,SAAUlD,EACVkL,YAAaA,EACbE,YAAaA,MAEhBrJ,MAAK,SAAAR,GAAI,OAAIA,EAAKY,WAXvB,4CAN6B,sBAoB3B,IAAM6D,EAAY,uCAAG,WAAMtC,GAAN,SAAAuC,EAAA,6DACjBvC,EAAEC,iBADe,SAEK2H,IAFL,OAII,QAJJ,OAINlK,OACRkC,SAASC,uBAAuB,sBAAsB,GAAG/C,MAAMgD,QAAU,QAG1EF,SAASC,uBAAuB,wBAAwB,GAAG/C,MAAMgD,QAAU,QAR5D,2CAAH,sDAYpB,OACE,sBAAKlD,UAAU,kBAAf,UACI,iDACA,qDACA,uBACA8D,SAAU,SAACV,GAAD,OAAOyH,EAAezH,EAAEW,OAAOF,QACzCI,YAAY,qBAGZ,iDACA,uBACAH,SAAU,SAACV,GAAD,OAAO2H,EAAe3H,EAAEW,OAAOF,QACzCI,YAAY,iBAGZ,wBAAQlB,QAAS2C,EAAjB,6BAEA,oBAAI1F,UAAU,qBAAqBE,MAAO,CAACgD,QAAS,QAApD,gCAEA,sBAAKlD,UAAU,uBAAuBE,MAAO,CAACgD,QAAS,QAAvD,UACE,6EACA,cAAC,IAAD,CAAM5C,GAAE,IAAR,sCCwBO2K,MA7Df,WAEE,MAA4B/L,IAApBQ,EAAR,EAAQA,MAAOE,EAAf,EAAeA,SAEf,OAAIF,EAKF,cAAC,IAAD,UACE,sBAAKM,UAAU,MAAf,UACA,cAAC,EAAD,IACE,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkL,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,kBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,yBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,mBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,uBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,yBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,sBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,oBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,gBA/CH,cAACX,EAAD,CAAO5K,SAAUA,KCdbwL,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7J,MAAK,YAAkD,IAA/C8J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9I,SAAS+I,eAAe,SAM1BX,M","file":"js/main.663d3297.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport default function useToken() {\n    const getToken = () => {\n        const tokenString = localStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        return userToken?.token\n    };\n    \n    const [token, setToken] = useState(getToken());\n\n    const saveToken = userToken => {\n        localStorage.setItem('token', JSON.stringify(userToken));\n        setToken(userToken.token);\n    };\n\n    return {\n        setToken: saveToken,\n        token\n    }\n\n}","import { Link } from 'react-router-dom'\nimport useToken from './useToken';\n\nconst Navbar = () => {\n    const {setToken, token} = useToken();\n\n    return (\n        <nav className=\"navbar\" >\n            <a href=\"/\" style={{ \n                color: '#ff4e83',\n                fontSize: '20px',\n                borderRadius: '8px' \n            }}>InAGlobe Platform</a>\n            <div className=\"links\"> \n                <Link to={`/create-project`}>New Project</Link>\n                <Link to={`/users/` + token}>My Profile</Link>\n            </div>\n        </nav>\n    );\n}\n \nexport default Navbar;","import { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects, title }) => {\n\n    return (\n        <div className=\"project-list\">\n            <h2>{title}</h2>\n            {projects.map((project) => (\n                <div className=\"preview\" key={project.id}>\n                    <Link to={`/projects/${project.id}`}>\n                        <h2>{project.name}</h2>\n                        <h3>{project.status}</h3>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default ProjectList;","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n\n  useEffect(() => {\n    fetch(url)\n        .then(res => {\n            if (!res.ok) { // error coming back from server\n                throw Error('could not fetch the data for that resource');\n            } \n            return res.json();\n        })\n        .then(data => {\n            setData(data);\n            setIsPending(false);\n            setError(null);\n        })\n        .catch(err => {\n            // auto catches network / connection error\n            setError(err.message);\n        })\n  }, [url])\n\n  return { data, error, isPending };\n}\n \nexport default useFetch;","import useFetch from './useFetch'\nimport { useState } from \"react\";\n\nconst PersonalToDo = ({ todos, title }) => {\n\n    const openTaskForm = () => {\n        document.getElementsByClassName(\"add-todo-form\")[0].style.display = \"block\";\n    }\n\n    const { data: users, error, isPending } = useFetch(\"/users\")\n\n    const [todo_desc, setTodoDesc] = useState(\"\");\n    const [priority, setPriority] = useState(1);\n    const [due_date, setDueDate] = useState(Date.now());\n    const [username, setUsername] = useState(\"none\");\n\n    const handleSubmit = e => {\n        document.getElementsByClassName(\"add-todo-form\")[0].style.display = \"none\";\n\n        e.preventDefault();\n        const newTodo = { todo_desc, priority, due_date, username };\n\n        fetch(\"/todos\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newTodo)\n        }).then(() => {\n            window.location.reload();\n        })\n    }\n\n    const handleRemove = id => e => {\n        e.preventDefault();\n        fetch(\"/todos/\" + id, { method: 'DELETE' })\n            .then(() => {\n                window.location.reload();\n            })\n    };\n\n    return (\n        <div className=\"todo-list\" style={{float: \"right\"}}>\n            <h2>{title}</h2>\n\n            <div className=\"add-todo-button\">\n                <button onClick={openTaskForm}>Add a personal task</button>\n            </div>\n\n            { isPending && <h2>Loading...</h2> }\n\n            <div className=\"add-todo-form\">\n                { users && <form onSubmit={handleSubmit}>\n                    <label>Task description</label>\n                    <textarea value={todo_desc} onChange={(e) => setTodoDesc(e.target.value)} required placeholder=\"Add some awesome description!\" ></textarea>\n                    <label>Priority level</label>\n                    <select value={priority} onChange={(e) => setPriority(e.target.value)} >\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                    </select>\n                    <label>When should this task be done by?</label>\n                    <input\n                        type=\"date\"\n                        value={due_date}\n                        onChange={(e) => setDueDate(e.target.value)}\n                    />\n                    <label>Assigned user</label>\n                    <select value={username} onChange={(e) => setUsername(e.target.value)} >\n                        <option value=\"none\">None</option>\n                        {users.map(user => <option value={user.username}>{user.username}</option>)}\n                    </select>\n                    <button>Save task</button>\n                </form> }\n            </div>\n\n            <div className=\"personal-todos\">\n                {todos.map((todo) => (\n                    <div className=\"todo-preview\" key={todo.id}>\n                        <h2>{todo.todo_desc}</h2>\n                        <h3><strong>Priority level:</strong> {todo.priority}</h3>\n                        <h3><strong>To be done by:</strong> {todo.due_date}</h3>\n                        <button onClick={handleRemove(todo.id)}>Complete</button>\n                    </div>\n                ))}\n            </div>\n\n        </div>\n    );\n\n}\n\nexport default PersonalToDo;","import ProjectList from './ProjectList'\nimport PersonalToDo from './PersonalToDo'\nimport useFetch from './useFetch'\nimport useToken from './useToken';\n\nconst Home = () => {\n\n    const {data: projects, errorProjects, isPendingProjects} = useFetch(\"/projects\")\n    const {data: todos, errorTodos, isPendingTodos} = useFetch(\"/todos\")\n    const {setToken, token} = useToken();\n\n    return (\n        <div className=\"home\">\n            <h1>Dashboard</h1>\n            <div className=\"home-projects\" style={{float: \"left\", width: \"600px\"}}>\n                { isPendingProjects && <h2>Loading...</h2> }\n                { projects && <ProjectList projects={projects} title=\"All Projects\"/> }\n                { projects && <ProjectList projects={projects.filter(project => project.status === \"Completed\")} title=\"Completed Projects\"/> }\n            </div>\n            <div className=\"homeTodos\">\n                { isPendingTodos && <h2>Loading...</h2> }\n                { todos && <PersonalToDo todos={todos.filter(todo => todo.username === token)} title=\"Personal ToDo items\"/> }\n            </div>\n        </div>\n        \n    );\n}\n \nexport default Home;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport useFetch from './useFetch'\n\nconst CreateProject = () => {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [status, setStatus] = useState(\"Available\");\n    const [tag, setTag] = useState(\"Other\");\n    const [location, setLocation] = useState(\"\");\n    const [files, setFiles] = useState(\"\");\n\n    const [selectUsernames, setSelectUsernames] = useState([]);\n\n    const history = useHistory();\n\n    const { data: users, error, isPending } = useFetch(\"/users\")\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n\n        const newProject = { name, description, status, tag, location, files };\n\n        const response = await fetch(\"/projects\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newProject)\n        });\n\n        const responseJSON = await response.json();\n\n        const project_id = responseJSON.id;\n\n        selectUsernames.map(username => {\n            const assign_project = { username, project_id };\n\n            fetch(\"/user_project\", {\n                method: 'POST',\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(assign_project)\n            });\n        });\n\n        history.push(\"/\");\n    }\n\n    return (\n        <div className=\"create-project\">\n            <h2>Add a new project</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Project name</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    placeholder=\"Input project name\"\n                />\n                <label>Description</label>\n                <textarea required placeholder=\"Add some awesome description!\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                <label>Status</label>\n                <select value={status} onChange={(e) => setStatus(e.target.value)}>\n                    <option value=\"Progress\">Progress</option>\n                    <option value=\"Available\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <label>Location</label>\n                <input\n                    type=\"text\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    placeholder=\"Eg: United Kingdom\"\n                />\n                <label>Type of project</label>\n                <select value={tag} onChange={(e) => setTag(e.target.value)}>\n                    <option value=\"Social\">Social</option>\n                    <option value=\"Education\">Education</option>\n                    <option value=\"Wash\">Wash</option>\n                    <option value=\"Environment\">Environment</option>\n                    <option value=\"Health\">Health</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <label>Volunteers assigned to this project</label>\n                <select multiple={true} onChange={(e) => setSelectUsernames(selectUsernames.concat(e.target.value))} value={selectUsernames} >\n                    {users.map(user => <option value={user.username}>{user.firstname} {user.surname}</option>)}\n                </select>\n                <label>Google Drive folder</label>\n                <textarea placeholder=\"Copy the link to the Google Drive folder for this project\" value={files} onChange={(e) => setFiles(e.target.value)}></textarea>\n                <button>Add project</button>\n            </form>\n        </div>\n    );\n}\n\nexport default CreateProject;","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\n\nconst ProjectDetails = () => {\n    const { id } = useParams();\n    const history = useHistory();\n\n    const { data: project, error, isPending } = useFetch(\"/projects/\" + id)\n    const { data: assignments, errorAssignment, isPendingAssignment } = useFetch(\"/user_project/\" + id)\n\n    const handleRemove = e => {\n        e.preventDefault()\n        fetch(\"/projects/\" + id, { method: 'DELETE' })\n            .then(() => { history.push('/'); })\n    };\n\n    return (\n        <div className=\"project-details\">\n            {isPending && <h2>Loading...</h2>}\n            {project && <h2>{project.name}</h2>}\n            {project && <button style={{\n                fontSize: '20px',\n                color: '#fff',\n                marginBottom: '30px',\n                marginright: '10px',\n                borderRadius: '8px',\n                backgroundColor: '#f1b535'\n            }}>Status: {project.status}</button>}\n            {project && <button style={{\n                fontSize: '20px',\n                color: '#fff',\n                marginBottom: '30px',\n                marginRight: '10px',\n                borderRadius: '8px',\n                backgroundColor: '#595bc0'\n            }}>{project.tag}</button>}\n            {project && <h4>Location: {project.location}</h4>}\n            {project && <button onClick={(e) => {\n                e.preventDefault();\n                window.open(project.files, \"_blank\");\n            }}>Documents</button>}\n            {project && <p>{project.description}</p>}\n\n            <h3>Volunteers working on this project</h3>\n            <div className=\"project_user_assignment_list\">\n                {assignments.map(a => (\n                    <div className=\"assigned_users_preview\" style={{float: \"left\", width: \"50%\"}} key={a.id}>\n                        <Link to={`/users/${a.username}`}>\n                            <h4>{a.username}</h4>\n                        </Link>\n                    </div>)\n                )\n                }\n            </div>\n\n            <div className=\"project-tasks\">\n                {project && <Link to={`/projects/${project.id}/tasks`} className=\"view-tasks-button\">View Tasks</Link>}\n\n                {project && <Link to={`/projects/${project.id}/add-task`} className=\"add-task-button\">Add Task</Link>}\n            </div>\n\n            <div>\n                {project && <button onClick={handleRemove}>Delete project</button>}\n\n                {project && <Link to={`/edit-project/${project.id}`} className=\"edit-project-button\">Edit project</Link>}\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default ProjectDetails;","import { Link } from \"react-router-dom\"\n\nconst PageNotFound = () => {\n    return (\n        <div className=\"page-not-found\">\n            <h2>Something went wrong...</h2>\n            <p>That page cannot be found</p>\n            <Link to='/'>Back to the main page</Link>\n        </div>\n    );\n}\n \nexport default PageNotFound;","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport useToken from './useToken';\n\nconst MyProfile = () => {\n    const {setToken, token} = useToken();\n\n    const {data: user, error, isPending} = useFetch(\"/users/\" + token)\n\n    return (\n        <div className=\"my-profile\">\n            { isPending && <h2>Loading...</h2> }\n            { user && <h2>{user.firstname + \" \" + user.surname}</h2> }\n            { user && <h1>{\"Username: \" + user.token}</h1> }\n            { user && <h1>{\"Title: \" + user.title}</h1> }\n            { user && <h1>{\"Email: \" + user.email}</h1> }\n            { user && <h1>{\"Bio: \" + user.bio}</h1> }\n            { user && <h1>{\"Joined: \" + user.joined}</h1> }\n            { user && <h1>{\"Location: \" + user.location}</h1> }\n            { user && <h1>{\"Availability: \" + user.availability}</h1> }\n            { user && <h1>{\"Partnership Opportunities: \" + user.partnership_opportunities}</h1> }\n            { user && <h1>{\"Interests: \" + user.interests}</h1> }    \n        </div>\n    );\n}\n\nexport default MyProfile;","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\n\nconst User = () => {\n    const {username} = useParams();\n    const history = useHistory();\n    \n    const {data: user, error, isPending} = useFetch(\"/users/\" + username)\n    \n    const handleRemove = e => {\n        e.preventDefault()\n        fetch(\"/users/\" + username, {method: 'DELETE'})\n            .then(()=> {history.push('/');})\n      };\n\n    return (\n        <div className=\"user\">\n            { isPending && <h2>Loading...</h2> }\n            { user && <div>\n                <h2>{user.firstname + \" \" + user.surname}</h2>\n            </div> }\n\n            { user && <div>\n                <h3><strong>Username: </strong>{user.username}</h3>\n                <h3><strong>Email: </strong>{user.email}</h3>       \n                <h3><strong>Title: </strong>{user.title}</h3>\n                <h3><strong>Joined: </strong>{user.joined}</h3>\n                <h3><strong>Location: </strong>{user.location}</h3>\n                <h3><strong>Availability: </strong>{user.availability}</h3>\n            </div> }\n\n            <br />\n\n            { user && <div>\n                <label><strong>Bio</strong></label>\n                <p>{user.bio}</p>\n            </div> }\n            \n            { user && <div>\n                <label><strong>Partnership Opportunities</strong></label>\n                <p>{user.partnership_opportunities}</p>\n            </div> }\n\n            { user && <div>\n                <label><strong>Interests</strong></label>\n                <p>{user.interests}</p>\n            </div> }\n\n            { user && username != \"jaimeaguilera\" && <button onClick={handleRemove}>Delete user</button> }\n            \n            { user && <Link to={`/edit-user/${username}`} className=\"edit-user-button\">Edit details</Link> }\n    </div>\n    );\n}\n \nexport default User;","import { Link } from 'react-router-dom'\n\nconst UserList = ({ users }) => {\n\n    return (\n        <div className=\"user-list\">\n\n            {users.map((user) => (\n                <div className=\"preview\" key={user.username}>\n                    <Link to={`/users/${user.username}`}>\n                        <h2>{user.username}</h2>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default UserList;\n","import UserList from './UserList'\nimport useFetch from './useFetch'\n\nconst Users = () => {\n\n    const {data: users, error, isPending} = useFetch(\"/users\")\n\n    return (\n        <div className=\"users\">\n            <h1>Users</h1>\n            { isPending && <h2>Loading...</h2> }\n            { users && <UserList users={users} title=\"All Users\"/> }\n        </div>\n    );\n}\n \nexport default Users;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\n\n\nconst AddUser = () => {\n    const [firstname, setFirstname] = useState(\"\");\n    const [surname, setSurname] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [title, setTitle] = useState(\"\")\n    const [email, setEmail] = useState(\"\");\n    const [bio, setBio] = useState(\"\");\n    const [joined, setJoined] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n    const [availability, setAvailability] = useState(\"\");\n    const [partnership_opportunities, setPartnership_opportunities] = useState(\"\");\n    const [interests, setInterests] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n\n\n    const history = useHistory();\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const newUser = {\n            firstname,\n            surname,\n            password,\n            title,\n            email,\n            bio,\n            joined,\n            location,\n            availability,\n            partnership_opportunities,\n            interests,\n            username\n        }\n\n        fetch(\"/users\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newUser)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"add-user\">\n            <h2>Add a new user</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Username</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    placeholder=\"Input username here\"\n                />\n\n\n                <label>Firstname</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={firstname}\n                    onChange={(e) => setFirstname(e.target.value)}\n                    placeholder=\"Input your first name here\"\n                />\n\n                <label>Surname</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={surname}\n                    onChange={(e) => setSurname(e.target.value)}\n                    placeholder=\"Input surname here\"\n                />\n\n                <label>Title</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    placeholder=\"State your role at InAGlobe (eg: volunteer)\"\n                />\n\n                <label>Password</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"Input the default password (to be changed by the user)\"\n                />\n\n                <label>Email</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"Input InAGlobe email here\"\n                />\n\n\n                <label>Bio</label>\n                <input\n                    type=\"text\"\n                    value={bio}\n                    onChange={(e) => setBio(e.target.value)}\n                    placeholder=\"Tell your colleagues a bit about yourself\"\n                />\n\n                {/* Think about changing type to force date */}\n                <label>Joined</label>\n                <input\n                    type=\"text\"\n                    value={joined}\n                    onChange={(e) => setJoined(e.target.value)}\n                    placeholder=\"Eg: 20th April 2020\"\n                />\n\n\n                <label>Location</label>\n                <input\n                    type=\"text\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    placeholder=\"Where are you currently based?\"\n                />\n\n                <label>Availibility</label>\n                <input\n                    type=\"text\"\n                    value={availability}\n                    onChange={(e) => setAvailability(e.target.value)}\n                    placeholder=\"How available are you approximately per week?\"\n                />\n\n                <label>Partnership Opportunities</label>\n                <input\n                    type=\"text\"\n                    value={partnership_opportunities}\n                    onChange={(e) => setPartnership_opportunities(e.target.value)}\n                    placeholder=\"Eg: Department of Computing at Imperial College London\"\n                />\n\n                <label>Interests</label>\n                <input\n                    type=\"text\"\n                    value={interests}\n                    onChange={(e) => setInterests(e.target.value)}\n                    placeholder=\"What are your hobbies?\"\n                />\n\n                <button>Add user</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AddUser;","import { useHistory, useParams } from \"react-router-dom\"\nimport { useForm } from \"react-hook-form\"\nimport useFetch from './useFetch'\n\nconst EditProject = () => {\n    const { id } = useParams();\n    const { data: {name, description, status, location, tag, files}, error, isPending } = useFetch(\"/projects/\" + id)\n\n    const history = useHistory();\n    const oldProjectDetails = {\n        name: name,\n        description: description,\n        status: status,\n        location: location,\n        tag: tag,\n        files: files\n    }\n    \n    const { register, handleSubmit } = useForm({\n        defaultValues: oldProjectDetails\n    });\n\n    const onSubmit = e => {\n        fetch(\"/projects/\" + id, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(e)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"edit-project\">\n            <h2>Edit project</h2>\n            { isPending && <h2>Loading...</h2> }\n            { name && <form onSubmit={handleSubmit(onSubmit)}>\n                <label htmlFor=\"name\">Project name</label>\n                <input {...register(\"name\")}\n                    // type=\"text\"\n                    placeholder=\"Insert project name here\"\n                    // name=\"name\"\n                />\n                <label>Description</label>\n                <textarea {...register(\"description\")} name=\"description\" placeholder=\"Insert description of the project here\"></textarea>\n                <label>Status</label>\n                <select {...register(\"status\")} name=\"status\">\n                    <option value=\"Progress\">Progress</option>\n                    <option value=\"Available\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <label>Location</label>\n                <input\n                    {...register(\"location\")}\n                    type=\"text\"\n                    placeholder=\"Insert location of project here\"\n                    name=\"location\"\n                />\n                <label>Type of project</label>\n                <select {...register(\"tag\")} name=\"tag\">\n                    <option value=\"Social\">Social</option>\n                    <option value=\"Education\">Education</option>\n                    <option value=\"Wash\">Wash</option>\n                    <option value=\"Environment\">Environment</option>\n                    <option value=\"Health\">Health</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <label>Google Drive folder</label>\n                <textarea {...register(\"files\")} name=\"files\" placeholder=\"Insert Google Drive Folder link here\"></textarea>\n                <button type=\"submit\">Save project details</button>\n            </form> }\n        </div>\n    );\n}\n\nexport default EditProject;","import React from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport { Link, useHistory } from 'react-router-dom'\nimport useToken from './useToken';\n\nconst Sidebar = () => {\n\nconst slackLink = \"https://slack.com/intl/en-gb/\"\n\nconst history = useHistory();\n\nconst {setToken, token} = useToken();\n\nconst handleSignOut = e => {\n  e.preventDefault()\n\n  localStorage.clear();\n\n  window.location.reload();\n  history.push(\"/\");\n}\n\nreturn (\n    <Menu>\n      <div className=\"menu-item\" > \n      <Link to={`/`}>Home</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/users/` + token}>Profile</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/users`}>All Users</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/add-user`}>Add User</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <a href={slackLink} target=\"_blank\">Go To Slack</a>\n      </div> \n      <div className=\"menu-item\" >\n      <button style={{textDecoration: \"underline\", cursor: \"pointer\"}} onClick={handleSignOut}>Log Out</button>\n      </div> \n    </Menu>\n\n);\n\n}\n\nexport default Sidebar;","import { Link, useHistory, useParams } from \"react-router-dom\"\nimport { useForm } from \"react-hook-form\"\nimport useFetch from './useFetch'\n\nconst EditUser = () => {\n    const { username } = useParams();\n    const { data: {firstname, surname, password, title, email, bio, joined, \n        location, availability, partnership_opportunities, interests}, error, isPending } = useFetch(\"/users/\" + username)\n\n    const history = useHistory();\n    const oldUserDetails = {\n        firstname: firstname,\n        surname: surname,\n        password: password,\n        title: title,\n        email: email,\n        bio: bio,\n        joined: joined,\n        location: location,\n        availability: availability,\n        partnership_opportunities: partnership_opportunities,\n        interests: interests,\n    }\n    \n    const { register, handleSubmit } = useForm({\n        defaultValues: oldUserDetails\n    });\n\n    const onSubmit = e => {\n        fetch(\"/users/\" + username, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(e)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"edit-user\">\n            <h2>Edit user</h2>\n            { isPending && <h2>Loading...</h2> }\n            <Link to={`/users/change-password`}>Change Password</Link>\n            { firstname && <form onSubmit={handleSubmit(onSubmit)}>\n                <label htmlFor=\"firstname\">Firstname</label>\n                <input {...register(\"firstname\")}\n                    placeholder=\"Input your first name here\"\n                />\n\n                <label htmlFor=\"surname\">Surname</label>\n                <input {...register(\"surname\")}\n                    placeholder=\"Input surname here\"\n                />\n\n                <label htmlFor=\"title\">Title</label>\n                <input {...register(\"title\")}\n                    placeholder=\"State your role at InAGlobe (eg: volunteer)\"\n                />\n\n                <label htmlFor=\"password\">Password</label>\n                <input {...register(\"password\")}\n                    placeholder=\"Input the password\"\n                />\n\n                <label htmlFor=\"email\">Email</label>\n                <input {...register(\"email\")}\n                    placeholder=\"Input InAGlobe email here\"\n                />\n\n\n                <label htmlFor=\"bio\">Bio</label>\n                <input {...register(\"bio\")}\n                    placeholder=\"Tell your colleagues a bit about yourself\"\n                />\n\n                {/* Think about changing type to force date */}\n                <label htmlFor=\"joined\">Joined</label>\n                <input {...register(\"joined\")}\n                    placeholder=\"Eg: 20th April 2020\"\n                />\n\n\n                <label htmlFor=\"location\">Location</label>\n                <input {...register(\"location\")}\n                    placeholder=\"Where are you currently based?\"\n                />\n\n                <label htmlFor=\"availability\">Availibility</label>\n                <input {...register(\"availability\")}\n                    placeholder=\"How available are you approximately per week?\"\n                />\n\n                <label htmlFor=\"partnership_opportunities\">Partnership Opportunities</label>\n                <input {...register(\"partnership_opportunities\")}\n                    placeholder=\"Eg: Department of Computing at Imperial College London\"\n                />\n\n                <label htmlFor=\"interests\">Interests</label>\n                <input {...register(\"interests\")}\n                    placeholder=\"What are your hobbies?\"\n                />\n                <button type=\"submit\">Save user details</button>\n            </form> }\n        </div>\n    );\n}\n\nexport default EditUser;","import { useState } from \"react\";\nimport { useHistory } from 'react-router';\nconst ProjectTaskList = ({ project_tasks }) => {\n    /* pass in filtered dataset containing tasks for a specific project*/\n    const history = useHistory();\n    const [description, setDescription] = useState(\"\");\n    const [priority, setPriority] = useState(1);\n    const [due_date, setDueDate] = useState(Date.now);\n    const [completed, setCompleted] = useState(\"\");\n    const [project_id, setProjectId] = useState(\"\");\n\n    const handleComplete = task => e => {\n        e.preventDefault();\n        console.log(task.id)\n\n        setDescription(task.description)\n        setPriority(task.priority)\n        setDueDate(task.due_date)\n        setCompleted(\"Completed\")\n        setProjectId(task.project_id)\n        const newTask = { description, priority, due_date, completed, project_id }\n\n        console.log(newTask)\n\n        fetch(\"/projects/\" + task.project_id + \"/tasks/\" + task.id, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(task)\n        }).then(() => {\n            window.location.reload();\n        })\n    \n    };\n\n    const handleDelete = task => e => {\n        e.preventDefault();\n\n        fetch(\"/projects/\" + task.project_id + \"/tasks/\" + task.id, {\n            method: 'DELETE',\n        }).then(() => {\n            window.location.reload();\n        })\n    \n    };\n\n    return (\n        <div className=\"project-tasks-list\">\n            {project_tasks.map((task) => (\n                <div className=\"project-task-preview\" key={task.id}>\n                        <div>\n                            <h2>{task.description}</h2>\n                            <h3>Due date: {task.due_date}</h3>\n                        </div>\n                        \n                        <h3>Priority: {task.priority}</h3>\n                        <button className=\"task-complete-button\" onClick={handleComplete(task)}>Complete</button>\n                        <button className=\"task-delete-button\"onClick={handleDelete(task)}>Delete</button>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default ProjectTaskList;\n","import { useParams } from 'react-router';\n\nimport ProjectTaskList from './ProjectTaskList'\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\n\nconst ProjectTasks = () => {\n    const { id } = useParams();\n    const { data: project, errorProject, isPendingProject } = useFetch(\"/projects/\" + id)\n\n    const { data: project_tasks, errorTasks, isPendingTasks } = useFetch(\"/projects/\" + id + \"/tasks\");\n\n    return (\n        <div className=\"project-tasks\">\n            { project && <h1>{project.name}: tasks</h1>}\n            <h2>Ongoing Project Tasks</h2>\n            { isPendingTasks && <h2>Loading...</h2> }\n            { project_tasks && <ProjectTaskList project_tasks={project_tasks.filter(task => !task.completed)}/> }\n            <h2>Completed Project Tasks</h2>\n            { project_tasks && <ProjectTaskList project_tasks={project_tasks.filter(task => task.completed)}/> }\n\n            <div className=\"add-task-button-wrapper\">\n                { project_tasks && <Link to={`/projects/${project.id}/add-task`} className=\"add-task-button\">Add Task</Link> }\n            </div>\n        </div>\n    );\n}\n\nexport default ProjectTasks;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport { useParams } from \"react-router\"\nimport useFetch from \"./useFetch\";\n\nconst AddProjectTask = () => {\n    const [description, setDescription] = useState(\"\");\n    const [due_date, setDueDate] = useState(Date.now);\n    const [priority, setPriority] = useState(1);\n    const [completed, setCompleted] = useState(false);\n    const { id } = useParams();\n    const { data: project, error, isPending } = useFetch(\"/projects/\" + id)\n\n\n    const history = useHistory();\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const newProjectTask = {\n            description,\n            due_date,\n            priority,\n            completed\n        }\n\n        fetch(\"/projects/\" + project.id + \"/tasks\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newProjectTask)\n        }).then(() => {\n            history.push('/projects/' + id + '/tasks');\n        })\n    }\n\n    return (\n        <div className=\"add-project-task\">\n            <h2>Add a new task</h2>\n            { isPending && <h2>Loading...</h2> }\n            { project && <form onSubmit={handleSubmit}>\n                <label>Description</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    placeholder=\"Input description here\"\n                />\n\n\n                <label>Due Date</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={due_date}\n                    onChange={(e) => setDueDate(e.target.value)}\n                    placeholder=\"Input your first name here\"\n                />\n\n                <label>Priority</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={priority}\n                    onChange={(e) => setPriority(e.target.value)}\n                    placeholder=\"Input priority here\"\n                />\n\n                <label>Status</label>\n                <select value={completed} onChange={(e) => setCompleted(e.target.value)}>\n                    <option value=\"Incomplete\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <button>Add task</button>\n            </form> }\n        </div>\n    );\n}\n\nexport default AddProjectTask;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nasync function loginUser(credentials) {\n    return fetch('/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      })\n      .then(data => data.json())\n   }\n\nexport default function Login({ setToken }) {\n    const [username, setUserName] = useState();\n    const [password, setPassword] = useState();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const token = await loginUser({\n          username,\n          password\n        });\n        if(token.token != \"\") {\n            setToken(token);\n        }\n      }\n    \n\n    return (\n        <div className=\"login\">\n            <label> InAGlobe Platform </label>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"login\"\n                    onChange={e => setUserName(e.target.value)}/>\n                <input type=\"text\" id=\"password\" class=\"fadeIn third\" name=\"login\" placeholder=\"password\"\n                    onChange={e => setPassword(e.target.value)}/> \n                <div className=\"incorrect-password\" style={{display: 'none'}}>\n                    <h2 >Incorrect password!</h2>\n                </div>\n                <button type=\"submit\">Log In</button>\n            </form>\n\n            <div id=\"formFooter\">\n                <a class=\"underlineHover\" href=\"#\">Forgot Password?</a>\n            </div>\n        </div>\n    );\n}\n \nLogin.propTypes = {\n    setToken: PropTypes.func.isRequired\n}\n","\nimport useToken from './useToken';\nimport { Link, useHistory } from 'react-router-dom'\nimport { useState } from 'react'\n\nconst ChangePassword = () => {\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const {setToken, token} = useToken()\n  const history = useHistory()\n\nasync function passwordUpdate() {\n  return fetch('/users/update-password', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: token,\n        oldPassword: oldPassword,\n        newPassword: newPassword})\n    })\n    .then(data => data.json())\n }\n\n  const handleSubmit = async e => {\n      e.preventDefault();\n      const updated = await passwordUpdate();\n\n      if(updated.status != \"True\") {\n         document.getElementsByClassName(\"incorrect-password\")[0].style.display = \"block\";\n      }\n      else{\n        document.getElementsByClassName(\"password-changed-msg\")[0].style.display = \"block\";\n      }\n    }\n  \nreturn (\n  <div className=\"change-password\">\n      <h2>Change Password</h2>\n      <label >Current Password</label>\n      <input  \n      onChange={(e) => setOldPassword(e.target.value)}\n      placeholder=\"Current Password\"\n      />\n\n      <label >New Password</label>\n      <input  \n      onChange={(e) => setNewPassword(e.target.value)}\n      placeholder=\"New Password\"\n      />\n\n      <button onClick={handleSubmit}>Change password</button>\n\n      <h2 className=\"incorrect-password\" style={{display: \"none\"}}>Incorrect password</h2>\n\n      <div className=\"password-changed-msg\" style={{display: \"none\"}}>\n        <h3>Your password has been changed successfully</h3>\n        <Link to={`/`}>Back to Dashboard</Link>\n      </div>\n\n  </div>\n  \n  )\n\n}\n\nexport default ChangePassword;","import React, { useState } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\n\nimport Navbar from './Navbar'\nimport Home from './Home'\nimport CreateProject from './CreateProject'\nimport ProjectDetails from './ProjectDetails'\nimport PageNotFound from './PageNotFound'\nimport MyProfile from './MyProfile'\nimport User from './User'\nimport Users from './Users'\nimport AddUser from './AddUser'\nimport EditProject from './EditProject'\nimport Sidebar from './Sidebar'  \nimport EditUser from './EditUser'\nimport ProjectTasks from './ProjectTasks'\nimport AddProjectTask from './AddProjectTask'\nimport Login from './Login'\nimport useToken from './useToken';\nimport ChangePassword from './ChangePassword';\n\nfunction App() {\n\n  const { token, setToken } = useToken();\n\n  if(!token) {\n    return <Login setToken={setToken} />\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">    \n      <Sidebar />\n        <Navbar />\n        <div className=\"content\">   \n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/create-project\">\n              <CreateProject />\n            </Route>\n            <Route exact path=\"/add-user\">\n              <AddUser />  \n            </Route>\n            <Route exact path=\"/my-profile\">\n              <MyProfile />\n            </Route>\n            <Route exact path=\"/users\">\n              <Users />  \n            </Route>\n            <Route exact path=\"/users/change-password\">\n              <ChangePassword />\n            </Route>   \n            <Route exact path=\"/users/:username\">\n              <User />\n            </Route>\n            <Route exact path=\"/edit-user/:username\">\n              <EditUser />\n            </Route>          \n            <Route exact path=\"/projects/:id/add-task\">\n              <AddProjectTask />  \n            </Route>       \n            <Route exact path=\"/projects/:id/tasks\">\n              <ProjectTasks />          \n            </Route>\n            <Route exact path=\"/projects/:id\">\n              <ProjectDetails />\n            </Route>\n            <Route exact path=\"/edit-project/:id\">\n              <EditProject />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}