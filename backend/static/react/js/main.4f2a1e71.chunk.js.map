{"version":3,"sources":["useToken.js","Navbar.js","ProjectList.js","useFetch.js","MyProjectTasks.js","PersonalToDo.js","Home.js","CreateProject.js","ProjectDetails.js","PageNotFound.js","MyProfile.js","User.js","UserList.js","Users.js","AddUser.js","EditProject.js","Sidebar.js","EditUser.js","ProjectTaskList.js","ProjectTasks.js","AddProjectTask.js","Login.js","ChangePassword.js","ProjectsRegistry.js","ForgotPassword.js","App.js","reportWebVitals.js","index.js"],"names":["useToken","useState","tokenString","localStorage","getItem","userToken","JSON","parse","token","getToken","setToken","setItem","stringify","Navbar","className","href","style","color","fontSize","borderRadius","to","ProjectList","projects","map","project","id","name","status","useFetch","url","data","setData","error","setError","isPending","setIsPending","useEffect","fetch","then","res","ok","Error","json","catch","err","message","MyProjectTasks","tasks","title","task","description","priority","due_date","PersonalToDo","todos","users","todo_desc","setTodoDesc","setPriority","Date","now","setDueDate","username","setUsername","float","onClick","document","getElementsByClassName","display","onSubmit","e","preventDefault","newTodo","method","headers","body","window","location","reload","value","onChange","target","required","placeholder","type","user","todo","Home","isPendingTodos","errorTodos","isPendingRProjects","errorRProjects","project_tasks","errorProjectTasks","isPendingProjectTasks","width","filter","CreateProject","setName","setDescription","setStatus","tag","setTag","setLocation","files","setFiles","selectUsernames","setSelectUsernames","history","useHistory","handleSubmit","a","newProject","response","responseJSON","project_id","assign_project","push","includes","options","Array","isArray","x","isMulti","isClearable","ProjectDetails","useParams","assignments","errorAssignment","isPendingAssignment","marginBottom","marginright","backgroundColor","cursor","marginRight","open","PageNotFound","MyProfile","firstname","surname","email","bio","joined","availability","partnership_opportunities","interests","User","UserList","Users","AddUser","setFirstname","setSurname","password","setPassword","setTitle","setEmail","setBio","setJoined","setAvailability","setPartnership_opportunities","setInterests","newUser","EditProject","errorUsers","isPendingUsers","oldProjectDetails","useForm","defaultValues","register","htmlFor","multiple","concat","Sidebar","textDecoration","clear","EditUser","oldUserDetails","ProjectTaskList","completed","setCompleted","setProjectId","handleComplete","console","log","newTask","handleDelete","ProjectTasks","errorProject","isPendingProject","isPendingTasks","errorTasks","AddProjectTask","assignedUsers","setAssignedUsers","participants","errorParticipants","isPendingParticipants","newProjectTask","task_id","assigned_task","loginUser","credentials","Login","setUserName","class","ChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","passwordUpdate","ProjectRegistry","isPendingProjects","errorProjects","resetPassword","msg","ForgotPassword","Math","random","toString","replace","App","exact","path","ProjectsRegistry","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"js/main.4f2a1e71.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport default function useToken() {\n    const getToken = () => {\n        const tokenString = localStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        return userToken?.token\n    };\n    \n    const [token, setToken] = useState(getToken());\n\n    const saveToken = userToken => {\n        localStorage.setItem('token', JSON.stringify(userToken));\n        setToken(userToken.token);\n    };\n\n    return {\n        setToken: saveToken,\n        token\n    }\n\n}","import { Link } from 'react-router-dom'\nimport useToken from './useToken';\n\nconst Navbar = () => {\n    const {setToken, token} = useToken();\n\n    return (\n        <nav className=\"navbar\" >\n            <a href=\"/\" style={{ \n                color: '#ff4e83',\n                fontSize: '20px',\n                borderRadius: '8px' \n            }}>InAGlobe Platform</a>\n            <div className=\"links\"> \n                <Link to={`/create-project`}>New Project</Link>\n                <Link to={`/users/` + token}>My Profile</Link>\n            </div>\n        </nav>\n    );\n}\n \nexport default Navbar;","import { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects }) => {\n\n    return (\n        <div className=\"project-list\">\n            {projects.map((project) => (\n                <div className=\"preview\" key={project.id}>\n                    <Link to={`/projects/${project.id}`}>\n                        <h2>{project.name}</h2>\n                        <h3>{project.status}</h3>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default ProjectList;","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n\n  useEffect(() => {\n    fetch(url)\n        .then(res => {\n            if (!res.ok) { // error coming back from server\n                throw Error('could not fetch the data for that resource');\n            } \n            return res.json();\n        })\n        .then(data => {\n            setData(data);\n            setIsPending(false);\n            setError(null);\n        })\n        .catch(err => {\n            // auto catches network / connection error\n            setError(err.message);\n        })\n  }, [url])\n\n  return { data, error, isPending };\n}\n \nexport default useFetch;","import useFetch from './useFetch'\nimport { useState } from \"react\";\n\nconst MyProjectTasks = ({ tasks, title }) => {\n    return (\n        <div>\n            <h2>{title}</h2>\n\n            <div className=\"my-project-tasks\">\n                {tasks.map((task) => (\n                    <div className=\"task-preview\" key={task.id}>\n                        <h2>{task.description}</h2>\n                        <h3><strong>Priority level:</strong> {task.priority}</h3>\n                        <h3><strong>To be done by:</strong> {task.due_date}</h3>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default MyProjectTasks;","import useFetch from './useFetch'\nimport { useState } from \"react\";\nimport useToken from './useToken'\n\nconst PersonalToDo = ({ todos, title }) => {\n\n    const openTaskForm = () => {\n        document.getElementsByClassName(\"add-todo-form\")[0].style.display = \"block\";\n    }\n    const {setToken, token} = useToken();\n\n\n    const { data: users, error, isPending } = useFetch(\"/users\")\n\n    const [todo_desc, setTodoDesc] = useState(\"\");\n    const [priority, setPriority] = useState(1);\n    const [due_date, setDueDate] = useState(Date.now());\n    const [username, setUsername] = useState(token);\n\n    const handleSubmit = e => {\n        document.getElementsByClassName(\"add-todo-form\")[0].style.display = \"none\";\n\n        e.preventDefault();\n        const newTodo = { todo_desc, priority, due_date, username };\n\n        fetch(\"/todos\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newTodo)\n        }).then(() => {\n            window.location.reload();\n        })\n    }\n\n    const handleRemove = id => e => {\n        e.preventDefault();\n        fetch(\"/todos/\" + id, { method: 'DELETE' })\n            .then(() => {\n                window.location.reload();\n            })\n    };\n\n    return (\n        <div className=\"todo-list\" style={{float: \"right\"}}>\n            <h2>{title}</h2>\n\n            <div className=\"add-todo-button\">\n                <button onClick={openTaskForm}>Add a personal task</button>\n            </div>\n\n            { isPending && <h2>Loading...</h2> }\n\n            <div className=\"add-todo-form\">\n                { users && <form onSubmit={handleSubmit}>\n                    <label>Task description [required]</label>\n                    <textarea value={todo_desc} onChange={(e) => setTodoDesc(e.target.value)} required placeholder=\"Add some awesome description!\" ></textarea>\n                    <label>Priority level (1: lowest, 4: highest)</label>\n                    <select value={priority} onChange={(e) => setPriority(e.target.value)} >\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                    </select>\n                    <label>When should this task be done by? [required]</label>\n                    <input\n                        required\n                        type=\"date\"\n                        value={due_date}\n                        onChange={(e) => setDueDate(e.target.value)}\n                    />\n                    <label>Assigned user</label>\n                    <select value={username} onChange={(e) => setUsername(e.target.value)} >\n                        {users.map(user => <option value={user.username}>{user.username}</option>)}\n                    </select>\n                    <button>Save task</button>\n                </form> }\n            </div>\n\n            <div className=\"personal-todos\">\n                {todos.map((todo) => (\n                    <div className=\"todo-preview\" key={todo.id}>\n                        <h2>{todo.todo_desc}</h2>\n                        <h3>Priority level: {todo.priority}</h3>\n                        <h3>To be done by:{todo.due_date}</h3>\n                        <button onClick={handleRemove(todo.id)}>Complete</button>\n                    </div>\n                ))}\n            </div>\n\n        </div>\n    );\n\n}\n\nexport default PersonalToDo;","import ProjectList from './ProjectList';\nimport MyProjectTasks from './MyProjectTasks';\nimport PersonalToDo from './PersonalToDo';\nimport useFetch from './useFetch';\nimport useToken from './useToken';\nimport { useState } from \"react\";\n\nconst Home = () => {\n\n    const { data: todos, errorTodos, isPendingTodos } = useFetch(\"/todos\");\n    const { setToken, token } = useToken();\n\n    const { data: projects, errorRProjects, isPendingRProjects } = useFetch(\"/user_project/username/\" + token);\n    // const project_tasks = [\n    //     {\n    //         \"description\": \"This is example 1\",\n    //         \"due_date\": \"17/06/2021\",\n    //         \"priority\": 1,\n    //         \"completed\": \"Completed\",\n    //         \"project_id\": 2,\n    //         \"id\": 1\n    //     },\n    //     {\n    //         \"description\": \"This is example 2\",\n    //         \"due_date\": \"18/06/2021\",\n    //         \"priority\": 1,\n    //         \"completed\": \"Available\",\n    //         \"project_id\": 3,\n    //         \"id\": 2\n    //     },\n    //     {\n    //         \"description\": \"This is example 3\",\n    //         \"due_date\": \"21/06/2021\",\n    //         \"priority\": 2,\n    //         \"completed\": \"Available\",\n    //         \"project_id\": 4,\n    //         \"id\": 3\n    //     }\n    // ]\n\n    const {data: project_tasks, errorProjectTasks, isPendingProjectTasks} = useFetch(\"/assigned_task/username/\" + token)\n\n    return (\n        <div className=\"home\">\n            <h1>Dashboard</h1>\n            <div className=\"home-projects\" style={{ float: \"left\", width: \"600px\" }}>\n                {isPendingRProjects && <h2>Loading...</h2>}\n                {projects && <ProjectList projects={projects} title=\"My Projects\" />}\n            </div>\n            <div className=\"homeTodos\">\n                {isPendingTodos && <h2>Loading...</h2>}\n                {todos && <PersonalToDo todos={todos.filter(todo => todo.username === token)} title=\"Personal ToDo items\" />}\n            </div>\n            <div className=\"home-project-tasks\" style={{ float: \"left\", width: \"600px\" }}>\n                {isPendingRProjects && <h2>Loading...</h2>}\n                {projects && <MyProjectTasks tasks={project_tasks} title=\"My tasks from all projects\" />}\n            </div>\n        </div>\n\n    );\n}\n\nexport default Home;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport Select from 'react-select';\nimport useFetch from './useFetch'\n\nconst CreateProject = () => {\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [status, setStatus] = useState(\"Available\");\n    const [tag, setTag] = useState(\"Other\");\n    const [location, setLocation] = useState(\"\");\n    const [files, setFiles] = useState(\"\");\n\n    const [selectUsernames, setSelectUsernames] = useState([]);\n\n    const history = useHistory();\n\n    const { data: users, error, isPending } = useFetch(\"/users/user_project\");\n\n    const usernames = users.map(user => user.username);\n\n    const handleChange = (e) => {\n        setSelectUsernames(Array.isArray(e) ? e.map(x => x.value) : []); \n    }\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n\n        const newProject = { name, description, status, tag, location, files };\n\n        const response = await fetch(\"/projects\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newProject)\n        });\n\n        const responseJSON = await response.json();\n\n        const project_id = responseJSON.id;\n\n        selectUsernames.map(username => {\n            const assign_project = { username, project_id };\n\n            fetch(\"/user_project\", {\n                method: 'POST',\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(assign_project)\n            });\n        });\n\n        history.push(\"/\");\n    }\n\n    return (\n        <div className=\"create-project\">\n            <h2>Add a new project</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Project name [required]</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    placeholder=\"Input project name\"\n                />\n                <label>Description [required]</label>\n                <textarea required placeholder=\"Add some awesome description!\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                <label>Status</label>\n                <select value={status} onChange={(e) => setStatus(e.target.value)}>\n                    <option value=\"Progress\">Progress</option>\n                    <option value=\"Available\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <label>Location</label>\n                <input\n                    type=\"text\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    placeholder=\"Eg: United Kingdom\"\n                />\n                <label>Type of project [required]</label>\n                <select required value={tag} onChange={(e) => setTag(e.target.value)}>\n                    <option value=\"Social\">Social</option>\n                    <option value=\"Education\">Education</option>\n                    <option value=\"Wash\">Wash</option>\n                    <option value=\"Environment\">Environment</option>\n                    <option value=\"Health\">Health</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <label>Volunteers assigned to this project</label>\n                <Select\n                    className=\"dropdown\"\n                    placeholder=\"Select Users\"\n                    value={users.filter(user => selectUsernames.includes(user.value))}\n                    options={users} // set list of the usernames\n                    onChange={handleChange} // assign onChange function\n                    isMulti\n                    isClearable\n                />\n                <label>Google Drive folder</label>\n                <textarea placeholder=\"Copy the link to the Google Drive folder for this project\" value={files} onChange={(e) => setFiles(e.target.value)}></textarea>\n                <button>Add project</button>\n            </form>\n        </div>\n    );\n}\n\n\nexport default CreateProject;","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\n\nconst ProjectDetails = () => {\n    const { id } = useParams();\n    const history = useHistory();\n\n    const { data: project, error, isPending } = useFetch(\"/projects/\" + id)\n    const { data: assignments, errorAssignment, isPendingAssignment } = useFetch(\"/user_project/project/\" + id)\n\n    const handleRemove = e => {\n        e.preventDefault()\n        fetch(\"/projects/\" + id, { method: 'DELETE' })\n            .then(() => { history.push('/'); })\n    };\n\n    return (\n        <div className=\"project-details\">\n            {isPending && <h2>Loading...</h2>}\n            {project && <h2>{project.name}</h2>}\n            {project && <button style={{\n                fontSize: '20px',\n                color: '#fff',\n                marginBottom: '30px',\n                marginright: '10px',\n                borderRadius: '8px',\n                backgroundColor: '#f1b535',\n                cursor: 'default'\n            }}>Status: {project.status}</button>}\n            {project && <button style={{\n                fontSize: '20px',\n                color: '#fff',\n                marginBottom: '30px',\n                marginRight: '10px',\n                borderRadius: '8px',\n                backgroundColor: '#595bc0',\n                cursor: 'default'\n            }}>{project.tag}</button>}\n            {project && <h4>Location: {project.location}</h4>}\n            {project && <button onClick={(e) => {\n                e.preventDefault();\n                window.open(project.files, \"_blank\");\n            }}>Documents</button>}\n            {project && <p>{project.description}</p>}\n\n            <h3>Volunteers working on this project</h3>\n            <div className=\"project_user_assignment_list\">\n                {assignments.map(a => (\n                    <div className=\"assigned_users_preview\" style={{float: \"left\", width: \"50%\"}} key={a.id}>\n                        <Link to={`/users/${a.username}`}>\n                            <h4>{a.username}</h4>\n                        </Link>\n                    </div>)\n                )\n                }\n            </div>\n\n            <div className=\"project-tasks\">\n                {project && <Link to={`/projects/${project.id}/tasks`} className=\"view-tasks-button\">View Tasks</Link>}\n\n                {project && <Link to={`/projects/${project.id}/add-task`} className=\"add-task-button\">Add Task</Link>}\n            </div>\n\n            <div>\n                {project && <button onClick={handleRemove}>Delete project</button>}\n\n                {project && <Link to={`/edit-project/${project.id}`} className=\"edit-project-button\">Edit project</Link>}\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default ProjectDetails;","import { Link } from \"react-router-dom\"\n\nconst PageNotFound = () => {\n    return (\n        <div className=\"page-not-found\">\n            <h2>Something went wrong...</h2>\n            <p>That page cannot be found</p>\n            <Link to='/'>Back to the main page</Link>\n        </div>\n    );\n}\n \nexport default PageNotFound;","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport useToken from './useToken';\n\nconst MyProfile = () => {\n    const {setToken, token} = useToken();\n\n    const {data: user, error, isPending} = useFetch(\"/users/\" + token)\n\n    return (\n        <div className=\"my-profile\">\n            { isPending && <h2>Loading...</h2> }\n            { user && <h2>{user.firstname + \" \" + user.surname}</h2> }\n            { user && <h1>{\"Username: \" + user.token}</h1> }\n            { user && <h1>{\"Title: \" + user.title}</h1> }\n            { user && <h1>{\"Email: \" + user.email}</h1> }\n            { user && <h1>{\"Bio: \" + user.bio}</h1> }\n            { user && <h1>{\"Joined: \" + user.joined}</h1> }\n            { user && <h1>{\"Location: \" + user.location}</h1> }\n            { user && <h1>{\"Availability: \" + user.availability}</h1> }\n            { user && <h1>{\"Partnership Opportunities: \" + user.partnership_opportunities}</h1> }\n            { user && <h1>{\"Interests: \" + user.interests}</h1> }    \n        </div>\n    );\n}\n\nexport default MyProfile;","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\nimport useToken from './useToken';\n\nconst User = () => {\n    const {username} = useParams();\n    const history = useHistory();\n    const {setToken, token} = useToken();\n    \n    const {data: user, error, isPending} = useFetch(\"/users/\" + username)\n    \n    const handleRemove = e => {\n        e.preventDefault()\n        fetch(\"/users/\" + username, {method: 'DELETE'})\n            .then(()=> {history.push('/');})\n      };\n\n    return (\n        <div className=\"user\">\n            { isPending && <h2>Loading...</h2> }\n            { user && <div>\n                <h2>{user.firstname + \" \" + user.surname}</h2>\n            </div> }\n\n            { user && <div>\n                <h3><strong>Username: </strong>{user.username}</h3>\n                <h3><strong>Email: </strong>{user.email}</h3>       \n                <h3><strong>Title: </strong>{user.title}</h3>\n                <h3><strong>Joined: </strong>{user.joined}</h3>\n                <h3><strong>Location: </strong>{user.location}</h3>\n                <h3><strong>Availability: </strong>{user.availability}</h3>\n            </div> }\n\n            <br />\n\n            { user && <div>\n                <label><strong>Bio</strong></label>\n                <p>{user.bio}</p>\n            </div> }\n            \n            { user && <div>\n                <label><strong>Partnership Opportunities</strong></label>\n                <p>{user.partnership_opportunities}</p>\n            </div> }\n\n            { user && <div>\n                <label><strong>Interests</strong></label>\n                <p>{user.interests}</p>\n            </div> }\n\n            { user && (token == \"jaimeaguilera\" || username == token) && <button onClick={handleRemove}>Delete user</button> }\n            \n            { user && (token == \"jaimeaguilera\" || username == token) && <Link to={`/edit-user/${username}`} className=\"edit-user-button\">Edit details</Link> }\n    </div>\n    );\n}\n \nexport default User;","import { Link } from 'react-router-dom'\n\nconst UserList = ({ users }) => {\n\n    return (\n        <div className=\"user-list\">\n\n            {users.map((user) => (\n                <div className=\"preview\" key={user.username}>\n                    <Link to={`/users/${user.username}`}>\n                        <h2>{user.username}</h2>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default UserList;\n","import UserList from './UserList'\nimport useFetch from './useFetch'\nimport useToken from './useToken'\nimport { Link } from 'react-router-dom'\n\nconst Users = () => {\n\n    const {data: users, error, isPending} = useFetch(\"/users\")\n    const {setToken, token} = useToken();\n\n    return (\n        <div className=\"users\">\n            <h1>Users</h1>\n            { <Link to={`/add-user`} className=\"add-user-button\">Add User</Link> }\n            <br />\n            <br />\n            { isPending && <h2>Loading...</h2> }\n            { users && <UserList users={users} title=\"All Users\"/> }\n        </div>\n    );\n}\n \nexport default Users;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\n\n\nconst AddUser = () => {\n    const [firstname, setFirstname] = useState(\"\");\n    const [surname, setSurname] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [title, setTitle] = useState(\"\")\n    const [email, setEmail] = useState(\"\");\n    const [bio, setBio] = useState(\"\");\n    const [joined, setJoined] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n    const [availability, setAvailability] = useState(\"\");\n    const [partnership_opportunities, setPartnership_opportunities] = useState(\"\");\n    const [interests, setInterests] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n\n\n    const history = useHistory();\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const newUser = {\n            firstname,\n            surname,\n            password,\n            title,\n            email,\n            bio,\n            joined,\n            location,\n            availability,\n            partnership_opportunities,\n            interests,\n            username\n        }\n\n        fetch(\"/users\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newUser)\n        }).then(() => {\n            history.push('/users');\n        })\n    }\n\n    return (\n        <div className=\"add-user\">\n            <h2>Add a new user</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Username [required]</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    placeholder=\"Input username here\"\n                />\n\n\n                <label>Firstname [required]</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={firstname}\n                    onChange={(e) => setFirstname(e.target.value)}\n                    placeholder=\"Input your first name here\"\n                />\n\n                <label>Surname [required]</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={surname}\n                    onChange={(e) => setSurname(e.target.value)}\n                    placeholder=\"Input surname here\"\n                />\n\n                <label>Title [required]</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    placeholder=\"State your role at InAGlobe (eg: volunteer)\"\n                />\n\n                <label>Password [required]</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"Input the default password (to be changed by the user)\"\n                />\n\n                <label>Email [required]</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"Input InAGlobe email here\"\n                />\n\n\n                <label>Bio</label>\n                <input\n                    type=\"text\"\n                    value={bio}\n                    onChange={(e) => setBio(e.target.value)}\n                    placeholder=\"Tell your colleagues a bit about yourself\"\n                />\n\n                {/* Think about changing type to force date */}\n                <label>Joined</label>\n                <input\n                    type=\"text\"\n                    value={joined}\n                    onChange={(e) => setJoined(e.target.value)}\n                    placeholder=\"Eg: 20th April 2020\"\n                />\n\n\n                <label>Location</label>\n                <input\n                    type=\"text\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)}\n                    placeholder=\"Where are you currently based?\"\n                />\n\n                <label>Availibility</label>\n                <input\n                    type=\"text\"\n                    value={availability}\n                    onChange={(e) => setAvailability(e.target.value)}\n                    placeholder=\"How available are you approximately per week?\"\n                />\n\n                <label>Partnership Opportunities</label>\n                <input\n                    type=\"text\"\n                    value={partnership_opportunities}\n                    onChange={(e) => setPartnership_opportunities(e.target.value)}\n                    placeholder=\"Eg: Department of Computing at Imperial College London\"\n                />\n\n                <label>Interests</label>\n                <input\n                    type=\"text\"\n                    value={interests}\n                    onChange={(e) => setInterests(e.target.value)}\n                    placeholder=\"What are your hobbies?\"\n                />\n\n                <button>Add user</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AddUser;","import { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { useForm } from \"react-hook-form\"\nimport useFetch from './useFetch'\n\nconst EditProject = () => {\n    const { id } = useParams();\n    const { data: {name, description, status, location, tag, files}, error, isPending } = useFetch(\"/projects/\" + id)\n    const { data: users, errorUsers, isPendingUsers } = useFetch(\"/users\")\n    const [selectUsernames, setSelectUsernames] = useState([]);\n\n    const history = useHistory();\n    const oldProjectDetails = {\n        name: name,\n        description: description,\n        status: status,\n        location: location,\n        tag: tag,\n        files: files\n    }\n    \n    const { register, handleSubmit } = useForm({\n        defaultValues: oldProjectDetails\n    });\n\n    const onSubmit = e => {\n        fetch(\"/projects/\" + id, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(e)\n        }).then(() => {\n            selectUsernames.map(username => {\n                const assign_project = { username: username, project_id: id };\n\n                fetch(\"/user_project\", {\n                    method: 'POST',\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(assign_project)\n                });\n            });}).then(() => {\n                history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"edit-project\">\n            <h2>Edit project</h2>\n            { isPending && <h2>Loading...</h2> }\n            { name && <form onSubmit={handleSubmit(onSubmit)}>\n                <label htmlFor=\"name\">Project name</label>\n                <input {...register(\"name\")}\n                    // type=\"text\"\n                    placeholder=\"Insert project name here\"\n                    // name=\"name\"\n                />\n                <label>Description</label>\n                <textarea {...register(\"description\")} name=\"description\" placeholder=\"Insert description of the project here\"></textarea>\n                <label>Status</label>\n                <select {...register(\"status\")} name=\"status\">\n                    <option value=\"Progress\">Progress</option>\n                    <option value=\"Available\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <label>Location</label>\n                <input\n                    {...register(\"location\")}\n                    type=\"text\"\n                    placeholder=\"Insert location of project here\"\n                    name=\"location\"\n                />\n                <label>Type of project</label>\n                <select {...register(\"tag\")} name=\"tag\">\n                    <option value=\"Social\">Social</option>\n                    <option value=\"Education\">Education</option>\n                    <option value=\"Wash\">Wash</option>\n                    <option value=\"Environment\">Environment</option>\n                    <option value=\"Health\">Health</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <label>Volunteers assigned to this project</label>\n                <select multiple={true} onChange={(e) => setSelectUsernames(selectUsernames.concat(e.target.value))} value={selectUsernames} >\n                    {users.map(user => <option value={user.username}>{user.firstname} {user.surname}</option>)}\n                </select>\n                <label>Google Drive folder</label>\n                <textarea {...register(\"files\")} name=\"files\" placeholder=\"Insert Google Drive Folder link here\"></textarea>\n                <button type=\"submit\">Save project details</button>\n            </form> }\n        </div>\n    );\n}\n\nexport default EditProject;","import React from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport { Link, useHistory } from 'react-router-dom'\nimport useToken from './useToken';\n\nconst Sidebar = () => {\n\nconst slackLink = \"https://slack.com/intl/en-gb/\"\n\nconst history = useHistory();\n\nconst {setToken, token} = useToken();\n\nconst handleSignOut = e => {\n  e.preventDefault()\n\n  localStorage.clear();\n\n  window.location.reload();\n  history.push(\"/\");\n}\n\nreturn (\n    <Menu>\n      <div className=\"menu-item\" > \n      <Link to={`/`}>Home</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/users/` + token}>Profile</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/users`}>All Users</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <Link to={`/projects`}>All Projects</Link>\n      </div>\n      <div className=\"menu-item\" > \n      <a href={slackLink} target=\"_blank\">Go To Slack</a>\n      </div> \n      <div className=\"menu-item\" >\n      <a style={{textDecoration: \"underline\", cursor: \"pointer\"}} onClick={handleSignOut}>Log Out</a>\n      </div> \n    </Menu>\n\n);\n\n}\n\nexport default Sidebar;","import { Link, useHistory, useParams } from \"react-router-dom\"\nimport { useForm } from \"react-hook-form\"\nimport useFetch from './useFetch'\n\nconst EditUser = () => {\n    const { username } = useParams();\n    const { data: {firstname, surname, password, title, email, bio, joined, \n        location, availability, partnership_opportunities, interests}, error, isPending } = useFetch(\"/users/\" + username)\n\n    const history = useHistory();\n    const oldUserDetails = {\n        firstname: firstname,\n        surname: surname,\n        password: password,\n        title: title,\n        email: email,\n        bio: bio,\n        joined: joined,\n        location: location,\n        availability: availability,\n        partnership_opportunities: partnership_opportunities,\n        interests: interests,\n    }\n    \n    const { register, handleSubmit } = useForm({\n        defaultValues: oldUserDetails\n    });\n\n    const onSubmit = e => {\n        fetch(\"/users/\" + username, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(e)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"edit-user\">\n            <h2>Edit user</h2>\n            { isPending && <h2>Loading...</h2> }\n            <Link to={`/users/change-password`}>Change Password</Link>\n            { firstname && <form onSubmit={handleSubmit(onSubmit)}>\n                <label htmlFor=\"firstname\">Firstname</label>\n                <input {...register(\"firstname\")}\n                    placeholder=\"Input your first name here\"\n                />\n\n                <label htmlFor=\"surname\">Surname</label>\n                <input {...register(\"surname\")}\n                    placeholder=\"Input surname here\"\n                />\n\n                <label htmlFor=\"title\">Title</label>\n                <input {...register(\"title\")}\n                    placeholder=\"State your role at InAGlobe (eg: volunteer)\"\n                />\n\n                <label htmlFor=\"password\">Password</label>\n                <input {...register(\"password\")}\n                    placeholder=\"Input the password\"\n                />\n\n                <label htmlFor=\"email\">Email</label>\n                <input {...register(\"email\")}\n                    placeholder=\"Input InAGlobe email here\"\n                />\n\n\n                <label htmlFor=\"bio\">Bio</label>\n                <input {...register(\"bio\")}\n                    placeholder=\"Tell your colleagues a bit about yourself\"\n                />\n\n                {/* Think about changing type to force date */}\n                <label htmlFor=\"joined\">Joined</label>\n                <input {...register(\"joined\")}\n                    placeholder=\"Eg: 20th April 2020\"\n                />\n\n\n                <label htmlFor=\"location\">Location</label>\n                <input {...register(\"location\")}\n                    placeholder=\"Where are you currently based?\"\n                />\n\n                <label htmlFor=\"availability\">Availibility</label>\n                <input {...register(\"availability\")}\n                    placeholder=\"How available are you approximately per week?\"\n                />\n\n                <label htmlFor=\"partnership_opportunities\">Partnership Opportunities</label>\n                <input {...register(\"partnership_opportunities\")}\n                    placeholder=\"Eg: Department of Computing at Imperial College London\"\n                />\n\n                <label htmlFor=\"interests\">Interests</label>\n                <input {...register(\"interests\")}\n                    placeholder=\"What are your hobbies?\"\n                />\n                <button type=\"submit\">Save user details</button>\n            </form> }\n        </div>\n    );\n}\n\nexport default EditUser;","import { useState } from \"react\";\nimport { useHistory } from 'react-router';\nconst ProjectTaskList = ({ project_tasks }) => {\n    /* pass in filtered dataset containing tasks for a specific project*/\n    const history = useHistory();\n    const [description, setDescription] = useState(\"\");\n    const [priority, setPriority] = useState(1);\n    const [due_date, setDueDate] = useState(Date.now);\n    const [completed, setCompleted] = useState(\"\");\n    const [project_id, setProjectId] = useState(\"\");\n\n    const handleComplete = task => e => {\n        e.preventDefault();\n        console.log(task.id)\n\n        setDescription(task.description)\n        setPriority(task.priority)\n        setDueDate(task.due_date)\n        setCompleted(\"Completed\")\n        setProjectId(task.project_id)\n        const newTask = { description, priority, due_date, completed, project_id }\n\n        console.log(newTask)\n\n        fetch(\"/projects/\" + task.project_id + \"/tasks/\" + task.id, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(task)\n        }).then(() => {\n            window.location.reload();\n        })\n    \n    };\n\n    const handleDelete = task => e => {\n        e.preventDefault();\n\n        fetch(\"/projects/\" + task.project_id + \"/tasks/\" + task.id, {\n            method: 'DELETE',\n        }).then(() => {\n            window.location.reload();\n        })\n    \n    };\n\n    return (\n        <div className=\"project-tasks-list\">\n            {project_tasks.map((task) => (\n                <div className=\"project-task-preview\" key={task.id}>\n                        <div>\n                            <h2>{task.description}</h2>\n                            <h3>Due date: {task.due_date}</h3>\n                        </div>\n                        \n                        <h3>Priority: {task.priority}</h3>\n                        { !task.completed && <button className=\"task-complete-button\" onClick={handleComplete(task)}>Complete</button> }\n                        <button className=\"task-delete-button\"onClick={handleDelete(task)}>Delete</button>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default ProjectTaskList;\n","import { useParams } from 'react-router';\n\nimport ProjectTaskList from './ProjectTaskList'\nimport useFetch from './useFetch'\nimport { Link } from \"react-router-dom\"\n\nconst ProjectTasks = () => {\n    const { id } = useParams();\n    const { data: project, errorProject, isPendingProject } = useFetch(\"/projects/\" + id)\n\n    const { data: project_tasks, errorTasks, isPendingTasks } = useFetch(\"/projects/\" + id + \"/tasks\");\n\n    return (\n        <div className=\"project-tasks\">\n            { project && <h1>{project.name}: tasks</h1>}\n            <h2>Ongoing Project Tasks</h2>\n            { isPendingTasks && <h2>Loading...</h2> }\n            { project_tasks && <ProjectTaskList project_tasks={project_tasks.filter(task => !task.completed)}/> }\n            <h2>Completed Project Tasks</h2>\n            { project_tasks && <ProjectTaskList project_tasks={project_tasks.filter(task => task.completed)}/> }\n\n            <div className=\"add-task-button-wrapper\">\n                { project_tasks && <Link to={`/projects/${project.id}/add-task`} className=\"add-task-button\">Add Task</Link> }\n            </div>\n        </div>\n    );\n}\n\nexport default ProjectTasks;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport { useParams } from \"react-router\"\nimport useFetch from \"./useFetch\";\nimport Select from 'react-select';\n\nconst AddProjectTask = () => {\n    const { id } = useParams();\n\n    const [description, setDescription] = useState(\"\");\n    const [due_date, setDueDate] = useState(Date.now);\n    const [priority, setPriority] = useState(1);\n    const [completed, setCompleted] = useState(false);\n    const [assignedUsers, setAssignedUsers] = useState([]);\n\n    const { data: project, error, isPending } = useFetch(\"/projects/\" + id)\n    const { data: participants, errorParticipants, isPendingParticipants } = useFetch(\"/user_project/project_task/\" + id) \n\n    const history = useHistory();\n\n    const handleChange = (e) => {\n        setAssignedUsers(Array.isArray(e) ? e.map(x => x.value) : []); \n    }\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n\n        const newProjectTask = { description, due_date, priority, completed };\n\n        const response = await fetch(\"/projects/\" + project.id + \"/tasks\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newProjectTask)\n        });\n\n        const responseJSON = await response.json();\n        const task_id = responseJSON.id;\n\n        assignedUsers.map(username => {\n            const assigned_task = { username, task_id };\n\n            fetch(\"/assigned_task\", {\n                method: 'POST',\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(assigned_task)\n            });\n        });\n\n        history.push(\"/projects/\" + id);\n    }\n\n    return (\n        <div className=\"add-project-task\">\n            <h2>Add a new task</h2>\n            {isPending && <h2>Loading...</h2>}\n            {project && <form onSubmit={handleSubmit}>\n                <label>Description</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    placeholder=\"Input description here\"\n                />\n\n\n                <label>Due Date [required]</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={due_date}\n                    onChange={(e) => setDueDate(e.target.value)}\n                    placeholder=\"Input your first name here\"\n                />\n\n                <label>Priority level (1: lowest, 4: highest) [required]</label>\n                <select required value={priority} onChange={(e) => setPriority(e.target.value)} >\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                    </select>\n\n                <label>Volunteers assigned to this task</label>\n                <Select\n                    className=\"dropdown\"\n                    placeholder=\"Select Users\"\n                    value={participants.filter(user => assignedUsers.includes(user.value))}\n                    options={participants}\n                    onChange={handleChange}\n                    isMulti\n                    isClearable\n                />\n\n                <label>Status</label>\n                <select value={completed} onChange={(e) => setCompleted(e.target.value)}>\n                    <option value=\"Incomplete\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <button>Add task</button>\n            </form>}\n        </div>\n    );\n}\n\nexport default AddProjectTask;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\n\nasync function loginUser(credentials) {\n    return fetch('/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      })\n      .then(data => data.json())\n   }\n\nexport default function Login({ setToken }) {\n    const [username, setUserName] = useState();\n    const [password, setPassword] = useState();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const token = await loginUser({\n          username,\n          password\n        });\n        if(token.token != \"\") {\n            setToken(token);\n        } else {\n            document.getElementsByClassName(\"incorrect-password\")[0].style.display = \"block\";\n\n        }\n    }\n    \n\n    return (\n        <div className=\"login\">\n            <h1> InAGlobe Platform </h1>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"login\"\n                    onChange={e => setUserName(e.target.value)}/>\n                <input type=\"password\" id=\"password\" class=\"fadeIn third\" name=\"login\" placeholder=\"password\"\n                    onChange={e => setPassword(e.target.value)}/> \n                <div className=\"incorrect-password\" style={{display: 'none'}}>\n                    <h2>Incorrect password!</h2>\n                </div>\n                <div className=\"links\">\n                    <Link to={`/forgot-password`}>Forgot Password</Link>\n                </div>\n                <button type=\"submit\">Log In</button>\n            </form>\n        </div>\n    );\n}\n \nLogin.propTypes = {\n    setToken: PropTypes.func.isRequired\n}\n","\nimport useToken from './useToken';\nimport { Link, useHistory } from 'react-router-dom'\nimport { useState } from 'react'\n\nconst ChangePassword = () => {\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const {setToken, token} = useToken()\n  const history = useHistory()\n\nasync function passwordUpdate() {\n  return fetch('/users/update-password', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: token,\n        oldPassword: oldPassword,\n        newPassword: newPassword})\n    })\n    .then(data => data.json())\n }\n\n  const handleSubmit = async e => {\n      e.preventDefault();\n      const updated = await passwordUpdate();\n\n      if(updated.status != \"True\") {\n         document.getElementsByClassName(\"incorrect-password\")[0].style.display = \"block\";\n      }\n      else{\n        document.getElementsByClassName(\"password-changed-msg\")[0].style.display = \"block\";\n      }\n    }\n  \nreturn (\n  <div className=\"change-password\">\n      <h2>Change Password</h2>\n      <label >Current Password</label>\n      <input  \n        onChange={(e) => setOldPassword(e.target.value)}\n        placeholder=\"Current Password\"\n      />\n\n      <label >New Password</label>\n      <input  \n        onChange={(e) => setNewPassword(e.target.value)}\n        placeholder=\"New Password\"\n      />\n\n      <button onClick={handleSubmit}>Change password</button>\n\n      <h2 className=\"incorrect-password\" style={{display: \"none\"}}>Incorrect password</h2>\n\n      <div className=\"password-changed-msg\" style={{display: \"none\"}}>\n        <h3>Your password has been changed successfully</h3>\n        <Link to={`/`}>Back to Dashboard</Link>\n      </div>\n\n  </div>\n  \n  )\n\n}\n\nexport default ChangePassword;","import ProjectList from './ProjectList'\nimport PersonalToDo from './PersonalToDo'\nimport useFetch from './useFetch'\nimport useToken from './useToken';\n\nconst ProjectRegistry = () => {\n\n    const {data: projects, errorProjects, isPendingProjects} = useFetch(\"/projects\")\n\n    return (\n        <div className=\"project-registry\">\n            <h1>All Projects</h1>\n            <br />\n            { isPendingProjects && <h2>Loading...</h2> }\n            { projects && <ProjectList projects={projects} title=\"All Projects\"/> }\n        </div>\n        \n    );\n}\n \nexport default ProjectRegistry;","import { useState } from \"react\";\nimport { useHistory } from 'react-router';\n\nasync function resetPassword(msg) {\n    return fetch('/users/forgot-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(msg)\n      })\n      .then(data => data.json())\n   }\n\nconst ForgotPassword = () => {\n\n    const [username, setUsername] = useState(\".\");\n    const history = useHistory();\n    \n\n    const handleSubmit = async e => {\n        e.preventDefault();\n\n        if(username != \".\") {\n\n            const msg = {\n                username: username,\n                newPassword: Math.random().toString(36).replace(/[^a-z]+/g, '')\n            }\n\n            const response = await resetPassword(msg);\n            if(response.status == \"False\") {\n                document.getElementsByClassName(\"email-sent\")[0].style.display = \"none\";\n                document.getElementsByClassName(\"incorrect-username\")[0].style.display = \"block\";\n            } else {\n                document.getElementsByClassName(\"incorrect-username\")[0].style.display = \"none\";\n                document.getElementsByClassName(\"email-sent\")[0].style.display = \"block\";\n            }\n        }\n    }\n\n    const handleReturn = e => {\n        e.preventDefault();\n        history.push('/');\n    }\n\n\n    return (\n        <div className=\"forgot-password\">\n            <form onSubmit={handleSubmit}>\n                <h1>Forgot Password</h1>\n                <h2>Input your username</h2>\n                <input type=\"text\" placeholder=\"username\" onChange={e => setUsername(e.target.value)}/>\n                <div className=\"incorrect-username\" style={{display: 'none'}}>\n                    <h2>Incorrect username provided!</h2>\n                </div>\n                <div className=\"email-sent\" style={{display: 'none'}}>\n                    <h2>Email has been sent!</h2>\n                </div>\n                <button>Submit</button>\n            </form>\n            <button onClick={handleReturn}>Back to Login Page</button>\n        </div>\n        \n    );\n}\n \nexport default ForgotPassword;","import React, { useState } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\n\nimport Navbar from './Navbar'\nimport Home from './Home'\nimport CreateProject from './CreateProject'\nimport ProjectDetails from './ProjectDetails'\nimport PageNotFound from './PageNotFound'\nimport MyProfile from './MyProfile'\nimport User from './User'\nimport Users from './Users'\nimport AddUser from './AddUser'\nimport EditProject from './EditProject'\nimport Sidebar from './Sidebar'  \nimport EditUser from './EditUser'\nimport ProjectTasks from './ProjectTasks'\nimport AddProjectTask from './AddProjectTask'\nimport Login from './Login'\nimport useToken from './useToken'\nimport ChangePassword from './ChangePassword'\nimport ProjectsRegistry from './ProjectsRegistry'\nimport ForgotPassword from './ForgotPassword'\n\nfunction App() {\n\n  const { token, setToken } = useToken();\n\n  if(!token) {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/forgot-password\">\n            <ForgotPassword />\n          </Route>\n          <Route path=\"*\">\n            <Login setToken={setToken} />\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">    \n      <Sidebar />\n        <Navbar />\n        <div className=\"content\">   \n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/create-project\">\n              <CreateProject />\n            </Route>\n            <Route exact path=\"/add-user\">\n              <AddUser />  \n            </Route>\n            <Route exact path=\"/my-profile\">\n              <MyProfile />\n            </Route>\n            <Route exact path=\"/users\">\n              <Users />  \n            </Route>\n            <Route exact path=\"/users/change-password\">\n              <ChangePassword />\n            </Route>   \n            <Route exact path=\"/users/:username\">\n              <User />\n            </Route>\n            <Route exact path=\"/edit-user/:username\">\n              <EditUser />\n            </Route>   \n            <Route exact path=\"/projects\">\n              <ProjectsRegistry />  \n            </Route>        \n            <Route exact path=\"/projects/:id/add-task\">\n              <AddProjectTask />  \n            </Route>       \n            <Route exact path=\"/projects/:id/tasks\">\n              <ProjectTasks />          \n            </Route>\n            <Route exact path=\"/projects/:id\">\n              <ProjectDetails />\n            </Route>\n            <Route exact path=\"/edit-project/:id\">\n              <EditProject />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}