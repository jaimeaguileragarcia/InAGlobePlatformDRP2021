{"version":3,"sources":["Navbar.js","ProjectList.js","useFetch.js","Home.js","CreateProject.js","ProjectDetails.js","PageNotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","style","color","fontSize","borderRadius","to","ProjectList","projects","title","map","project","id","name","status","useFetch","url","useState","data","setData","error","setError","useEffect","fetch","then","res","ok","Error","json","catch","err","message","Home","filter","CreateProject","setName","desc","setDesc","setStatus","history","useHistory","onSubmit","e","preventDefault","newProject","method","headers","body","JSON","stringify","push","type","required","value","onChange","target","ProjectDetails","useParams","onClick","PageNotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.26528c8f.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar\" >\n            <a href=\"/\" style={{ \n                color: '#ff4e83',\n                fontSize: '20px',\n                borderRadius: '8px' \n            }}>InAGlobe Platform</a>\n            <div className=\"links\"> \n                <Link to={`/create-project`}>New Project</Link>\n                <Link to={`/`}>My Profile</Link>\n            </div>\n        </nav>\n    );\n}\n \nexport default Navbar;","import { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects, title }) => {\n\n    return (\n        <div className=\"project-list\">\n            <h2>{title}</h2>\n            {projects.map((project) => (\n                <div className=\"project-preview\" key={project.id}>\n                    <Link to={`/projects/${project.id}`}>\n                        <h2>{project.name}</h2>\n                        <h3>{project.status}</h3>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n}\n \nexport default ProjectList;","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(url)\n        .then(res => {\n            if (!res.ok) { // error coming back from server\n                throw Error('could not fetch the data for that resource');\n            } \n            return res.json();\n        })\n        .then(data => {\n            setData(data);\n            setError(null);\n        })\n        .catch(err => {\n            // auto catches network / connection error\n            setError(err.message);\n        })\n  }, [url])\n\n  return { data, error };\n}\n \nexport default useFetch;","import {useEffect, useState} from 'react'\nimport { Link } from \"react-router-dom\"\nimport ProjectList from './ProjectList'\nimport useFetch from './useFetch'\n\nconst Home = () => {\n    const [count, setCount] = useState(0);\n    const {data: projects, error} = useFetch(\"http://localhost:8000/projects\")\n\n    const handleAddNewProject = () => {\n        setCount(count + 1)\n        // open a new page where one can add a new project\n    }\n\n    return (\n        <div className=\"home\">\n            <h1>Dashboard</h1>\n                { error && <div>{error}</div>}\n\n                { projects && <ProjectList projects={projects} title=\"All Projects\"/> }\n                { projects && <ProjectList projects={projects.filter(project => project.status === \"Completed\")} title=\"Completed Projects\"/> }\n        </div>\n    );\n}\n \nexport default Home;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\nconst CreateProject = () => {\n    const [name, setName] = useState(\"Input project name\");\n    const [desc, setDesc] = useState(\"Add some awesome description!\");\n    const [status, setStatus] = useState(\"Available\");\n\n    const history = useHistory();\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const newProject = {name, desc, status}\n\n        fetch(\"http://localhost:8000/projects\", {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\"},\n            body: JSON.stringify(newProject)\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return (\n        <div className=\"create-project\">\n            <h2>Add a new project</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Project name</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <label>Description</label>\n                <textarea required value={desc} onChange={(e) => setDesc(e.target.value)}></textarea>\n                <label>Status</label>\n                <select value={status} onChange={(e) => setStatus(e.target.value)}>\n                    <option value=\"In Progress\">In Progress</option>\n                    <option value=\"Available\">Available</option>\n                    <option value=\"Completed\">Completed</option>\n                </select>\n                <button>Add project</button>\n            </form>\n        </div>\n    );\n}\n \nexport default CreateProject;","import { useHistory, useParams } from 'react-router';\nimport useFetch from './useFetch'\n\nconst ProjectDetails = () => {\n    const {id} = useParams();\n    const history = useHistory();\n\n    const {data: project, error} = useFetch('http://localhost:8000/projects/' + id);\n\n    const handleDelete = () => {\n        fetch(\"http://localhost:8000/projects/\" + project.id, {\n            method: 'DELETE'\n        }).then(() => {\n            history.push('/');\n        })\n    }\n\n    return ( \n        <div className=\"project-details\">\n            {error && <div>{error}</div>}\n            {project && <h2>{project.name}</h2>}\n            {project && <h3>Status: {project.status}</h3>}\n            {project && <p>{project.desc}</p>}\n\n            <button onClick={handleDelete}>Delete project</button>\n        </div>\n        \n     );\n}\n \nexport default ProjectDetails;","import { Link } from \"react-router-dom\"\n\nconst PageNotFound = () => {\n    return (\n        <div className=\"page-not-found\">\n            <h2>Something went wrong...</h2>\n            <p>That page cannot be found</p>\n            <Link to='/'>Back to the main page</Link>\n        </div>\n    );\n}\n \nexport default PageNotFound;","import Navbar from './Navbar'\nimport Home from './Home'\nimport CreateProject from './CreateProject'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport ProjectDetails from './ProjectDetails'\nimport PageNotFound from './PageNotFound'\n\n\nfunction App() {\n  const title =  \"Dashboard\"\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create-project\">\n              <CreateProject />\n            </Route>\n            <Route path=\"/projects/:id\">\n              <ProjectDetails />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}