"""Initial table

Revision ID: 35b6f4f7b2bd
Revises: 
Create Date: 2021-06-07 17:49:32.070686

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '35b6f4f7b2bd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    op.create_table(
        "project",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("tag", sa.String(), nullable=False),
        sa.Column("location", sa.String(), nullable=False),
        sa.Column("files", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("firstname", sa.String(), nullable=False),
        sa.Column("surname", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("bio", sa.String(), nullable=False),
        sa.Column("joined", sa.String(), nullable=False),
        sa.Column("location", sa.String(), nullable=False),
        sa.Column("availability", sa.String(), nullable=False),
        sa.Column("partnership_opportunities", sa.String(), nullable=False),
        sa.Column("interests", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("username"),
    )
    op.create_table(
        "user_project",
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"]),
        sa.ForeignKeyConstraint(["username"], ["user.username"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "todo",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("todo_desc", sa.String(), nullable=False),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        # think about priority type
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("completed", sa.Boolean(), nullable=False),
        sa.Column("due_date", sa.Date(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "project_tasks",
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["task_id"], ["task.id"]),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"]),
        sa.PrimaryKeyConstraint("task_id"),
    )
    op.create_table(
        "assigned_tasks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["task_id"], ["task.id"]),
        sa.ForeignKeyConstraint(["username"], ["user.username"]),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic ###
    op.drop_table("user")
    op.drop_table("project")
    op.drop_table("user_project")
    op.drop_table("todo")
    op.drop_table("task")
    op.drop_table("project_tasks")
    op.drop_table("assigned_tasks")
    # ### end Alembic commands ###
